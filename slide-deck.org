:PROPERTIES:
:ID:       092d7e4e-78a4-40ec-b11d-8c554d2fc102
:END:
#+Title: CFEngine in a day
#+Author: Nick Anderson
#+Email: nick.anderson@northern.tech
#+REVEAL_TITLE_SLIDE: <h1>%t</h1>
#+NO_REVEAL_ROOT: reveal.js
#+OPTIONS: reveal_center:t reveal_progress:t reveal_history:nil reveal_control:nil
#+OPTIONS: reveal_rolling_links:t reveal_keyboard:t reveal_overview:t num:nil
#+OPTIONS: reveal_width:1024 reveal_height:768
#+OPTIONS: toc:nil
#+OPTIONS: tags:nil timestamp:nil
#+OPTIONS: reveal_single_file:nil
#+OPTIONS: broken-links: t
#+REVEAL_MARGIN: 0.1
#+NO_REVEAL_EXTRA_CSS: cfengine.css
#+REVEAL_REVEAL_JS_VERSION: 4
#+REVEAL_MIN_SCALE: 0.5
#+REVEAL_MAX_SCALE: 2.5
#+REVEAL_TRANS: fade
#+REVEAL_THEME: solarized
#+REVEAL_TALK_URL: https://htmlpreview.github.io/?https://github.com/nickanderson/cfengine-training/blob/master/slide-deck.html
#+REVEAL_TALK_QR_CODE: does not exist
#+REVEAL_HLEVEL: 1
#+REVEAL_HEAD_PREAMBLE: <meta name="description" content="CFEngine in a Day">
#+REVEAL_POSTAMBLE: <p> CFEngine </p>
#+REVEAL_PLUGINS: (markdown notes)
#+PROPERTY: header-args :eval never-export
#+LINK: cfe-promiseType    https://docs.cfengine.com/master/reference-promise-types-%s.html
* Instructions :noexport:
** Light vs Dark
:PROPERTIES:
:ID:       42b7e0d6-8137-4858-bd47-ceecadbe0a49
:END:
Dark is best in dimly lit rooms, but light is best for /most/ events. So , always make a light and dark version. Don't forget to set the emacs theme! Since it's used for code highlighting, it matters.

- Light Theme ::
  - =#+REVEAL_THEME: solarized=

- Dark Themes
  - =#+REVEAL_THEME: black=

#+BEGIN_SRC sh
  #find reveal.js-3.9.2/css/theme -name "*.css" -printf "%f\n" | sed 's/.css//'
  find reveal.js/dist/theme -name "*.css" -printf "%f\n" | sed 's/.css//'
#+END_SRC

#+RESULTS:
| serif           |
| league-gothic   |
| source-sans-pro |
| black           |
| sky             |
| solarized       |
| league          |
| night           |
| moon            |
| simple          |
| blood           |
| beige           |
| white           |

** To get a PDF
- Export as HTML, view with Chromium or Chrome and add =?print-pdf= to the end of the url.
- Print to PDF
- Manually convert to landscape with ~qpdf~

#+NAME: rotate-pdf
#+BEGIN_SRC sh :var THEME="dark" :results output
  qpdf ~/PDF/CFEngine_in_a_day__DF.pdf --rotate=+90 slide_deck-$THEME.pdf
  stat slide_deck-$THEME.pdf
#+END_SRC

#+NAME: export-black
#+CALL: rotate-pdf(THEME="black")

#+RESULTS: export-black
:   File: slide_deck-black.pdf
:   Size: 27211584    Blocks: 53160      IO Block: 4096   regular file
: Device: fd01h/64769d	Inode: 41162887    Links: 1
: Access: (0664/-rw-rw-r--)  Uid: ( 1000/nickanderson)   Gid: ( 1000/nickanderson)
: Access: 2020-02-28 09:44:47.204523679 -0600
: Modify: 2020-02-28 09:47:11.110181166 -0600
: Change: 2020-02-28 09:47:11.110181166 -0600
:  Birth: -

#+NAME: export-solarized
#+CALL: rotate-pdf(THEME="solarized")

#+RESULTS: export-solarized
:   File: slide_deck-solarized.pdf
:   Size: 27383812    Blocks: 53496      IO Block: 4096   regular file
: Device: fd01h/64769d	Inode: 41202833    Links: 1
: Access: (0664/-rw-rw-r--)  Uid: ( 1000/nickanderson)   Gid: ( 1000/nickanderson)
: Access: 2020-02-27 08:06:14.783898075 -0600
: Modify: 2020-02-28 09:52:00.205736095 -0600
: Change: 2020-02-28 09:52:00.205736095 -0600
:  Birth: -

** Hackarounds
CFEngine src blocks that use macros error when exporting.
#+begin_example
  font-lock-fontify-keywords-region: Symbol’s value as variable is void: font-lock-error-face
#+end_example

This seemed to fix it:

#+BEGIN_SRC elisp
(setq font-lock-error-face 'font-lock-warning-face)
#+END_SRC

#+RESULTS:
: font-lock-warning-face

** Update reveal.js

#+begin_src sh :results output :exports both :var REVEALJSVERSION="4.4.0"
  exec 2>&1
  rm -rf reveal.js
  mkdir -p reveal.js
  cd reveal.js
  curl -LO "https://github.com/hakimel/reveal.js/archive/refs/tags/$REVEALJSVERSION.tar.gz"
  tar zxvf $REVEALJSVERSION.tar.gz --strip-components 1
  rm -f $REVEALJSVERSION.tar.gz
  :
#+end_src

#+RESULTS:
#+begin_example
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 1044k    0 1044k    0     0   881k      0 --:--:--  0:00:01 --:--:--  881k100 2531k    0 2531k    0     0  1875k      0 --:--:--  0:00:01 --:--:-- 9065k
reveal.js-4.4.0/.github/
reveal.js-4.4.0/.github/CONTRIBUTING.md
reveal.js-4.4.0/.github/FUNDING.yml
reveal.js-4.4.0/.github/workflows/
reveal.js-4.4.0/.github/workflows/js.yml
reveal.js-4.4.0/.gitignore
reveal.js-4.4.0/.npmignore
reveal.js-4.4.0/LICENSE
reveal.js-4.4.0/README.md
reveal.js-4.4.0/css/
reveal.js-4.4.0/css/layout.scss
reveal.js-4.4.0/css/print/
reveal.js-4.4.0/css/print/paper.scss
reveal.js-4.4.0/css/print/pdf.scss
reveal.js-4.4.0/css/reveal.scss
reveal.js-4.4.0/css/theme/
reveal.js-4.4.0/css/theme/README.md
reveal.js-4.4.0/css/theme/source/
reveal.js-4.4.0/css/theme/source/beige.scss
reveal.js-4.4.0/css/theme/source/black.scss
reveal.js-4.4.0/css/theme/source/blood.scss
reveal.js-4.4.0/css/theme/source/league.scss
reveal.js-4.4.0/css/theme/source/moon.scss
reveal.js-4.4.0/css/theme/source/night.scss
reveal.js-4.4.0/css/theme/source/serif.scss
reveal.js-4.4.0/css/theme/source/simple.scss
reveal.js-4.4.0/css/theme/source/sky.scss
reveal.js-4.4.0/css/theme/source/solarized.scss
reveal.js-4.4.0/css/theme/source/white.scss
reveal.js-4.4.0/css/theme/template/
reveal.js-4.4.0/css/theme/template/exposer.scss
reveal.js-4.4.0/css/theme/template/mixins.scss
reveal.js-4.4.0/css/theme/template/settings.scss
reveal.js-4.4.0/css/theme/template/theme.scss
reveal.js-4.4.0/demo.html
reveal.js-4.4.0/dist/
reveal.js-4.4.0/dist/reset.css
reveal.js-4.4.0/dist/reveal.css
reveal.js-4.4.0/dist/reveal.esm.js
reveal.js-4.4.0/dist/reveal.esm.js.map
reveal.js-4.4.0/dist/reveal.js
reveal.js-4.4.0/dist/reveal.js.map
reveal.js-4.4.0/dist/theme/
reveal.js-4.4.0/dist/theme/beige.css
reveal.js-4.4.0/dist/theme/black.css
reveal.js-4.4.0/dist/theme/blood.css
reveal.js-4.4.0/dist/theme/fonts/
reveal.js-4.4.0/dist/theme/fonts/league-gothic/
reveal.js-4.4.0/dist/theme/fonts/league-gothic/LICENSE
reveal.js-4.4.0/dist/theme/fonts/league-gothic/league-gothic.css
reveal.js-4.4.0/dist/theme/fonts/league-gothic/league-gothic.eot
reveal.js-4.4.0/dist/theme/fonts/league-gothic/league-gothic.ttf
reveal.js-4.4.0/dist/theme/fonts/league-gothic/league-gothic.woff
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/LICENSE
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-italic.eot
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-italic.ttf
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-italic.woff
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-regular.eot
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-regular.ttf
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-regular.woff
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-semibold.eot
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-semibold.ttf
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-semibold.woff
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-semibolditalic.eot
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-semibolditalic.ttf
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro-semibolditalic.woff
reveal.js-4.4.0/dist/theme/fonts/source-sans-pro/source-sans-pro.css
reveal.js-4.4.0/dist/theme/league.css
reveal.js-4.4.0/dist/theme/moon.css
reveal.js-4.4.0/dist/theme/night.css
reveal.js-4.4.0/dist/theme/serif.css
reveal.js-4.4.0/dist/theme/simple.css
reveal.js-4.4.0/dist/theme/sky.css
reveal.js-4.4.0/dist/theme/solarized.css
reveal.js-4.4.0/dist/theme/white.css
reveal.js-4.4.0/examples/
reveal.js-4.4.0/examples/assets/
reveal.js-4.4.0/examples/assets/beeping.txt
reveal.js-4.4.0/examples/assets/beeping.wav
reveal.js-4.4.0/examples/assets/image1.png
reveal.js-4.4.0/examples/assets/image2.png
reveal.js-4.4.0/examples/auto-animate.html
reveal.js-4.4.0/examples/backgrounds.html
reveal.js-4.4.0/examples/barebones.html
reveal.js-4.4.0/examples/layout-helpers.html
reveal.js-4.4.0/examples/markdown.html
reveal.js-4.4.0/examples/markdown.md
reveal.js-4.4.0/examples/math.html
reveal.js-4.4.0/examples/media.html
reveal.js-4.4.0/examples/multiple-presentations.html
reveal.js-4.4.0/examples/transitions.html
reveal.js-4.4.0/gulpfile.js
reveal.js-4.4.0/index.html
reveal.js-4.4.0/js/
reveal.js-4.4.0/js/components/
reveal.js-4.4.0/js/components/playback.js
reveal.js-4.4.0/js/config.js
reveal.js-4.4.0/js/controllers/
reveal.js-4.4.0/js/controllers/autoanimate.js
reveal.js-4.4.0/js/controllers/backgrounds.js
reveal.js-4.4.0/js/controllers/controls.js
reveal.js-4.4.0/js/controllers/focus.js
reveal.js-4.4.0/js/controllers/fragments.js
reveal.js-4.4.0/js/controllers/keyboard.js
reveal.js-4.4.0/js/controllers/location.js
reveal.js-4.4.0/js/controllers/notes.js
reveal.js-4.4.0/js/controllers/overview.js
reveal.js-4.4.0/js/controllers/plugins.js
reveal.js-4.4.0/js/controllers/pointer.js
reveal.js-4.4.0/js/controllers/print.js
reveal.js-4.4.0/js/controllers/progress.js
reveal.js-4.4.0/js/controllers/slidecontent.js
reveal.js-4.4.0/js/controllers/slidenumber.js
reveal.js-4.4.0/js/controllers/touch.js
reveal.js-4.4.0/js/index.js
reveal.js-4.4.0/js/reveal.js
reveal.js-4.4.0/js/utils/
reveal.js-4.4.0/js/utils/color.js
reveal.js-4.4.0/js/utils/constants.js
reveal.js-4.4.0/js/utils/device.js
reveal.js-4.4.0/js/utils/loader.js
reveal.js-4.4.0/js/utils/util.js
reveal.js-4.4.0/package-lock.json
reveal.js-4.4.0/package.json
reveal.js-4.4.0/plugin/
reveal.js-4.4.0/plugin/highlight/
reveal.js-4.4.0/plugin/highlight/highlight.esm.js
reveal.js-4.4.0/plugin/highlight/highlight.js
reveal.js-4.4.0/plugin/highlight/monokai.css
reveal.js-4.4.0/plugin/highlight/plugin.js
reveal.js-4.4.0/plugin/highlight/zenburn.css
reveal.js-4.4.0/plugin/markdown/
reveal.js-4.4.0/plugin/markdown/markdown.esm.js
reveal.js-4.4.0/plugin/markdown/markdown.js
reveal.js-4.4.0/plugin/markdown/plugin.js
reveal.js-4.4.0/plugin/math/
reveal.js-4.4.0/plugin/math/katex.js
reveal.js-4.4.0/plugin/math/math.esm.js
reveal.js-4.4.0/plugin/math/math.js
reveal.js-4.4.0/plugin/math/mathjax2.js
reveal.js-4.4.0/plugin/math/mathjax3.js
reveal.js-4.4.0/plugin/math/plugin.js
reveal.js-4.4.0/plugin/notes/
reveal.js-4.4.0/plugin/notes/notes.esm.js
reveal.js-4.4.0/plugin/notes/notes.js
reveal.js-4.4.0/plugin/notes/plugin.js
reveal.js-4.4.0/plugin/notes/speaker-view.html
reveal.js-4.4.0/plugin/search/
reveal.js-4.4.0/plugin/search/plugin.js
reveal.js-4.4.0/plugin/search/search.esm.js
reveal.js-4.4.0/plugin/search/search.js
reveal.js-4.4.0/plugin/zoom/
reveal.js-4.4.0/plugin/zoom/plugin.js
reveal.js-4.4.0/plugin/zoom/zoom.esm.js
reveal.js-4.4.0/plugin/zoom/zoom.js
reveal.js-4.4.0/test/
reveal.js-4.4.0/test/assets/
reveal.js-4.4.0/test/assets/external-script-a.js
reveal.js-4.4.0/test/assets/external-script-b.js
reveal.js-4.4.0/test/assets/external-script-c.js
reveal.js-4.4.0/test/assets/external-script-d.js
reveal.js-4.4.0/test/simple.md
reveal.js-4.4.0/test/test-auto-animate.html
reveal.js-4.4.0/test/test-dependencies-async.html
reveal.js-4.4.0/test/test-dependencies.html
reveal.js-4.4.0/test/test-grid-navigation.html
reveal.js-4.4.0/test/test-iframe-backgrounds.html
reveal.js-4.4.0/test/test-iframes.html
reveal.js-4.4.0/test/test-markdown.html
reveal.js-4.4.0/test/test-multiple-instances-es5.html
reveal.js-4.4.0/test/test-multiple-instances.html
reveal.js-4.4.0/test/test-pdf.html
reveal.js-4.4.0/test/test-plugins.html
reveal.js-4.4.0/test/test-state.html
reveal.js-4.4.0/test/test.html
#+end_example


#+BEGIN_SRC sh
 # find reveal.js-3.9.2/css/theme -name "*.css" -printf "%f\n" | sed 's/.css//'
  find reveal.js/dist/theme -name "*.css" -printf "%f\n" | sed 's/.css//'
#+END_SRC

#+RESULTS:

* Before we start
:PROPERTIES:
:ID:       27318943-487d-4805-a592-26281f4f5bb2
:reveal_extra_attr: data-timing="120"
:END:
** Schedule
:PROPERTIES:
:ID:       c3399d41-b849-41b7-b113-b6c8bec076a0
:END:

#+CAPTION: A rough schedule (this varies greatly).
| Time                | Activity        |
|---------------------+-----------------|
| 09:00 AM - 10:30 AM | Class           |
| 10:30 AM - 11:00 AM | Morning break   |
| 11:00 AM - 12:30 PM | Class           |
| 12:30 PM - 01:30 PM | Lunch break     |
| 01:30 PM - 03:00 PM | Class           |
| 03:00 PM - 03:30 PM | Afternoon break |
| 03:30 PM - 05:00 PM | Class           |

#+CAPTION: Speaker Notes
#+begin_notes
- Who will volunteer to *remind me of breaks*?
#+end_notes

#+BEGIN_COMMENT
- [2020-03-09 Mon]
  - Started at 8
  - Stopped for break before language at 9:40
  - Broke for lunch
  - Resumed 12:23
  - Finished examples by 3pm
#+END_COMMENT

** Use the source
:PROPERTIES:
:ID:       5be6e6a0-0539-4103-8677-6fafbeef2511
:END:

[[https://github.com/nickanderson/cfengine-training][github.com/nickanderson/cfengine-training]]

#+CAPTION: Speaker Notes
#+begin_notes
See a *mistake*? Please consider submitting a Pull Request.
#+end_notes

** Hi, I'm Nick
:PROPERTIES:
:ID:       a122e01c-8345-44d6-977f-ace81375a540
:END:

- Wife, 2 kids and a dog
- Sysadmin/Infrastructure Engineer/Doer of things
- CFEngineering since ~2010
- Find me online
  - [[mailto:nick@cmdln.org][nick@cmdln.org]] | [[mailto:nick.anderson@cfengine.com][nick.anderson@northern.tech]]
  - [[https://twitter.com/cmdln_][@cmdln_]]
  - [[http://www.cmdln.org][cmdln.org]]
  - [[https://linkedin.com/in/hithisisnick][linkedin.com/in/hithisisnick]]
  - [[https://sks-keyservers.net/pks/lookup?op=get&search=0x9EB3AD425D1CCC11][=9274 E588 E866 A10B 713C  9CCD 9EB3 AD42 5D1C CC11=]]

#+CAPTION: Speaker Notes
#+begin_notes
  I have worked in a wide variety of environments:
  - Geek on wheels
  - One man IT department
  - E-commerce
  - Large Enterprise
  - High Performance Computing
  - Usually working closely with developers
#+end_notes
** Who are you?
:PROPERTIES:
:ID:       b0c328e7-2675-48e4-80f4-75003bb0e09b
:END:

- Name
- Role
- Goals for this training

* What this training covers
- What is CFEngine
- High level architecture overview
- Language fundamentals (through CFEngine 3.21.0)
- Examples and Exercises
- Useful tooling and tips
* Why Automation?
:PROPERTIES:
:ID:       4154199e-2aab-4080-99e4-3870373a4327
:END:

#+BEGIN_QUOTE
  Every time someone logs onto a system by hand, they jeopardize everyone's
  understanding of the system. -- Mark Burgess
#+END_QUOTE

* What is CFEngine?
:PROPERTIES:
:ID:       3b1b50d5-c41a-49d7-9af4-5c65963a957e
:END:

- Modern
- Secure
- Scalable
- Agile *infrastructure automation tool*

#+CAPTION: Speaker Notes
#+begin_notes
  Designed to enable continuous operations using a distributed model based approach.

  - Modern :: Understands complex data structures (JSON, YAML, CSV).
#+end_notes

** History
- Written by [[https://en.wikipedia.org/wiki/Mark_Burgess_(computer_scientist)][Mark Burgess]]
- Originally released in 1993.
- [[http://people.scs.carleton.ca/~soma/biosec/readings/burgess-immunology.pdf][Computer Immunology]] (Self Healing) 1998
- CFEngine 2 (1998)
- [[http://download.springer.com/static/pdf/884/chp%25253A10.1007%25252F11568285_9.pdf][Promise Theory]] (2005)
- CFEngine 3 (2008)
- Company Founded (2008)

#+CAPTION: Speaker Notes
#+begin_notes
  - Wait, it's been around since 1993, what makes it /modern/? :: Understands complex data structures (JSON, YAML, CSV).
#+end_notes

** Small
:PROPERTIES:
:ID:       a6f4338f-6820-4047-b286-ee33ca152158
:END:

As of Feb 2020:

- [[https://lgtm.com/projects/g/cfengine/core/context:cpp][Lines of code]] ~ 115k
- ~ 6M Package size
- Memory Utilization: ~ 80MB
  - cf-agent ~ 30MB
  - cf-serverd ~ 30MB
  - cf-execd ~10MB
  - cf-monitord ~ 10MB

** Secure
:PROPERTIES:
:ID:       8576f075-ad2b-494d-9b08-c5f1c1561031
:END:

A good track record.

- http://web.nvd.nist.gov/view/vuln/search

** Portable                                                         :ATTACH:
:PROPERTIES:
:ID:       4d85802b-4bd6-4473-be8c-4add03fa9c6c
:Attachments: laser-cutting_2016-10-15_14-46-28.jpg waratah-trains_2016-10-15_14-55-13.jpg rover-deploy-2_2016-10-15_15-07-51.jpg server-farm-shot_2016-10-15_15-08-07.jpg raspberry_pi_b_2_0_0_2016-10-15_15-09-16.jpg Where%20CFEngine%20Runs_2016-10-15_15-18-02.png Where%20CFEngine%20Runs_2016-10-15_15-18-26.png Where_CFEngine_Runs_2016-10-15_15-20-42.png
:END:

Known to run on many platforms, and interesting places.

#+DOWNLOADED: file:///home/nickanderson/Downloads/Where_CFEngine_Runs.png @ 2016-10-15 15:20:42
#+ATTR_HTML: :width 600
[[file:data/4d/85802b-4bd6-4473-be8c-4add03fa9c6c/Where_CFEngine_Runs_2016-10-15_15-20-42.png]]

#+CAPTION: Speaker Notes
#+begin_notes
- Platforms: Linux, HPUX, Solaris (sparc/x86), AIX, Windows, Android,
- Largest known plant is ~1M nodes
- Smart infrastructure (interactive bus signs in France)
  * Interactive Bus Signs in France
  * Automated payment system collections
- Lasers (that make puppets)
  * From Hallway track at LISA 2013
- Dialysis Machines (over 50% of machines in the US)
  * From user report
- Appliances
  - Ezuce sipXecs (Voip), [[https://sipfoundry.atlassian.net/wiki/display/sipXecs/cfengine+tips][Blog Post]]
  - StashNode Pro, [[https://github.com/Cryptoo/cfengine][Cryptoo]]
    - DMZ
    - Tor
    - Bitcoin
    - Bittorrent
#+end_notes

** Resilient & Autonomous                                           :ATTACH:
:PROPERTIES:
:ID:       2981a0e7-5430-44bd-84b3-32928fbdeea1
:Attachments: flesh_wound_2016-10-15_15-24-06.jpg
:END:

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
#+DOWNLOADED: https://hbr.org/resources/images/article_assets/2015/01/JAN15_05_179787493.jpg @ 2020-02-18 11:16:51
#+ATTR_HTML: :width 800
[[file:data/29/81a0e7-5430-44bd-84b3-32928fbdeea1/2020-02-18_11-16-51_JAN15_05_179787493.jpg]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- Policy cached locally
- Decisions made locally
- Actions taken locally
- Convergence, repair what you can and revisit soon
#+REVEAL_HTML: </div>

#+CAPTION: Speaker Notes
#+begin_notes
  - Rely on others as little as possible
  - Failures don't block by default
  - Run frequently
    - Who's written a script?
    - When it's time to execute that script 6 months later, what do you do?
#+end_notes
** Declarative                                                      :ATTACH:
:PROPERTIES:
:ID:       a6e60c34-5641-48b6-913b-85e54fa9effd
:Attachments: declarative_vs_imperative_crop_2016-10-15_15-28-37.png
:END:

Focus on the *desired end state*.

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
- The GOAL
- Align with business priorities
- Less about How specifically you want to arrive somewhere, and more about what specifically you want in the end.
  - I want my steak medium rare.
  - vs
  - I want a 22mm thick steak, cooked at 325 degrees for 3.5 minutes on each side.
#+END_NOTES

#+REVEAL: split

#+DOWNLOADED: http://lh6.ggpht.com/_dIvFa14S0yc/Sj0WX0c9kSI/AAAAAAAAG18/qer_Oef9wXY/image%5B8%5D.png @ 2016-10-15 15:28:37
[[file:data/a6/e60c34-5641-48b6-913b-85e54fa9effd/declarative_vs_imperative_crop_2016-10-15_15-28-37.png]]

** Declarative vs Imperative
:PROPERTIES:
:ID:       863dd604-7851-4f02-9134-e0bee2d00d8a
:END:

#+CAPTION: openssh-server should be installed and up to date
#+BEGIN_EXAMPLE
  bundle agent main             | #!/bin/env/bash
  {                             | PKG="openssh-server"
    packages:                   | rpm -q ${PKG} || yum install ${PKG}
         "openssh-server"       | yum check-update openssh-server
           policy => "present", | if [ $? -eq 100 ]; then
           version => "latest"; |   yum upgrade openssh-server
  }                             | fi
#+END_EXAMPLE

#+CAPTION: Speaker Notes
#+begin_notes
Goals & Way-points vs Strict Order of operations

It works kind of like a GPS. It doesn't matter where you start, or the wrong
turns you make it will continually re-route to reach the destination. And your
still responsible for driving, the GPS doesn't drive your car (would you trust
it to? (Alaskan airports, ponds, fields, etc ...)

http://blog.aggregatedintelligence.com/2009/06/difference-between-imperative-and.html
http://channel9.msdn.com/blogs/pdc2008/tl16
#+end_notes

** Typical use cases
- Any *local* resource/state
  - Manage files, processes, commands
- Security Hardening
- Compliance
- Application Deployment/Management
- Inventory

#+CAPTION: Speaker Notes
#+begin_notes
  - Interesting places:
    - Industrial (lazer cutters, water testing devices)
    - Smart Infrastructure (Trains, Trams, Signs, Grocery Shopper Behaviour)
  - Integrating CFEngine with other services
    - Set environment from ServiceNow CMDB
      - Hub caches information from ServiceNow, provided to agents as structured data
  - Extrememly dynamic policies
    - When production host has deviated from "normal" amount of outbound ssh
      connections kill ssh sessions, firewall host, ticket.
#+end_notes

* Editions
:PROPERTIES:
:ID:       e335ea4b-6720-4d7e-9867-aefacee9797e
:END:
** Community (core)
:PROPERTIES:
:ID:       ef0d1800-194b-4748-a9cb-8bfa83c19a47
:END:

- [[https://github.com/cfengine/core][Github]]
- [[https://cfengine.com/product/community/source-code/][Tarballs]]
- [[https://cfengine.com/product/community/][Binary Packages]]
- [[https://cfengine.com/product/community/cfengine-linux-distros/][Linux Package Repositories]]

** Enterprise Features
:PROPERTIES:
:ID:       6214cee3-03c7-48c9-840a-6c87fb05a236
:END:

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
- Mission Portal (Web UI)
- Alerts and Triggered Actions
- Inventory Reporting
- Change Reporting
- Compliance Reporting
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- File Integrity Monitoring
- Measurements
- REST APIs
- SQL Reporting
- Single Pane of Glass Reporting
#+REVEAL_HTML: </div>

#+CAPTION: How to do two columns in org-reveal
#+BEGIN_COMMENT
https://emacs.stackexchange.com/a/39154
#+END_COMMENT

** Enterprise
:PROPERTIES:
:ID:       2fad1e0b-62b7-4b95-904e-8ac793084aa5
:END:

- [[https://docs.cfengine.com/latest/guide-installation-and-configuration-general-installation-installation-enterprise-vagrant.html][Vagrant Environment]]
- [[http://cfengine.com/product/cfengine-enterprise-free-25/][Binary Packages]]

** Release schedule

- Every 6 months
- New LTS series every 1.5 years

** Current Releases

- 3.15 ( December 2019 - December 2022 )
  - 3.15.6 ( June 2022 )

- 3.18 ( June 2021 - June 2024 )
   - 3.18.2 ( June 2022 )

- 3.21 ( Q4 2022 - Q4 2025 )
  - 3.21.0 ( Q4 2022 )

* Tools
** ~cf-remote~

Tooling to facilitate the deployment of CFEngine.

#+begin_src sh :results output :exports results
  exec 2>&1
  #cf-remote --help
  cf-remote --help | sed -n '/.*Commands.*/,${p}'
  :
#+end_src

#+RESULTS:
#+begin_example
Commands (use cf-remote COMMAND --help to get more info):
  {info,install,uninstall,packages,list,download,run,save,sudo,scp,spawn,show,destroy,deploy}
    info                Get info about the given hosts
    install             Install CFEngine on the given hosts
    uninstall           Install CFEngine on the given hosts
    packages            Get info about available packages
    list                List CFEngine packages available for download
    download            Download CFEngine packages
    run                 Run the command given as arguments on the given hosts
    save                Save host(s) with a group name to use in other
                        commands
    sudo                Run the command given as arguments on the given hosts
                        with 'sudo'
    scp                 Copy the given file to the given hosts
    spawn               Spawn hosts in the clouds
    show                Show hosts spawned by or added to cf-remote
    destroy             Destroy hosts spawned in the clouds
    deploy              Deploy policy-set (masterfiles) to hub
#+end_example


*** Install ~cf-remote~

#+begin_src sh :results output :exports code
  exec 2>&1
  pip3 install cf-remote
  :
#+end_src

*** Install and bootstrap with ~cf-remote~

#+Caption: Install and bootstrap remote hosts
#+BEGIN_SRC shell :results code
  cf-remote install --hub 34.252.28.73 --bootstrap 172.31.30.237
#+END_SRC

*** Learn more about ~cf-remote~

- https://cfengine.com/tags/cf-remote/
- https://github.com/cfengine/core/tree/master/contrib/cf-remote

** ~cfbs~
Manage CFEngine Build projects (adding modules, policy files, updating etc.)

#+begin_src sh :results output :exports results
  exec 2>&1
  cfbs help | sed -n '/.*usage:.*/,/.*options:/{/.*options:*/!p}'
  :
#+end_src

#+RESULTS:
#+begin_example
usage: cfbs [-h] [--loglevel LOGLEVEL] [--version] [--force]
            [--non-interactive] [--index INDEX] [--check]
            [--checksum CHECKSUM] [--keep-order] [--git {yes,no}]
            [--git-user-name GIT_USER_NAME] [--git-user-email GIT_USER_EMAIL]
            [--git-commit-message GIT_COMMIT_MESSAGE] [--ignore-versions-json]
            [cmd] [args ...]

CFEngine Build System.

positional arguments:
  cmd                   The command to perform (add, build, clean, commit,
                        download, help, info, init, input, install, pretty,
                        remove, search, show, status, update, validate)
  args                  Command arguments

#+end_example

*** Install ~cfbs~

#+begin_src sh :results output :exports code
  exec 2>&1
  pip3 install cfbs
  :
#+end_src

*** Initialize a project

#+begin_src sh :results output :exports code
  exec 2>&1
  cfbs init
  :
#+end_src

*** Build a project

#+begin_src sh :results output :exports code
  exec 2>&1
  cfbs build
  :
#+end_src
** ~cf-locate~
:PROPERTIES:
:ID:       aa03c0a5-ec8b-472f-bf96-c15c1227f8aa
:END:

- =cf-locate= :: Command line tool to help locate and optionally display a body
     or bundle within a policy

#+CAPTION: Speaker Notes
#+begin_notes
  Ever read a policy and see a body that you want to understand more?

  Try it with ~cf-locate scoped_classes_generic -f /path_to_masterfiles~
#+end_notes

*** Installing ~cf-locate~

It's a perl script and you will need =File::HomeDir=.

#+begin_src sh :results output :exports both
  exec 2>&1
  sudo apt install libfile-homedir-perl
  curl https://raw.githubusercontent.com/cfengine/core/master/contrib/cf-locate/cf-locate --output ~/.local/bin/cf-locate
  chmod 700 ~/.local/bin/cf-locate
  :
#+end_src

*** Using cf-locate

#+begin_src sh :results output :exports both
  exec 2>&1
  ~/.local/bin/cf-locate results | ansi2txt
  :
#+end_src

#+RESULTS:
: -> body or bundle matching 'results' found in /home/nickanderson/.cfagent/inputs/failsafe.cf:463
: body classes failsafe_results(scope, class_prefix)
: -> body or bundle matching 'results' found in /home/nickanderson/.cfagent/inputs/lib/common.cf:225
: body classes results(scope, class_prefix)
: -> body or bundle matching 'results' found in /home/nickanderson/.cfagent/inputs/lib/common.cf:322
: body classes diff_results(scope, x)

** ~masterfiles-stage~

- Maintain multiple checkouts of policy sets.

#+CAPTION: Speaker notes
#+begin_notes
- Useful for implementing policy channels
- Installed with CFEngine Enterprise Hub
#+end_notes

* Client/Server Architecture                                         :ATTACH:
:PROPERTIES:
:ID:       66fd45c5-3f73-49e4-a938-ec3ecbdcd8ef
:Attachments: client_server_architecture_2016-10-15_15-57-49.png
:END:

#+DOWNLOADED: file:///tmp/mozilla_nickanderson0/Client%20Server%20Architecture.png @ 2020-02-18 11:34:56
#+ATTR_HTML: :width 800
[[file:data/66/fd45c5-3f73-49e4-a938-ec3ecbdcd8ef/2020-02-18_11-34-56_ClientServerArchitecture.png]]

** Client Server Communications
:PROPERTIES:
:ID:       a4baabe0-6dda-42b1-9961-678f3bfa5a0c
:END:

- Utilizes port 5308 (~grep 5308 /etc/services~)
- Encrypted (TLS)
- Public key authentication (*key exchange required*)
- Agents download policy from hub
- Hub downloads reports from remote agents

#+CAPTION: Speaker Notes
#+begin_notes
  - Policy servers typically bootstrap to themselves
  - SSH-like model (public/private keypair)
  - There is no Certificate Authority that can be compromised
#+end_notes

* Agent Components                                                  :ATTACH:
:PROPERTIES:
:ID:       21633eaf-2b0a-4fef-a25f-7760276b0a5d
:Attachments: cfengine_agent_components_diagram_2016-10-15_16-01-34.png
:END:

** Agent Components
:PROPERTIES:
:ID:       a2500d9e-1b71-4438-9553-daf5e13c226c
:END:


[[file:data/21/633eaf-2b0a-4fef-a25f-7760276b0a5d/cfengine_agent_components_diagram_2016-10-15_16-01-34.png]]

** =cf-hub=                                                          :ATTACH:
:PROPERTIES:
:ID:       98b666a6-d302-47e4-b164-b6653bcca1a8
:Attachments: cfengine_agent_components_diagram_cf-hub_2016-10-15_16-03-31.png
:END:

[[file:data/98/b666a6-d302-47e4-b164-b6653bcca1a8/cfengine_agent_components_diagram_cf-hub_2016-10-15_16-03-31.png]]

#+REVEAL: split

- Collects reports from remote agents
- Obeys "=common control=" and "=hub control=" bodies

#+CAPTION: Speaker Notes
#+begin_notes
  - Runs on the Enterprise Hub, talks to cf-serverd on remote agent on port 5308
  - Collect reports from remote agents
  - Obeys "=common control=" and "=hub control=" bodies
#+end_notes
** =cf-runagent=                                                    :ATTACH:
:PROPERTIES:
:ID:       9c2d7c2f-c5e3-47b2-b7df-fdf875f38643
:Attachments: cfengine_agent_components_diagram_cf-runagent_2016-10-15_21-11-14.png
:END:

[[file:data/9c/2d7c2f-c5e3-47b2-b7df-fdf875f38643/cfengine_agent_components_diagram_cf-runagent_2016-10-15_21-11-14.png]]

#+REVEAL: split

- Requests invocation of cf-agent on remote hosts
- Cannot invoke arbitrary commands
- Define classes to modify behavior (=--define=)
- Specify bundlesequence (=--remote-bundles=)

#+CAPTION: Speaker Notes
#+begin_notes
- Invokes cf-agent on remote hosts
  - Requires established trust
  - Normally run from server to “ping” the clients
- Normally run on the server to “ping” the clients
- Cannot invoke arbitrary commands - just wake up cf-agent
- Define classes to modify behavior
- Specify bundlesequence (=--remote-bundles= added in 3.10)
#+end_notes

** =cf-serverd=                                                     :ATTACH:
:PROPERTIES:
:ID:       9f5cf6c5-5e00-49f9-8392-5cec4c2bb9ea
:Attachments: cfengine_agent_components_diagram_cf-serverd_2016-10-15_21-16-21.png
:END:

[[file:data/9f/5cf6c5-5e00-49f9-8392-5cec4c2bb9ea/cfengine_agent_components_diagram_cf-serverd_2016-10-15_21-16-21.png]]

#+REVEAL: split

- Listens for connections on *TCP/5308*
- Enforces access control and authentication
- Serves files
- Serves =cf-runagent= requests
- Serves reports to =cf-hub=
- Runs on both server and clients
- Evaluates "=common=" and "=server=" bundles
- Obeys body "=server control="

#+CAPTION: Speaker Notes
#+begin_notes
- Listens for connections on *TCP/5308*
- Enforces access control and authentication
- Serves files
- Serves =cf-runagent= requests
- Serves reports to =cf-hub=
- Runs on both server and clients
- Evaluates "=common=" and "=server=" bundles
- Obeys body "=server control="
#+end_notes

** =cf-key=                                                         :ATTACH:
:PROPERTIES:
:ID:       57b0a68d-ece6-4ffc-81e3-cc84b6009b35
:Attachments: cfengine_agent_components_diagram_cf-key_2016-10-15_21-18-51.png
:END:

[[file:data/57/b0a68d-ece6-4ffc-81e3-cc84b6009b35/cfengine_agent_components_diagram_cf-key_2016-10-15_21-18-51.png]]

#+REVEAL: split

- Show recent connections
- Manage trust of public keys
- Generates key pairs
- Installs Enterprise License

#+CAPTION: Speaker notes
#+begin_notes
- Show recent connections
- Manage trust of public keys
- Generates key pairs
- Installs Enterprise License
#+end_notes

** =cf-promises=                                                    :ATTACH:
:PROPERTIES:
:ID:       52bb3c22-18bf-4c80-82ba-0aad82ea1393
:Attachments: cfengine_agent_components_diagram_cf-promises_2016-10-15_21-21-02.png
:END:

[[file:data/52/bb3c22-18bf-4c80-82ba-0aad82ea1393/cfengine_agent_components_diagram_cf-promises_2016-10-15_21-21-02.png]]

#+REVEAL: split

- Checks Syntax
- Dump Syntax (~cf-promises --syntax-description~
- Tag Policy Releases (~cf-promises --tag-release~)
- Show first order Variables and Classes (~cf-promises --show-vars --show-classes~

#+CAPTION: Speaker notes
#+begin_notes
- Checks Syntax
- Dump Syntax (~cf-promises --syntax-description~
- Tag Policy Releases (~cf-promises --tag-release~)
- Show first order Variables and Classes (~cf-promises --show-vars --show-classes~
#+end_notes

** =cf-monitord=                                                      :ATTACH:
:PROPERTIES:
:ID:       bcd33f08-1c02-4d78-b118-a98bf6986040
:Attachments: cfengine_agent_components_diagram_cf-monitord_2016-10-15_21-22-23.png
:END:

[[file:data/bc/d33f08-1c02-4d78-b118-a98bf6986040/cfengine_agent_components_diagram_cf-monitord_2016-10-15_21-22-23.png]]

#+REVEAL: split

- Measures things
- Defines =mon.*= variables
- Defines classes based on anomaly detection
- Evaluates "=common=" and "=monitor=" bundles
- Obeys "=common control=" and "=monitor control=" bodies

#+CAPTION: Speaker notes
#+begin_notes
- =mon.*= variables record average, last, and deviation
- Anomaly classes =ssh_in_high=, =ssh_out_high_dev3=
- Next .... cf-execd
#+end_notes

** =cf-execd=                                                       :ATTACH:
:PROPERTIES:
:ID:       3c3c8cee-7086-4250-9152-21ca5879c2b2
:Attachments: cfengine_agent_components_diagram_cf-execd_2016-10-15_21-24-05.png
:END:

[[file:data/3c/3c8cee-7086-4250-9152-21ca5879c2b2/cfengine_agent_components_diagram_cf-execd_2016-10-15_21-24-05.png]]

#+REVEAL: split

- Executes =cf-agent= periodically
- Controls period and splay time
- Collects, stores, and sends output
- Evaluates "=common=" bundles
- Obeys "=executor control=" body

#+CAPTION: Speaker notes
#+begin_notes
- splay time is the amount of time an agent waits before actually doing the scheduled execution
- Emails output generated by scheduled command
- Next ... cf-agent
#+end_notes

** =cf-agent=                                                       :ATTACH:
:PROPERTIES:
:ID:       b49a887f-6963-4b7c-a131-fcd2c0794be0
:Attachments: cfengine_agent_components_diagram_cf-agent_2016-10-15_21-25-11.png
:END:

[[file:data/b4/9a887f-6963-4b7c-a131-fcd2c0794be0/cfengine_agent_components_diagram_cf-agent_2016-10-15_21-25-11.png]]

#+REVEAL: split

- The catalyst or instigator of change
- Evaluates "=agent=" and "=common=" bundles
- Obeys "=common control=" and "=agent control=" bodies.
- By default runs =$(sys.default_policy_path)=
  - Privileged : =/var/cfengine/inputs/promises.cf=
  - Unprivileged: =~/.cfagent/inputs/promises.cf=
- Actuates =body common control= /bundlesequence/ if defined, or bundle /__main__/ or bundle /main/

#+CAPTION: Speaker notes
#+begin_notes
 - =cf-agent= is the agent of change, its the pointy end of the stick, or the dangerous end of the gun.
- This is the component that you will interact with most commonly.
#+end_notes

** =cf-secret=

- Encrypts and decrypts files using CFEngine keys

#+CAPTION: Speaker notes
#+begin_notes
  - New in 3.16.0, backported to 3.15.2
#+end_notes

** =cf-check=

#+name: cf-check help
#+caption: Shell command with stderr
#+begin_src sh :results output :exports results
  exec 2>&1
  cf-check help
  :
#+end_src

- Inspect, validate, and repair embedded databases

#+RESULTS: cf-check help
#+begin_example

cf-check:
	Utility for diagnosis and repair of local CFEngine databases.
	This BETA version of the tool is for testing purposes only.

Commands:
	dump - Print the contents of a database file
	diagnose - Assess the health of one or more database files
	backup - Copy database files to a timestamped folder
	repair - Diagnose, then backup and delete any corrupt databases
	version - Print version information
	help - Print this help menu

Usage:
	$ cf-check <command> [options] [file ...]

Examples:
	$ cf-check dump /var/cfengine/state/cf_lastseen.lmdb
	$ cf-check lmdump -a /var/cfengine/state/cf_lastseen.lmdb
	$ cf-check diagnose
	$ cf-check repair

#+end_example

** =cf-net=

#+name: cf-net help
#+begin_src sh :results output :exports results
  exec 2>&1
  cf-net help
  :
#+end_src

- Command line utility for interacting with ~cf-serverd~ as a client

#+RESULTS: cf-net help
#+begin_example
Usage: cf-net [OPTIONS] COMMAND

Options:
  --help        , -h       - Print the help message
  --manpage     , -M       - Print the man page
  --host        , -H value - Server hostnames or IPs, comma-separated (defaults to policy server)
  --debug       , -d       - Enable debugging output
  --verbose     , -v       - Enable verbose output
  --log-level   , -g value - Specify how detailed logs should be. Possible values: 'error', 'warning', 'notice', 'info', 'verbose', 'debug'
  --inform      , -I       - Enable basic information output
  --tls-version , -t value - Minimum TLS version to use
  --ciphers     , -c value - TLS ciphers to use (comma-separated list)

Commands:
  help         - Prints general help or per topic.
                 Usage: cf-net help [command]
  connect      - Checks if host(s) is available by connecting.
                 Usage: cf-net -H 192.168.50.50,192.168.50.51 connect
  stat         - Look at type of file.
                 Usage: cf-net stat masterfiles/update.cf
  get          - Get file from server.
                 Usage: cf-net get masterfiles/update.cf -o download.cf [-jNTHREADS]
			(%d can be used in both the remote and output file paths when '-j' is used)
  opendir      - List files and folders in a directory.
                 Usage: cf-net opendir masterfiles

Website: http://www.cfengine.com
This software is Copyright (C) 2008,2010-present Northern.tech AS.
#+end_example

** =cf-reactor=

- CFEngine event reaction daemon
- Enterprise Hub Specific
- Does not read policy

** Pop Quiz
:PROPERTIES:
:ID:       09f10078-32a9-4e15-8e91-798fe1170b53
:END:

#+ATTR_REVEAL: :frag roll-in
- What needs to happen before remote agents can get policy from the hub?

#+ATTR_REVEAL: :frag roll-in
- Where is the policy that the agent runs by default?

#+ATTR_REVEAL: :frag roll-in
- What port needs to be open bidirectionally?

#+ATTR_REVEAL: :frag roll-in
- How does information from client hosts get into the Enterprise Hub Database?

#+ATTR_REVEAL: :frag roll-in
- What is the answer to the ultimate question of life, the universe and everything?

#+CAPTION: Speaker Notes
#+begin_notes
  - What needs to happen before remote agents can get policy from the hub? :: Establish Trust
  - Where is the policy that the agent runs by default? :: =$(sys.default_policy_path)= , =/var/cfengine/inputs/promises.cf=, =/var/cfengine/inputs=, or =$(sys.inputdir)=
  - What port needs to be open bidirectionally? :: *5308*
  - How does information from client hosts get into the Enterprise Hub Database? :: They are collected by cf-hub. Hub initiated collection, Client initiated advertisement of availability.
  - What is the answer to the ultimate question of life, the universe and everything? :: *42*.  In The Hitchhiker's Guide to the Galaxy by Douglas Adams, is the "Answer to the Ultimate Question of Life, the Universe, and Everything", calculated by a supercomputer named Deep Thought over a period of 7.5M years.
#+end_notes

* MPF & stdlib

The default "Masterfiles"

#+CAPTION: Speaker notes
#+BEGIN_NOTES
The backbone of your policy, it's the scaffolding from which you can build on.
- When upgrading CFEngine, this is *typically upgraded first*.
#+END_NOTES

** Overview
- =promises.cf=
- =update.cf=
- =standalone_self_upgrade.cf=
- =lib/*=
- =cfe_internal/*=
- =controls/*=
- =inventory/*=
- =templates/*=

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
  While you can and on occasion may need to modify vendored policy, it's generally best to keep all custom policies separate from vendored files.

    - *promises.cf* is the main entry. This is the first file the agent reads by default. This is the stem cell for the rest of your policy.
    - *update.cf* is a separate *standalone* policy to manage updating policy and the cfengine agent itself.
    - *standalone_self_upgrade.cf* Is a separate *standalone* policy which is typically executed as a sub-agent by =update.cf= and is responsible for upgrading the cfengine binaries.
    - *lib/* Is the standard library (previously referred to as Common Open Promise Bundle|Body Libray (COPBL). Contains commonly used promise bundles and bodies for things like editing or copying files and managing services.
    - *cfe_internal/* contains policies related to managing cfengine itself.
    - *controls/* contains bodies that control CFEngine's behavior.
    - *inventory/* contains policies that extract useful details from the system into variables.
    - *templates/* contains templates, accessible via =def.template_dir= from policy, and =templates= ~cf-serverd~ shortcut.
#+END_NOTES

** User Entries
- =$(sys.workdir)/data/host_specific.json= (*Augments*)
- =def.json= (*Augments*)
- =services/*.cf=
- =services/main.cf=
- =services/autorun/*.cf=
- =CUSTOM_DIRECTORY/*.cf=

#+CAPTION: Speaker Notes
#+begin_notes
  While you can and on occasion may need to modify vendored policy, it's generally best to keep all custom policies separate from vendored files.

  - $(sys.workdir)/data/host_specific.json :: The first /Augments/ file (not vendored)
  - =def.json= :: Relative to policy entry!
  - =services/*.cf= :: A directory structure for custom policies.
  - =services/main.cf= :: A place to hook in custom policy (vendored, but minimal)
  - =services/autorun/*.cf= :: Policy files that get automatically added to inputs if the class =services_autorun= is defined
  - =CUSTOM_DIRECTORY/*.cf= :: It's common that /all/ custom policy files are contained within their own directory, commonly named for the organization at the top level of the policy set.
#+end_notes

** Unattended Policy Execution Overview                             :ATTACH:
:PROPERTIES:
:ID:       22f5f5e0-c36f-4be8-ae6e-702619a863cf
:Attachments: policy_flow_diagram_2016-10-15_21-25-54.png
:END:

#+COMMENT: [[file:data/22/f5f5e0-c36f-4be8-ae6e-702619a863cf/policy_flow_diagram_2016-10-15_21-25-54.png]]

#+begin_src plantuml :file images/MPF-policy-execution-high-level.png
  create "cf-execd"
  loop "Check ""body executor control schedule"""
    note left of "cf-execd"
      cf-execd checks the schedule once a minute, but the default schedule results
      in execution once every 5 minutes.
    end note

    alt "At least one element of execution_schedule evaluates true"
      create "cf-agent -f update.cf"
      "cf-execd"->"cf-agent -f update.cf": Update Policy Execution
      alt """masterfiles/cf_promises_validated"" differs\nfrom ""intputs/cf_promises_validated"""
        note over "cf-agent -f update.cf"
          Copy masterfiles to inputs
        end note
      end
      alt "trigger_upgrade defined AND not running target version"
        create "cf-agent -f standalone_self_upgrade.cf"
        "cf-agent -f update.cf"->"cf-agent -f standalone_self_upgrade.cf": Self upgrade policy
      end
      note over "cf-agent -f update.cf"
        Execute bundles from Augments listed in
        ""vars.common_control_update_bundlesequence_end""
      end note

      destroy "cf-agent -f update.cf"
      create "cf-agent -f promises.cf"
      "cf-execd"->"cf-agent -f promises.cf": Normal Policy Execution
      note over "cf-agent -f promises.cf"
        Resolve inventory (inventory/*.cf)
      end note
      note over "cf-agent -f promises.cf"
        Resolve bundle common def (controls/def.cf)
      end note
      alt "services_autorun defined"
        note over "cf-agent -f promises.cf"
          Execute bundles tagged autorun in lexical order
        end note
      end
      note over "cf-agent -f promises.cf"
        Execute custom policy integrated into
        ""servies/main.cf""
      end note
      note over "cf-agent -f promises.cf"
        Execute bundles from Augments listed in
        ""vars.common_control_bundlesequence_end""
      end note
      destroy "cf-agent -f promises.cf"
    end
    ... 1 minute ...
  end
#+end_src

#+RESULTS:
[[file:images/MPF-policy-execution-high-level.png]]

** Pop Quiz
#+ATTR_REVEAL: :frag roll-in
- What is the /*MPF*/?

#+ATTR_REVEAL: :frag roll-in
- Where do you configure /most/ MPF tunables?

#+ATTR_REVEAL: :frag roll-in
- At what point in the Upgrade Process should the MPF be upgraded?

#+CAPTION: Speaker Notes
#+begin_notes
- What is the /*MPF*/? :: The /*Masterfiles Policy Framework*/. The default policy set.
- Where do you configure /most/ MPF tunables? :: Augments
- At what point in the Upgrade Process should the MPF be upgraded? :: First
#+end_notes

* Promise Theory
:PROPERTIES:
:ID:       5edd13bb-9803-4597-8021-26c2bd7fe6ab
:END:

#+REVEAL_HTML: <div class="column" style="float:left; width:70%">
#+ATTR_HTML: :alt Promise Theory Principles and Appications :style border:none;
[[file:images/promise_theory_cover.jpg]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:30%">
A model of *voluntary cooperation* between individual autonomous actors.
#+REVEAL_HTML: </div>

#+CAPTION: Speaker Notes
#+begin_notes
The fundamental underlying philosophy that CFEngine is based on.
#+end_notes

** Promises
:PROPERTIES:
:ID:       6cd785ef-1412-495b-a790-c9d09db48669
:END:

#+REVEAL_HTML: <div class="column" style="float:left; width:30%">
#+ATTR_HTML: :alt Thinking in Promises :style border:none;
[[file:images/thinking_in_promises_book_cover.jpg]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:70%">
- A promise is a *statement of intent*
- Agents can only make promises about themselves
#+REVEAL_HTML: </div>

#+CAPTION: Speaker Notes
#+begin_notes
  - The webserver process promises to be running
  - The file promises to have specific permissions
#+end_notes

** Basic Concepts

#+CAPTION: https://www.youtube.com/watch?v=2TPsB5WuZgk
#+REVEAL_HTML: <video controls width="800" data-src="./images/Promise-Theory-Basic-Concepts-part-1.mp4"></video>

* Language
:PROPERTIES:
:ID:       5edd13bb-9803-4597-8021-26c2bd7fe6ab
:END:

** Promise outcomes/results
:PROPERTIES:
:ID:       2b7a5dde-ba92-4861-90ae-2e1dc77875b2
:END:

- =kept=
- =repaired=
- =not_kept=
  - =failed=
  - =denied=
  - =timeout=

#+REVEAL: split

*Note:* Compound promises *can* have *multiple outcomes* at the same time
(/not_kept/ & /kept/ & /repaired/).

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports code
  files:
    "/mnt/volume/file.txt"
      create => "true",
      perms => m( 777 ),
      edit_line => lines_present( "Hello World $(sys.date)" ),
      edit_defaults => empty;
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
- Imagine a file that exists with mode 600, yesterdays date, and sits on a full disk.

- kept :: /create => "true"/, is satisfied, so the promise is kept
- repaired :: /perms => m(777)/ is fixed, so the promise is repaired
- not_kept :: The file content is incorrect, but because the file system is full, we can't write a new file and replace the bad one, so promise not_kept
#+end_notes

** Promise types
:PROPERTIES:
:ID:       d8bf0344-95fc-408a-8d86-5fa382dace2b
:END:

#+Caption: List promise types
#+BEGIN_SRC sh :exports none
  cf-promises --syntax-description json | jq '.promiseTypes | keys | join( ", " )'
#+END_SRC

access, build_xpath, classes, *commands*, databases, defaults, delete_attribute, delete_lines, delete_text, delete_tree, field_edits, *files*, guest_environments, insert_lines, insert_text, insert_tree, measurements, meta, methods, *packages*, processes, replace_patterns, reports, roles, *services*, set_attribute, set_text, storage, users, vars

#+NAME: count_promise_types
#+BEGIN_SRC sh :exports none
  cf-promises --syntax-description json | jq '.promiseTypes | keys | length'
#+END_SRC

#+RESULTS: count_promise_types
: 30

#+Caption: Speaker Notes
#+begin_notes
  As of 3.18.0, there are 30 different built-in promise types. The promise type available depend on the type of bundle used.
  Note: Custom promise types are not listed in the syntax description.
#+end_notes

*** Custom Promise Types

- Available starting with 3.20
- Can be written in any language
- Bash and Python libraries available

** Syntax Structure
:PROPERTIES:
:ID:       a25de10e-8da3-4d79-b960-d409b8b4541a
:END:

#+BEGIN_SRC cfengine3
  bundle type name
  {
    promise_type:

      context::

        "promiser" -> { "optional", "stakeholder" }
          attribute_1 => value_1,
          attribute_2 => value_2,
          meta => { "tag1", "tag2", "tag3=something" },
          comment => "Why important";
  }

  body attribute_N name(optional)
  {
      context::
        attribute_N_1 => "value";
        attribute_N_2 => { "value" };
  }
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
  - Promise type: What kind? For example packages, or commands
  - Context: When/Where? For example prod Linux hosts in north America on
    Sundays at GMT 1700
  - Promiser: What. For example the httpd package, or the name of a command.
  - Stakeholders: Who Cares. For example Security Department, a specific policy
    or compliance id CIS-1.1.17, another promise, a ticketing system identifier.
  - Attributes: How/Details. For example should the package be present or absent
    on the system? Should the command be executed inside of a shell, jailed
    withing a specific directory, or run as a specific user?
  - Why: Why is this important? What can go wrong if this is not in place.
    Visible in verbose logs.
#+end_notes
** Bundles
:PROPERTIES:
:ID:       0d0ded6f-dfa3-4d2e-bc87-c79528f63667
:END:

- Collection of logically related promises
- Are *not functions*
- Can take parameters
- Maintain /some/ variable state
- Can return values

#+CAPTION: Speaker Notes
#+begin_notes
  A [[https://docs.cfengine.com/latest/guide-language-concepts-bundles.html][*bundle*]] is a collection of promises. It is a logical grouping of any number
  of promises, usually for a common purpose. Bundles can optionally take
  parameters. Check out the documentation on [[https://docs.cfengine.com/latest/guide-writing-and-serving-policy-bundles-best-practices.html][best practices with bundles]].

  - Bundles can be used /like/ functions. However, please note they maintain
    some state from thier last actuation.
    - Strings, lists, and data containers contain last value and may be
      re-defined.
    - Classic arrays are cleared at the *beginning* of each bundle actuation.
    - Bundle scoped classes do not persist
#+end_notes

*** Example bundles hold /some/ state
:PROPERTIES:
:ID:       a90f2524-ea7b-4bb3-a233-1f919137d61e
:END:

#+NAME: example-bundles-maintain-some-variable-state.cf
#+CAPTION: =examples/example-bundles-maintain-some-variable-state.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/example-bundles-maintain-some-variable-state.cf
bundle agent main
{
  methods:
      "" usebundle => set_item_in_bag( "hammer", "slightly damaged");
      "" usebundle => set_item_in_bag( "pickaxe", "perfect");
      "" usebundle => set_item_in_bag( "flask", "half full");
      "" usebundle => report_bag_contents;
  reports:
    "$(with)" with => join( ", ", getindices( "set_item_in_bag.array" ) );
}
#+END_SRC

#+REVEAL: split

#+BEGIN_SRC cfengine3 :tangle ./examples/example-bundles-maintain-some-variable-state.cf
bundle agent set_item_in_bag(item, condition)
{
  vars:
    "$(item)" string => "$(condition)";
    "array[$(item)]" string => "$(condition)";
}
bundle agent report_bag_contents
{
  vars:
    "l" slist => variablesmatching("default:set_item_in_bag\..*");
    "a[$(l)]" string => nth( string_split( "$(l)", "\.", 2 ), 1);
  reports:"You look in the bag and see ...."; "A $($(l)) $(a[$(l)])";
}
#+END_SRC

#+REVEAL: split

#+begin_src sh :results output :exports both
  exec 2>&1
  cf-agent -Kf ./examples/example-bundles-maintain-some-variable-state.cf
  :
#+end_src

#+RESULTS:
: R: You look in the bag and see ....
: R: A slightly damaged hammer
: R: A perfect pickaxe
: R: A half full array[flask]
: R: A half full flask
: R: flask

#+CAPTION: Speaker Notes
#+begin_notes
- Strings, lists, and data containers contain last value and may be re-defined.
- Classic arrays are cleared at the *beginning* of each bundle actuation, =set_item_in_bag=.
  - /flask/ was the last $(item) used to define a classic array.
  - Since it has not yet been actuated again, it persists.
#+end_notes

*** Bundles for logical abstraction
:PROPERTIES:
:ID:       07926d58-2e11-4835-a6a9-19542cb28ef4
:END:

For example, a bundle to configure Apache might:

- install the =apache2= package
- edit the configuration file
- copy the web server content
- configure file-system permissions
- ensure the httpd process is running
- restart the httpd process when necessary

*** Bundle types
:PROPERTIES:
:ID:       db7db64f-bb90-40eb-9fbf-052ef57f14e8
:END:

#+BEGIN_SRC sh :exports code
  cf-promises --syntax-description json | jq '.bundleTypes | keys[]'
#+END_SRC

#+RESULTS:
| agent     |
| common    |
| edit_line |
| edit_xml  |
| monitor   |
| server    |

- [[https://docs.cfengine.com/latest/guide-language-concepts-normal-ordering.html*agent-normal-ordering][=agent=]] :: evaluated by ~cf-agent~
- [[https://docs.cfengine.com/latest/guide-language-concepts-bundles.html*common-bundles][=common=]] :: evaluated by *all* components
- [[https://docs.cfengine.com/latest/reference-promise-types-edit_line.html][=edit_line=]] :: evaluated by ~cf-agent~ for files type promises
- [[https://docs.cfengine.com/latest/reference-promise-types-edit_xml.html][=edit_xml=]] :: evaluated by ~cf-agent~ for files type promises
- [[https://docs.cfengine.com/latest/guide-language-concepts-normal-ordering.html*server-normal-ordering][=monitor=]] :: evaluated by ~cf-monitord~
- [[https://docs.cfengine.com/latest/guide-language-concepts-normal-ordering.html*server-normal-ordering][=server=]] :: evaluated by ~cf-serverd~

#+CAPTION: Speaker Notes
#+begin_notes
Bundles have a type which specify how they can be used.
#+end_notes

*** Bundlesequence
- =main= is the default
- =__main__= is treated as /main/ if in =$(sys.policy_entry_filename)=

#+CAPTION: examples/bundle__main__.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/bundle__main__.cf
  bundle agent hello_world
  {
    reports: "Hello from $(this.bundle)";
  }
  bundle agent __main__
  {
    methods: "hello_world";
  }
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
- main is great for example snippets
- =__main__= is great for polices that are standalone, but can be integrated
#+end_notes

** Bodies
:PROPERTIES:
:ID:       624ead8d-4aac-47c4-8cd1-e1eeed2326c8
:END:

- Collection of attributes
- Have a type ( e.g. =classes=, =perms=, =copy_from= )
- Can take parameters
- Can be inherited (3.8+)
- Can be /defaulted/ for a given promise /type/ (3.9+)
- Can be /custom/ (with a custom promise type) (3.20)

#+BEGIN_SRC sh :exports none
  cf-promises --syntax-description json | jq '.bodyTypes | keys | length'
#+END_SRC

#+RESULTS:
: 41

There are [[https://docs.cfengine.com/latest/reference-all-types.html*all-body-types][*41*]] built-in body types as of 3.21.0

#+CAPTION: Speaker Notes
#+begin_notes
- Body types map to promise attribute names, the Left Hand Side (LHS) of the hasrocket ==>= also called "Fat comma" or "Fat arrow"
#+end_notes

#+REVEAL: split

#+BEGIN_SRC sh :exports code
  cf-promises --syntax-description json | jq '.bodyTypes | keys |join(", ") '
#+END_SRC

acl, action, agent, changes, classes, common, contain, copy_from, database_server, delete, delete_select, depth_search, edit_defaults, edit_field, environment_interface, environment_resources, executor, file, file_select, hub, insert_select, link_from, location, match_value, monitor, mount, package_method, package_module, password, perms, printfile, process_count, process_select, rename, replace_with, report_data_select, runagent, select_region, server, service_method, volume

*** Special bodies that control agent behavior
- body common control
- body file control
- body agent control
- body server control
- body executor control
- body hub control

#+Caption: Speaker notes
#+begin_notes
- body common control :: Affects behavior of all components. Files to parse, bundlesequence
- body file control :: Controls parsing behavior. Files to include, namespaces
- body agent control ::
- body server control
- body executor control
- body hub control
#+end_notes

*** Default bodies
:PROPERTIES:
:ID:       3919f6fb-eb3e-4aaf-8ebc-6cd57f3db6ce
:END:

#+Caption: Speaker notes
#+begin_notes
3.9 introduced the ability to define a body that is used by all occurances of a
given promise type unless otherwise specified.

For example, to set all file type promises to warn you can add the
=files_action= body in the =bodydefault= namespace.
#+end_notes

#+Name: =examples/default-bodies.cf=
#+CAPTION: =examples/default-bodies.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/default-bodies.cf :log-level inform :exports both
bundle agent main
{
  files:
    "/tmp/show_default_action"
      create => "true";

    "/tmp/show_explicit_action"
      create => "true",
      action => fix;
}

body action fix
{
  action_policy => "fix";
}

body file control
{
  namespace => "bodydefault";
}
body action files_action
{
  action_policy => "warn";
}
#+END_SRC

#+REVEAL: split

#+RESULTS: =examples/default-bodies.cf=
:  warning: Warning promised, need to create file '/tmp/show_default_action'
:     info: Created file '/tmp/show_explicit_action', mode 0600

** Normal Order
:PROPERTIES:
:ID:       cae5d292-c985-4217-90c9-770e83c83164
:END:

- The order in which CFEngine executes *promises*

  - =classes= and =vars= are evaluated during [[https://docs.cfengine.com/docs/3.7/guide-language-concepts-normal-ordering.html*cf-promises-policy-validation-step][policy parsing]] and [[https://docs.cfengine.com/docs/3.7/guide-language-concepts-normal-ordering.html*agent-pre-evaluation-step][pre-eval]] (depending on the bundle type)
  - Promises are evaluated from top to bottom respecting class restrictions
  - Bundles listed in the bundlesequence or activated via methods are given 3 pass evaluation

*** Example:

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :bundlesequence illustrating_normal_order :tangle examples/illustrating_normal_order.cf :command-in-result t
  bundle agent illustrating_normal_order
  {
     vars:
       "color1" string => "red";

     reports:
       "$(color1)+$(color2) = Purple";

     vars:
       "color2" string => "blue";
  }
#+END_SRC

#+RESULTS:
: # cf-agent --bundlesequence illustrating_normal_order --no-lock --log-level info --file illustrating_normal_oder.cf
:     info: Using command line specified bundlesequence
: R: red+blue = Purple

#+REVEAL: split

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :bundlesequence illustrating_normal_order :tangle examples/illustrating_normal_order2.cf :command-in-result t
  bundle agent illustrating_normal_order
  {
     vars:
       "color1" string => "red";
       "color2" string => "blue";

     reports:
       "$(color1)+$(color2) = Purple";
  }
#+END_SRC

#+RESULTS:
 : # cf-agent --bundlesequence illustrating_normal_order --no-lock --log-level info --file illustrating_normal_oder2.cf
:     info: Using command line specified bundlesequence
: R: red+blue = Purple

** Convergence
:PROPERTIES:
:ID:       922eb776-a396-4752-a826-2cd43d748699
:END:
- A basic principal of CFEngine
- cf-agent will perform three passes over each bundle explicitly actuated

 #+DOWNLOADED: https://docs.cfengine.com/docs/3.12/convergence.png @ 2020-10-28 14:14:05
[[./images/2020-10-28_14-14-05_convergence.png]]

#+CAPTION: Speaker notes
#+begin_notes
- You don't have to leave the system in the desired state on the first pass.
  - Make changes incrementally, getting closer to the objective
- Advantage: You don't need to know the current state of the system in order to correct it
#+end_notes
** Augments (=host_specific.json=, =def.json=)

- Very early definition
- =host_specific.json= processed first (if present), variables defined here have precedence over other augments
- =def.json= Loaded if found next to =$(sys.policy_entry_filename)=
- Classes based on system discovery (platform/networks/arch)
- Facilitates delegation of control

#+CAPTION: Speaker notes
#+begin_notes
- This is one of the best ways to integrate with a CMDB
- Variables can be defined in any namespace/bundle as of 3.18.0, prior to that vars could only be defined in =default:def= bundle scope.
#+end_notes

*** Example augments
:PROPERTIES:
:ID:       8b795d6c-fd4d-40b4-a4cc-0f39af32d01a
:END:

#+CAPTION: Speaker Notes
#+begin_notes
- Syntax pre-3.18 determines how based on suffix of each entry (presence or lack of =::=)
- Syntax 3.18.0+ is more explicit, supports comments and tags
- Define =by_regular_expression= if the class =ubuntu_X= is defined, where =X= one or more is an integers.
- Define =by_class_expression= if the class =nickanderson_thinkpad_w550s= is defined and it's a .
#+end_notes

**** Simple syntax

#+Name: examples/augments/def.json
#+Caption: =examples/augments/def.json=
#+BEGIN_SRC json :tangle ./examples/augments/def.json
  {
    "classes": {
        "by_regular_expression": [ "ubuntu_\\d+" ],
        "by_class_expression": [ "(Afternoon|Evening).(Monday|Wednesday|Friday)::" ],
    },
    "vars": {
        "myvar1": "defined from augments",
        "myvar2": "defined from augments"
      }
  }
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
- Supported since 3.7.3?
#+end_notes

**** Advanced syntax

#+CAPTION: Speaker Notes
#+begin_notes
- Available since 3.18.0
#+end_notes

***** classes

#+Name: examples/augments_2_classes/def.json
#+Caption: =examples/augments_2_classes/def.json=
#+BEGIN_SRC json :tangle ./examples/augments_2_classes/def.json
  {
    "classes": {
        "by_regular_expression": {
            "regular_expressions": [ "ubuntu_\\d+" ],
            "comment": "My Comment",
            "tags": ["optional", "tags" ]
        }
        "by_class_expression": {
            "class_expressions": [ "(Afternoon|Evening).(Monday|Wednesday|Friday)::" ],
              "comment": "My Comment",
              "tags": ["optional", "tags" ]
          }
    },
    "vars": {
        "myvar2": "defined from augments",
        "default:def.myvar1": "defined from augments",
        "yourNamespace:Bundle2.myvar2": "defined from augments"
      }
  }
#+END_SRC

***** vars/variables

#+Name: examples/augments_2_vars/def.json
#+Caption: =examples/augments_2/def.json=
#+BEGIN_SRC json :tangle ./examples/augments_2_vars/def.json
  {
    "vars": {
        "myvar2": "default:def.myvar2 defined from augments",
        "default:def.myvar1": "default:def.myvar1 defined from augments",
        "yourNamespace:Bundle2.myvar2": "yourNamespace:Bundle2.myvar defined from augments"
      }
      "variables": {
        "myvar2": {
            "value": "data:main.myvar2 defined from augments",
            "comment": "My notes",
            "tags": [ "inventory", "attribute_name=Something" ]
          },
         "example2.myvar3": {
            "value": "data:example2.myvar3 defined from augments",
          },
          "yourNamespace:example2.myvar2": {
            "value": "yourNamespace:example2.myvar4 defined from augments, variables key has precedence"
          },
      }
  }
#+END_SRC

*** Example policy using augments
:PROPERTIES:
:ID:       99fd0f7d-67e3-417b-be94-b931b6719044
:END:

#+Caption: =examples/augments/augments.cf=
#+Name: examples/augments/augments.cf
#+BEGIN_SRC cfengine3 :tangle ./examples/augments/augments.cf :command-in-result t
  bundle agent main
  {
    reports:
      "I defined '$(const.dollar)(def.myvar1)' as '$(def.myvar1)'";

      by_regular_expression::
        "Define classes from augments based on a regular expression";

      by_class_expression::
        "Define classes from augments based on CFEngine class expressions";

  }
#+END_SRC

*** Example output
:PROPERTIES:
:ID:       933cd19f-cd61-4448-ac38-3361580d7c82
:END:

#+BEGIN_SRC sh :results output :exports both
  cf-agent --no-lock --file ./examples/augments/augments.cf
#+END_SRC

#+RESULTS:
: R: I defined '$(def.myvar1)' as 'defined from augments'
: R: Define classes from augments based on a regular expression
: R: Define classes from augments based on CFEngine class expressions

*** Policy always wins!
:PROPERTIES:
:ID:       3a19c50f-f805-421a-8bd7-08365d662530
:END:

#+Name: examples/augments/augments-policy-wins.cf
#+Caption: =examples/augments/augments-policy-wins.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/augments/augments-policy-wins.cf :command-in-result t
  bundle common def
  {
    vars:
      "myvar1" string => "Defined in policy";
      "myvar2"
        string => "Defined in policy",
        if => not( isvariable( myvar2 ) );
  }
  bundle agent main
  {
    reports:
      "I defined '$(const.dollar)(def.myvar1)' as '$(def.myvar1)'";
      "I defined '$(const.dollar)(def.myvar2)' as '$(def.myvar2)'";

      by_regular_expression::
        "Define classes from augments based on a regular expression";

      by_class_expression::
        "Define classes from augments based on CFEngine class expressions";
  }
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
Here, we define =def.myvar1= directly in policy, and we define =def.myvar2= if it's not already defined (i.e. set via augments).
#+end_notes

*** Example output

#+BEGIN_SRC sh :results output :exports both
  cf-agent --no-lock --file ./examples/augments/augments-policy-wins.cf
#+END_SRC

#+RESULTS:
: R: I defined '$(def.myvar1)' as 'Defined in policy'
: R: I defined '$(def.myvar2)' as 'defined from augments'
: R: Define classes from augments based on a regular expression
: R: Define classes from augments based on CFEngine class expressions

*** Multiple augments

Merge more augments on top.

#+CAPTION: Speaker Notes
#+begin_notes
Here we merge a more specific augments for linux (the value derived from sys.os on top of the default.
#+end_notes

#+Caption: =examples/augments-multiple/def.json=
#+BEGIN_SRC json :tangle ./examples/augments-multiple/def.json
  {
    "vars": {
        "myvar1": "defined from augments for all",
        "myvar2": "defined from augments for all"
      },
    "augments": [ "$(sys.policy_entry_dirname)/$(sys.os).json" ]
  }
#+END_SRC

#+CAPTION: =examples/augments-multiple/linux.json=
#+BEGIN_SRC json :tangle ./examples/augments-multiple/linux.json
  {
    "vars": {
        "myvar2": "override for linux hosts"
      }
  }
#+END_SRC

*** Multiple augments: Example policy

#+CAPTION: Speaker Notes
#+begin_notes
Here we simply report the variable values to illustrate how the value of myvar2 was overridden
#+end_notes

#+NAME: examples/augments-multiple/promises.cf
#+Caption: =examples/augments-multiple/promises.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/augments-multiple/promises.cf :command-in-result t
  bundle agent main
  {
    reports:
      "'$(const.dollar)(def.myvar1)' is '$(def.myvar1)'";
      "'$(const.dollar)(def.myvar2)' is '$(def.myvar2)'";
  }
#+END_SRC

#+BEGIN_SRC sh :results output :exports both
  cf-agent --no-lock --file ./examples/augments-multiple/promises.cf
#+END_SRC

#+RESULTS:
: R: '$(def.myvar1)' is 'defined from augments for all'
: R: '$(def.myvar2)' is 'override for linux hosts'

** Macros

- [[https://docs.cfengine.com/docs/master/reference-macros.html][Conditional parsing]] based on version and features
- Use for supporting future syntax, speed optimizations

*** Version based
:PROPERTIES:
:ID:       e1c5a8f8-eb8b-47f2-9479-9fd0fdede739
:END:

- =minimum_version=
- =maximum_version=
- =at_version=
- =between_versions=
- =before_version=
- =after_version=

#+REVEAL: split

#+Name: =examples/macros-if-minimum_version.cf=
#+CAPTION: =examples/macros-if-minimum_version.cf=
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports code :tangle ./examples/macros-if-minimum_version.cf :bundlesequence example_macro_minimum_version
  bundle agent example_macro_minimum_version
  {
  @if minimum_version(4.0.0)
    This contains completely invalid syntax, but it's OK.
    Only versions 4 and greater will evaluate this section.
  @endif
  @if minimum_version(3.14.0)
        # the function `classfiltercsv()` was introduced in 3.14.0
    vars:
        "container"  data => classfiltercsv( $(file), # File
                                             true, # Has header
                                             0, # Class column
                                             2); # Optional sort column
  @endif
  }
#+END_SRC

*** Feature based
:PROPERTIES:
:ID:       b90a28af-c48b-4b68-928b-5610a29d6150
:END:
- [[https://docs.cfengine.com/docs/3.10/reference-macros.html#features][Feature Macro]] documentation

You can conditionally parse policy based on compiled in features using this
macro.

#+Name: =examples/macros-if-feature-yaml.cf=
#+CAPTION: =examples/macros-if-feature-yaml.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/macros-if-feature-yaml.cf :exports code
  bundle agent main
  {
  @if feature(yaml)
  # the yaml library may not be compiled in
    vars: "container" data => parseyaml('
  - array1
  - array2
  - key: 1
  - key: 2');
  @endif

    reports:
      "$(with)" with => string_mustache('{{%-top-}}', container );
  }
#+END_SRC

*** Else
- Must come /after/ an =@if= macro

#+begin_example
bundle agent extractor
{
@if minimum_version(3.16)
  # Implementation for 3.16+
  vars:
    "container"
      data => classfiltercsv(...);
@else
  # Implementation for versions before 3.16
  vars:
    "container"
      data => readcsv(...);
@endif
}
#+end_example
** Functions

#+Caption: Count functions
#+BEGIN_SRC sh :exports none
   cf-promises --syntax-description json | jq '.functions | keys | length'
#+END_SRC

#+RESULTS:
: 186

There are 181 functions as of 3.21.0

#+Caption: Count functions
#+BEGIN_SRC sh :exports none
   cf-promises --syntax-description json | jq '.functions | keys | join( ", ")'
#+END_SRC

#+RESULTS:
: accessedbefore, accumulated, ago, and, basename, bundlesmatching, bundlestate, callstack_callers, callstack_promisers, canonify, canonifyuniquely, cf_version_after, cf_version_at, cf_version_before, cf_version_between, cf_version_maximum, cf_version_minimum, changedbefore, classesmatching, classfiltercsv, classify, classmatch, concat, countclassesmatching, countlinesmatching, data_expand, data_readstringarray, data_readstringarrayidx, data_regextract, data_sysctlvalues, datastate, difference, dirname, diskfree, escape, eval, every, execresult, execresult_as_data, expandrange, file_hash, fileexists, filesexist, filesize, filestat, filter, findfiles, findfiles_up, findprocesses, format, getclassmetatags, getenv, getfields, getgid, getindices, getuid, getuserinfo, getusers, getvalues, getvariablemetatags, grep, groupexists, hash, hash_to_int, hashmatch, host2ip, hostinnetgroup, hostrange, hostsseen, hostswithclass, hubknowledge, ifelse, int, intersection, ip2host, iprange, irange, isdir, isexecutable, isgreaterthan, isipinsubnet, islessthan, islink, isnewerthan, isplain, isvariable, join, lastnode, laterthan, ldaparray, ldaplist, ldapvalue, length, lsdir, makerule, maparray, mapdata, maplist, max, mean, mergedata, min, network_connections, none, not, now, nth, on, or, packagesmatching, packageupdatesmatching, parseintarray, parsejson, parserealarray, parsestringarray, parsestringarrayidx, parseyaml, peerleader, peerleaders, peers, processexists, product, randomint, read_module_protocol, readcsv, readdata, readenvfile, readfile, readintarray, readintlist, readjson, readrealarray, readreallist, readstringarray, readstringarrayidx, readstringlist, readtcp, readyaml, regarray, regcmp, regex_replace, regextract, registryvalue, regldap, regline, reglist, remoteclassesmatching, remotescalar, returnszero, reverse, rrange, search_up, selectservers, shuffle, some, sort, splayclass, splitstring, storejson, strcmp, strftime, string, string_downcase, string_head, string_length, string_mustache, string_replace, string_reverse, string_split, string_tail, string_trim, string_upcase, sublist, sum, sysctlvalue, translatepath, type, unique, url_get, usemodule, userexists, validdata, validjson, variablesmatching, variablesmatching_as_data, variance

** Pop Quiz
:PROPERTIES:
:ID:       0b0376ac-661e-498f-b3a3-b4c8a3716854
:END:

#+ATTR_REVEAL: :frag roll-in
- What is a bundle?
#+ATTR_REVEAL: :frag roll-in
- What is the fundamental underlying philosophy that CFEngine is based on?
#+ATTR_REVEAL: :frag roll-in
- When is the next break?
#+ATTR_REVEAL: :frag roll-in
- Which component collects reports from remote agents?
#+ATTR_REVEAL: :frag roll-in
- What types of bundles are there?
#+ATTR_REVEAL: :frag roll-in
- In what order are promises within a bundle processed?
#+ATTR_REVEAL: :frag roll-in
- How can you use new language features when you still have some old agents?
#+ATTR_REVEAL: :frag roll-in
- Which Augments files is loaded /first/?
#+ATTR_REVEAL: :frag roll-in
- Which language elements can be extended?
#+ATTR_REVEAL: :frag roll-in
- What has the highest precedence when defining variables?
#+ATTR_REVEAL: :frag roll-in
- What has the 2nd highest precedence when defining variables?
#+ATTR_REVEAL: :frag roll-in
- What do augments facilitate?
#+ATTR_REVEAL: :frag roll-in
- How do augments facilitate delegation of control?

#+CAPTION: Speaker Notes
#+begin_notes
- What is a bundle ::  A collection of *promises*, a logical container, a way of abstracting complexity
- What is the fundamental underlying philosophy that CFEngine is based on? ::  *Promise Theory*
- What allows you to set classes and define variables /very/ early during agent initialization? :: Augments
- When is the next break? ::
- Which component collects reports from remote agents? ::  *cf-hub*
- What types of bundles are there? ::  *common*, *agent*, *edit_line*, *server*, *monitor*, *edit_xml*
- In what order are promises within a bundle processed? :: The *Normal Order*
- How can you use a new function when you still have some old agents? :: Macros!
- Which Augments files is loaded /first/? :: =host_specific.json=
- Which language elements can be extended? :: Promise Types, Bodies
- What has the highest precedence when defining variables? :: Policy
- What has the 2nd highest precedence when defining variables? :: =host_specific.json=
- What do augments facilitate? :: Delegation of control
- How do augments facilitate delegation of control? :: Separation of policy and data. Data interface, easy to integrate with other tooling
#+end_notes

* Making Decisions: Context Classes and Expressions
:PROPERTIES:
:ID:       ad47d876-4578-446e-be87-c2ef138167e6
:END:

** Classes
:PROPERTIES:
:ID:       bb4ef74b-6c71-419c-8db1-ad212c192eb0
:END:

- Restrict promises based on context
- Usable in bundles and bodies
- Used for making decisions
- Can be combined with expressions

#+CAPTION: Speaker Notes
#+begin_notes
  A promise might only apply to Linux systems on Sundays, when a [[https://docs.cfengine.com/latest/guide-language-concepts-variables.html][variable]] has a
  certain value or any other arbitrary condition or combination of various
  conditions.

- Think in [[https://en.wikipedia.org/wiki/Set_%28mathematics%29][sets]]
  - Try and treat servers like cattle *not* pets
#+end_notes

** What classes are defined?
:PROPERTIES:
:ID:       d314d4d2-4ca9-4636-9562-203df412b474
:END:

#+CAPTION: Before 3 pass evaluation
#+BEGIN_SRC shell :results output
  cf-promises --show-classes
#+END_SRC

#+CAPTION: At the end of a policy run
#+BEGIN_SRC shell :results output
  cf-agent --show-evaluated-classes
#+END_SRC

#+CAPTION: Currently within a policy
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  vars:
    "defined" slist => classesmatching( ".*" );
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
  Note, show-classes will not show ALL possible classes. It only performs
  pre-eval so it is only showing the classes that are defined after pre-eval.
#+end_notes

*** Example
:PROPERTIES:
:ID:       94e170a4-1452-426a-9d79-3b3cf4c0757d
:END:

#+BEGIN_SRC shell :results output
  cf-promises --show-classes | tail -n+2 | awk -vORS=", " '{print $1}'
#+END_SRC

127_0_0_1, 172_17_0_1, 192_168_122_1, 192_168_42_189, 4_cpus, 64_bit, Afternoon, Day23, February, GMT_Day23, GMT_Evening, GMT_February, GMT_Hr18, GMT_Hr18_Q3, GMT_Lcycle_1, GMT_Min30_35, GMT_Min34, GMT_Q3, GMT_Sunday, GMT_Yr2020, Hr12, Hr12_Q3, Lcycle_1, Min30_35, Min34, PK_SHA_43c979e264924d0b4a2d3b568d71ab8c768ef63487670f2c51cd85e8cec63834, Q3, Sunday, Yr2020, any, cfengine, cfengine_3, cfengine_3_15, cfengine_3_15_0, common, compiled_on_linux_gnu, debian, debian_buster, enterprise, enterprise_3, enterprise_3_15, enterprise_3_15_0, enterprise_edition,

#+REVEAL: split

fe80__5ee0_c5ff_fe9f_f38f, feature, feature_curl, feature_def, feature_def_json, feature_def_json_preparse, feature_tls, feature_tls_1, feature_tls_1_0, feature_tls_1_1, feature_tls_1_2, feature_tls_1_3, feature_xml, feature_yaml, ipv4_127, ipv4_127_0, ipv4_127_0_0, ipv4_127_0_0_1, ipv4_172, ipv4_172_17, ipv4_172_17_0, ipv4_172_17_0_1, ipv4_192, ipv4_192_168, ipv4_192_168_122, ipv4_192_168_122_1, ipv4_192_168_42, ipv4_192_168_42_189, ipv4_gw_192_168_42_1, ipv6_fe80__5ee0_c5ff_fe9f_f38f, linux, linux_5_0_0_38_lowlatency, linux_x86_64, linux_x86_64_5_0_0_38_lowlatency, linux_x86_64_5_0_0_38_lowlatency__41_Ubuntu_SMP_PREEMPT_Tue_Dec_3_01_06_41_UTC_2019,

#+REVEAL: split

mac_02_42_fb_b7_c0_59, mac_52_54_00_6b_62_06, mac_5c_e0_c5_9f_f3_8f, my_other_example, net_iface_docker0, net_iface_lo, net_iface_virbr0, net_iface_wlan0, nickanderson_thinkpad_w550s, nova, nova_3, nova_3_15, nova_3_15_0, nova_edition, systemd, test_class_29665402e2b4331f10b8d767b512cd916eeb5db9, test_class_29665402e2b4331f10b8d767b512cd916eeb5db9_2, ubuntu, ubuntu_19, ubuntu_19_04, x86_64,

** Class expressions
:PROPERTIES:
:ID:       65733534-2c63-4bb5-86b6-7ed9140c7050
:END:

#+Caption: Class Expressions
| *.*  (dot)         | *AND*      |
| *&*  (ampersand)   | *AND*      |
| *l*  (pipe)        | *OR*       |
| *!*  (exclamation) | *NOT*      |
| *()* (parenthesis) | *grouping* |

- It's more common to use *=.=* than *=&=* to express AND

#+CAPTION: Speaker Notes
#+begin_notes
  Classes can be combined into expressions to make complex decisions.
#+end_notes

*** Example illustrating class expressions
:PROPERTIES:
:ID:       161654cc-bffb-4401-a211-9b17f600136d
:END:

#+Name: examples/00-01-using_class_expressions.cf
#+CAPTION: =examples/00-01-using_class_expressions.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-01-using_class_expressions.cf
bundle agent main
{
  files:
    linux.(Sunday|Saturday)::
      "/etc/nologin" -> { "Human Resources" }
        create => "true",
        comment => "Disallow non-root logins on the weekend.
                    We believe in work-life balance, and
                    encourage it.";

    linux.!(Sunday|Saturday)::
      "/etc/nologin" -> { "Business Operations" }
        delete => tidy,
        comment => "People need to be able to log in for them
                  to do their work during the week";
}
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
  Here we use class expressions to make sure that unprivileged users are not
  allowed to log in on the weekend, and also that they are allowed to log in
  during the week.
#+end_notes

** Class types
:PROPERTIES:
:ID:       c897c3c2-1b36-4109-a447-de511147c19f
:END:

- Hard Classes
- Soft Classes

** Hard classes
:PROPERTIES:
:ID:       7eb9939c-b88a-4914-81c4-7439a46fb94d
:END:

- Defined by agent
- Not configurable
- Always available
- Discovered each run
- Cannot be undefined

=redhat=, =Thursday=, =linux=

** Soft classes
:PROPERTIES:
:ID:       ac5c9911-31e1-4a9c-a0f5-eea6013b78dc
:END:

- Defined by policy
- Based on anything
- Available after definition
- Can persist for period of time
- Can be namespace or bundle scoped
- Can be undefined only as the result of a promise

** Valid Class names
:PROPERTIES:
:ID:       c908f05c-9569-43a9-9444-3ea5201bd44a
:END:

- Allowed characters include =[a-zA-Z0-9_]=
- *Canonify* a string to produce a valid class name
  - Converts invalid characters to =_=.
- Automatically canonified *when defined*

*Note:* Classes are *NOT* automatically canonified when *checked*.

*** Example of automatic canonification
:PROPERTIES:
:ID:       5e6887e9-914e-4f09-91ea-f117bfda7cd3
:END:

#+Name: examples/00-01-classes_canonification.cf
#+Caption: =examples/00-01-classes_canonification.cf=
#+BEGIN_SRC cfengine3 :tangle examples/00-01-classes_canonification.cf
bundle agent main
{
  vars:
    "my_class_name" string => "Invalid-Class/Name!";
    "c_my_class_name" string => canonify( "$(my_class_name)" );

  classes:
    "$(my_class_name)" expression => "any";

  reports:

    "'$(my_class_name)' is **NOT** a class that is defined"
      unless => "$(my_class_name)";

    "'$(c_my_class_name)' **IS** a defined class"
      if => canonify( $(my_class_name) );
}
#+END_SRC

#+REVEAL: split

#+RESULTS: examples/00-01-classes_canonification.cf
: R: 'Invalid-Class/Name!' is **NOT** a class that is defined
: R: 'Invalid_Class_Name_' **IS** a defined class

** Class scope
:PROPERTIES:
:ID:       3000b84d-cd58-49c7-9e2e-06f72d5e3b80
:END:

- Namespace scoped classes are accessible from any bundle. (=theNamespace:the_class|anotherNamespace:another_class::=
- Persist until end of agent run or explicitly undefined.
- Bundle scoped classes are only accessible from within the bundle the class was defined, or bundles actuated via methods where inheritance is specified
- All hard classes are namespace scoped

#+CAPTION: Speaker Notes
#+begin_notes
  Don't worry too much about namespaces yet. It's an advanced topic and mostly
  relates to very large policy sets or environments with many different groups
  of policy writers.

  - Namespace scoped classes are also referred to as "global" classes.
  - Inventoried classes *must be =namespace= scoped*.
#+end_notes

** Class scope rules
:PROPERTIES:
:ID:       b10aa5d5-fb2a-46d5-8d17-eddc7db5a327
:END:

#+Caption: Default scope for =classes= *type* promises
| Bundle Type | Scope       |
| =common=    | =namespace= |
| =agent=     | =bundle=    |

- =classes= bodies default to *namespace scope*

*Pro Tip:* Use *=bundle=* scoped classes whenever possible.

#+CAPTION: Speaker Notes
#+begin_notes
  - By default classes defined by classes type promises in *common bundles* are *namespace scoped*
  - By default classes defined by classes type promises in *agent bundles* are *bundle scoped*
  - By default classes defined as the *result of promise outcomes* (=classes bodies=) are *namespace scoped*

  Namespace scope classes if not maintained well can cause other conditions to be met unexpectedly. For example, consider if you defined the class  =config_repaired= or =restart_service=. Which config, which service?
#+end_notes

** Define custom classes by expression
:PROPERTIES:
:ID:       59e5f34c-ef7d-41ff-a24e-6f07e7cba410
:END:
#+Name: examples/00-10-classes_by_expression.cf
#+Caption: =examples/00-10-classes_by_expression.cf=
#+BEGIN_SRC cfengine3 :tangle examples/00-10-classes_by_expression.cf
bundle agent main
{
  classes:
    "weekend" or => { "Saturday", "Sunday" };
    "weekday" not => "weekend";

    "business_hours"
      expression => "weekday.(Hr9|Hr10|Hr11|Hr13|Hr14|Hr15|Hr16|Hr17)",
      comment => "Weekdays from 9-5 excluding the lunch hour.";

    "webserver"
      expression => regcmp( "www.*", $(sys.fqhost) ),
      comment => "Identify webservers based on their name";

    "north_america"
      expression => iprange( "10.1.0.0/16" );
}
#+END_SRC

** Define custom classes by promise outcome
:PROPERTIES:
:ID:       a644656f-2389-4d3c-9b7a-043608beb030
:END:

#+Name: examples/00-10-classes_define_based_on_promise_outcome.cf
#+Caption: =examples/00-10-classes_define_based_on_promise_outcome.cf=
#+BEGIN_SRC cfengine3 :tangle examples/00-10-classes_define_based_on_promise_outcome.cf
bundle agent main
{
  vars:
    "config[PermitRootLogin]" string => "no";

  files:
    "/etc/ssh/sshd_config"
      edit_line => set_line_based("$(this.bundle).config", # Config MAP
                                  " ",        # Separator
                                  "\s+",      # Separator regex
                                  ".*",       # Keys to consider
                                  "\s*#\s*"), # Lines to ignore
      classes => scoped_classes_generic("bundle", "sshd_config");

  services:
    sshd_config_repaired::
      "sshd"
        service_policy => "restart",
        comment => "For sshd to pick up changed config it must be restarted."
}
#+END_SRC

** Example - traditional class expressions
:PROPERTIES:
:ID:       8c2e63ee-c972-4faa-bdd7-515c75ca2f16
:END:

#+Name: =examples/00-10-classes_traditional_expression.cf=
#+Caption: =examples/00-10-classes_traditional_expression.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-10-classes_traditional_expression.cf
bundle agent main
{
  reports:
      "Hello World!";
    linux.!(Saturday|Sunday)::
      "This is a linux host.";
      "Today is not Saturday or Sunday.";
}
#+END_SRC

#+RESULTS: =examples/00-10-classes_traditional_expression.cf=
: R: Hello World!
: R: This is a linux host.
: R: Today is not Saturday or Sunday.

#+CAPTION: Speaker Notes
#+begin_notes
  - Apply until the next class expression, promise type, or end of bundle
  - If unspecified promises are in the =any= context.
  - Variables are not allowed in traditional class expressions.
#+end_notes

** Example - restrict individual promises with if and unless
:PROPERTIES:
:ID:       fb1f6643-9313-4053-8b09-fa190448ef0a
:END:

#+Name: =examples/00-10-classes_example_if_and_unless.cf=
#+Caption: =examples/00-10-classes_example_if_and_unless.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-10-classes_example_if_and_unless.cf
bundle agent main
{
  vars:
    "platforms" slist => { "linux", "windows" };

  reports:
    "I am a $(platforms) host"
      if => "$(platforms)";
      # ifvarclass => "$(platforms)";

    "I was made by Microsoft"
      unless => "!windows";
}
#+END_SRC

#+RESULTS: =examples/00-10-classes_example_if_and_unless.cf=
: R: I am a linux host

#+CAPTION: Speaker Notes
#+begin_notes
- You may see the use of ifvarclass, it's the original syntax
-  **AND** with a traditional class expression.
#+end_notes

** Example - variable class expressions
:PROPERTIES:
:ID:       ca2bd83a-79ec-4b13-a637-8ccd547e1660
:END:

#+Name: examples/00-10-classes_example_variable_class_expressions.cf
#+Caption: =examples/00-10-classes_example_variable_class_expressions.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-10-classes_example_variable_class_expressions.cf
bundle agent main
{
  vars:
    "platforms" slist => { "linux", "windows" };

  reports:
    !(Saturday|Sunday)::
      "It's a weekday and I am a $(platforms) host!"
        if => "$(platforms)";

    "$(platforms)"::
      "I am a $(platforms) host and it's a weekday!"
        if => "!(Saturday|Sunday)";
}
#+END_SRC

#+RESULTS:
: R: It's a weekday and I am a linux host!
: R: I am a linux host and it's a weekday!

#+CAPTION: Speaker Notes
#+begin_notes
- *More flexibility with variable class expressions*
- Like traditional class expressions variable class expressions apply until the next class expression, promise type, or end of bundle.

  In 3.7 traditional class expressions gained the ability to de-reference
  variables when quoted.
#+end_notes

** Functions that return "context"

#+BEGIN_SRC sh :exports code
  cf-promises --syntax-description json | jq '.functions | \
     with_entries( select(.value.returnType == "context") ) | \
     keys | join( ", ")'
#+END_SRC

accessedbefore, changedbefore, classify, classmatch, every, fileexists, filesexist, groupexists, hashmatch, hostinnetgroup, hostrange, iprange, isdir, isexecutable, isgreaterthan, isipinsubnet, islessthan, islink, isnewerthan, isplain, isvariable, laterthan, ldaparray, none, processexists, read_module_protocol, regarray, regcmp, regextract, regldap, regline, reglist, remoteclassesmatching, returnszero, some, splayclass, strcmp, usemodule, userexists

** Pop Quiz
:PROPERTIES:
:ID:       8aec7270-5f1d-4e29-80b5-e1c635bedf19
:END:

#+ATTR_REVEAL: :frag roll-in
- What types of classes are there?

#+ATTR_REVEAL: :frag roll-in
  - What is the difference?

#+ATTR_REVEAL: :frag roll-in
- What are valid class characters?

#+ATTR_REVEAL: :frag roll-in
- What is the default scope for classes defined as the result of a promise outcome using a classes body?

#+ATTR_REVEAL: :frag roll-in
- What component serves policy files, which hosts can be a policy server?

#+ATTR_REVEAL: :frag roll-in
- What special character can be used in class expressions that is not a logical operator?

#+ATTR_REVEAL: :frag roll-in
- Where is that special character used?

#+CAPTION: Speaker Notes
#+begin_notes
- What types of classes are there? :: Hard, Soft
- What is the difference? :: Hard, defined by core agent, Soft defined by users/policy
- What are valid class characters? :: =[A-Za-z0-9_]=
- What is the default scope for classes defined as the result of a promise outcome using a classes body? :: *namespace* (globally accessible)
- What component serves policy files, which hosts can be a policy server? :: Files are served by ~cf-serverd~; any system /can/ be a policy server.
- What special character can be used in class expressions that is not a logical operator? :: =:=
- Where is that special character used? :: Between a class and it's namespace and at the end of the class expression.
#+end_notes
* Variables & Data Types
:PROPERTIES:
:ID:       90852a3c-ff79-4bee-a71b-df6d9e13cc34
:END:

** Variable Scoping
:PROPERTIES:
:ID:       6e7ca748-f46a-4914-b512-cd626ee34165
:END:

- All variables are globally accessible
- =$(variable)=, =@(list or data container)=
- Use fully qualified variable names when accessing variables in other bundles.
  - =$(bundle.variable)=, =@(bundle.list)=
  - =$(namespace:bundle.variable)=, =@(namespace:bundle.list)=

** Datatypes
- string, int, real
- slist, ilist, rlist
- classic "array"
- data
*** Example - strings
:PROPERTIES:
:ID:       33870a0a-4fbd-4d3c-878c-e88bd9b47188
:END:
#+Caption: =examples/00-01-strings.cf=
#+Name: =examples/00-01-strings.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-01-strings.cf
bundle agent main
{
  vars:
    "string1" string => "one";
    "string2" string => "strings
can be multi-line";
    "string3" string => "with \"quotes\"";
    "string4" string => 'or "quotes"';
    "string5" string => `with 'single' and "double" quotes`;

  reports:
    "string1 = '$(string1)'";
    "string2 = '$(string2)'";
    "string3 = '$(string3)'";
    "string4 = '$(string4)'";
    "string5 = '$(string5)'";
}
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
Notice: single quotes (='=), doublequotes (="=), and backticks (=`=) can be interpolated when you want to include them within a string.
#+end_notes

#+REVEAL: split

#+Caption: =examples/00-01-strings.cf= output
#+RESULTS: =examples/00-01-strings.cf=
: R: string1 = 'one'
: R: string2 = 'strings
: can be multi-line'
: R: string3 = 'with "quotes"'
: R: string4 = 'or "quotes"'
: R: string5 = 'with 'single' and "double" quotes'

*** Example - numbers
:PROPERTIES:
:ID:       01d51493-c97f-4804-b3e7-3c448222d8f5
:END:
#+Caption: =examples/00-02-numbers.cf=
#+Name: =examples/00-02-numbers.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-02-numbers.cf
bundle agent main
{
  vars:
    "var1" int => "1";
    "var2" int => "10K";
    "var3" real => "1.2";
    "var4" real => "10e-5";
    "var5" int => "inf";

  reports:
    "var1 = '$(var1)'";
    "var2 = '$(var2)'";
    "var3 = '$(var3)'";
    "var4 = '$(var4)'";
    "inf = '$(var5)'";
}
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
Integers may use suffixes to represent large numbers. The following suffixes can
be used to create integer values for common powers of 1000.

- =k= :: value times 1000
- =m= :: value times 1000^2
- =g= :: value times 1000^3

Since computing systems such as storage and memory are based on binary values,
CFEngine also provide the following uppercase suffixes to create integer
values for common powers of 1024.

- =K= :: value times 1024
- =M= :: value times 1024^2
- =G= :: value times 1024^3

However, the values must have an integer numeric part (e.g. 1.5M is not
allowed).

In some contexts, =%= can be used a special suffix to denote percentages.

Lastly, there is a reserved value which can be used to specific a parameter as
having no limit at all.

- =inf= :: a constant representing an "unlimited", value.
#+end_notes

#+REVEAL: split

#+RESULTS: =examples/00-02-numbers.cf=
: R: var1 = '1'
: R: var2 = '10240'
: R: var3 = '1.200000'
: R: var4 = '0.000100'
: R: inf = '999999999'

#+REVEAL: split

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  bundle agent lets_talk_about_inf_baby
  {
      vars:
        "inf_is" int => "inf";
        "biggest_int" int => "99999999999";
        #"biggest_int" int => "100000000000"; # error: Integer is out of range

      reports:
       "inf ($(inf_is)) < biggest_int ($(biggest_int))"
        if => isgreaterthan( $(biggest_int), $(inf_is) );

       "$(biggest_int) is $(with) greater than $(inf_is)"
         with => format( "%0.0f", eval( "$(biggest_int)-$(inf_is)", math, infix));
  }
  bundle agent __main__
  {
     methods: "lets_talk_about_inf_baby";
  }
#+END_SRC

#+RESULTS:
: R: inf (999999999) < biggest_int (99999999999)
: R: 99999999999 is 99000000000 greater than 999999999

*** Example - lists
:PROPERTIES:
:ID:       476782d9-3e3f-415b-bbc1-b0a010f31663
:END:
#+Caption: =examples/00-04-lists.cf=
#+Name: =examples/00-04-lists.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-04-lists.cf
bundle agent main
{
  vars:
    "var1" ilist => { 1, 2, "3", "4" };
    "var2" rlist => { "1.2", "2.0", "3.3" };
    "var3" slist => { "one", "two", three,
                      @(var1), @(var2),
                    };
    "var4" real => sum( var2 );

  reports:
    "var1 = '$(var1)'";
    "var2 = '$(var2)'";
    "var3 = '$(var3)'";
    "var4 = '$(var4)'";
}
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
If you refer to a list variable as a scalar (=$(var)=), CFEngine interprets it to mean /iterate over all the values in the list/.
#+end_notes

#+REVEAL: split

#+RESULTS: =examples/00-04-lists.cf=
#+begin_example
R: var1 = '1'
R: var1 = '2'
R: var1 = '3'
R: var1 = '4'
R: var2 = '1.2'
R: var2 = '2.0'
R: var2 = '3.3'
R: var3 = 'one'
R: var3 = 'two'
R: var3 = 'three'
R: var3 = '1'
R: var3 = '2'
R: var3 = '3'
R: var3 = '4'
R: var3 = '1.2'
R: var3 = '2.0'
R: var3 = '3.3'
R: var4 = '6.500000'
#+end_example

*** Example - list iteration (loops)
:PROPERTIES:
:ID:       d9be1dbe-d799-4da1-8968-ee3f2b044cf5
:END:
#+Caption: =examples/00-03-list_iteration.cf=
#+Name: =examples/00-03-list_iteration.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-03-list_iteration.cf
bundle agent main
{
  vars:
    "numbers" slist => { "1", "2", "3" };
    "colors" slist => { "red", "green", "blue" };

  reports:
    "$(numbers)";
    "$(colors)";
    "$(numbers) with $(colors)";
    "$(colors) with $(numbers)";
}
#+END_SRC

#+REVEAL: split

#+RESULTS: =examples/00-03-list_iteration.cf=
#+begin_example
R: 1
R: 2
R: 3
R: red
R: green
R: blue
R: 1 with red
R: 1 with green
R: 1 with blue
R: 2 with red
R: 2 with green
R: 2 with blue
R: 3 with red
R: 3 with green
R: 3 with blue
R: red with 1
R: red with 2
R: red with 3
R: green with 1
R: green with 2
R: green with 3
R: blue with 1
R: blue with 2
R: blue with 3
#+end_example

*** Example - "Classic" Arrays
:PROPERTIES:
:ID:       23a3bc95-8da5-4047-ba69-87922734bbbf
:END:

#+Caption: =examples/00-05-classic_arrays.cf=
#+Name: =examples/00-05-classic_arrays.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-05-classic_arrays.cf
bundle agent main
{
  vars:
    "file[motd]"  string => "/etc/motd";
    "file[fstab]" string => "/etc/fstab";

    "file_idx" slist => getindices( file );
    "files" slist => getvalues( file );

  reports:
   "The key '$(file_idx)' has the value '$(file[$(file_idx)])'";
   "file: '$(files)'";
}
#+END_SRC

#+REVEAL: split

#+RESULTS: =examples/00-05-classic_arrays.cf=
: R: The key 'motd' has the value '/etc/motd'
: R: The key 'fstab' has the value '/etc/fstab'
: R: file: '/etc/motd'
: R: file: '/etc/fstab'

*** Example - data containers
:PROPERTIES:
:ID:       97ffe09a-8f14-4767-8219-87175794cb07
:END:
#+Caption: =examples/00-06-data_containers.cf=
#+Name: =examples/00-06-data_containers.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-06-data_containers.cf :wrap "example"
bundle agent main
{
  vars:
    "server" string => "mirror.int.cfengine.com";
    "repos"
      data => '{
                "rhel6_updates": {
                  "id": { "value":"RHEL6_UPDATES" },
                  "name": { "value": "RHEL 6.x Updates" },
                  "baseurl": { "value": "https://$(server)/RHEL6/updates" }
                }
              }';

    "idx" slist => getindices( repos );

  reports:
    "URL = '$(repos[$(idx)][baseurl][value])'";
}
#+END_SRC

#+REVEAL: split

#+RESULTS: =examples/00-06-data_containers.cf=
#+begin_example
R: URL = 'https://mirror.int.cfengine.com/RHEL6/updates'
#+end_example

*** Differences between "Classic Arrays" and "Data containers"
#+CAPTURE: Speaker Notes
#+begin_notes
- Data containers are defined as a single entity
- Arrays are defined by each index
- "Classic arrays" are cleared at the start of each bundle evaluation

- Arrays are a collection of related variables
- Data containers are a single variable
#+end_notes

#+Name: =examples/00-04-classicarray-vs-datacontainer.cf=
#+Caption: =examples/00-04-classicarray-vs-datacontainer.cf=
#+BEGIN_SRC cfengine3 :tangle ./examples/00-04-classicarray-vs-datacontainer.cf
  bundle agent main
  {
    vars:
        "ClassicArray[key]" string => "value";
        "ClassicArray[deep]" slist => { "list" };
        "DataContainer"
          data => '{ "key": "value", "deep": [ "list" ] }';

    reports:
        "ClassicArray:$(with)"
          with => string_mustache( "{{%-top-}}", ClassicArray);
        "DataContainer:$(with)"
          with => string_mustache( "{{%-top-}}", DataContainer);
  }
#+END_SRC

#+REVEAL: split

#+RESULTS: =examples/00-04-classicarray-vs-datacontainer.cf=
#+begin_example
R: ClassicArray:{
  "deep": [
    "list"
  ],
  "key": "value"
}
R: DataContainer:{
  "deep": [
    "list"
  ],
  "key": "value"
}
#+end_example

** Pop Quiz
:PROPERTIES:
:ID:       7f27eca0-1121-4c25-bfb3-b5e0cdd3de46
:END:

#+ATTR_REVEAL: :frag roll-in
- Which component makes changes to your system?

#+ATTR_REVEAL: :frag roll-in
- Which component schedules agent runs?

#+ATTR_REVEAL: :frag roll-in
- What symbol terminates a promise?

#+ATTR_REVEAL: :frag roll-in
    - [[file:images/What is your quest - To seek the Holy Grail.mp4][What is your quest?]]

#+ATTR_REVEAL: :frag roll-in
- What are promise comments used for?

#+ATTR_REVEAL: :frag roll-in
- What types of variables are available?

#+ATTR_REVEAL: :frag roll-in
- How are decisions made?

#+CAPTION: Speaker Notes
#+begin_notes
- Which component makes changes to your system? :: ~cf-agent~
- Which component schedules agent runs? :: ~cf-execd~
- What symbol terminates a promise? :: semicolon (=;=)
- What is your quest? :: *To seek the Holy Grail!*
- What are promise comments used for? :: To document *why* a promise is important.
- What types of variables are available? :: list, string, int, real, data
- How are decisions made? :: Using classes and class expressions
#+end_notes
* Policy Examples
:PROPERTIES:
:ID:       190c0079-5336-4e03-8ea4-c71a2cfa684f
:END:

#+CAPTION: Speaker Notes
#+begin_notes
  For convenience in working with examples we will use the [autorun]() feature
  from the masterfiles policy framework.

  - Autorun bundles are executed in lexical order. Use digit prefixes to get
    specific ordering.
#+end_notes

** Enable services_autorun
:PROPERTIES:
:ID:       94b248ac-68df-4677-b03c-9149d3a548df
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles]# cat > def.json <<EOF
  {
    "vars": {
              "mpf_access_rules_collect_calls_admit_ips": [ "0.0.0.0/0" ],
              "control_server_call_collect_interval": "1",
              "control_hub_exclude_hosts": [ "0.0.0.0/0" ]
    },
    "classes": {
                 "mpf_augments_control_enabled": [ "any::" ],
                 "client_initiated_reporting_enabled": [ "any::" ],
                 "cfengine_internal_purge_policies": [ "any::" ],
                 "services_autorun": [ "any::" ]
      }
  }
  EOF
#+END_EXAMPLE

#+CAPTION: Speaker notes
#+begin_notes
- Enable autorun
- Purge files in inputs that don't exist upstream (make update more of a sync behavior)
- Client initated reporting with a 1 minute interval
#+end_notes

** Create a file
:PROPERTIES:
:ID:       9cb68439-c70c-4fe1-be2c-176fdf328588
:END:
[[file:examples/00-20-example-create_file.cf][examples/00-20-example-create_file.cf]]
#+Name: =examples/00-20-example-create_file.cf=
#+begin_src cfengine3 :tangle examples/00-20-example-create_file.cf :bundlesequence nologin
  bundle agent nologin
  {

    meta:
        "tags" slist => { "autorun" };
    files:
        "/tmp/nologin"
          create => "true",
          classes => results("bundle", "my_file");

    reports:
      my_file_repaired::
        "File repaired";

      any::
        "File Exists"
          if => fileexists("/tmp/nologin");
  }
  bundle agent __main__{methods:"nologin";}
#+END_SRC

#+RESULTS: =examples/00-20-example-create_file.cf=
: R: File repaired
: R: File Exists

#+CAPTION: Speaker notes
#+begin_notes
Copy this example to =services/autorun/nologin.cf= and run the policy.
What happens when you restrict the context of the =tags= meta variable?
#+end_notes

** Update file
:PROPERTIES:
:ID:       6c117f0e-2e5a-44e3-9119-4ea9568ab8c3
:END:
[[file:examples/00-20-example-update_file.cf][examples/00-20-example-update_file.cf]]
#+Name: =examples/00-20-example-update_file.cf=
#+BEGIN_SRC cfengine3 :define DEBUG :command-in-result-t :tangle examples/00-20-example-update_file.cf
bundle agent heartbeat
{
  files:
    "$(sys.statedir)/$(this.bundle)" -> { "Monitoring" }
      create  => "true",
      touch   => "true",
      classes => results("bundle", "heartbeat"),
      handle  => "cf_agent_heartbeat_thump",
      comment => "This policy simply updates the timestamp
                  of the file so an external monitoring
                  system can validate the system is working.";

  reports:
    DEBUG|DEBUG_cf_agent_heartbeat::

      "DEBUG $(this.bundle): Heartbeat"
        if => "heartbeat_repaired";

      "DEBUG $(this.bundle): Flatline"
        unless => "heartbeat_repaired";
}
  bundle agent __main__{methods:"heartbeat";}
#+END_SRC

#+CAPTION: Speaker notes
#+begin_notes
- What happens when you run the policy?
  - Nothing
- Why?
  - Because the bundle is not /tagged/ with =autorun=
- Adjust the policy so that it gets run automatically
#+end_notes

#+RESULTS: =examples/00-20-example-update_file.cf=
: R: DEBUG main: Heartbeat

** Make sure a package is installed and service running
:PROPERTIES:
:ID:       aa3065ea-f167-4b8a-9fde-f07ca8677429
:END:
[[file:examples/00-20-example-package_and_service.cf][examples/00-20-example-package_and_service.cf]]
#+BEGIN_SRC cfengine3 :tangle examples/00-20-example-package_and_service.cf :prologue ""
  bundle agent example_package_and_service
  {
    meta:
      !policy_server::
        "tags" slist => { "autorun" };

    vars:
      centos|redhat::
        "_package" string => "httpd";
        "_service" string => "httpd";

      ubuntu|debian::
        "_package" string => "apache2";
        "_service" string => "apache2";
    # ...
#+END_SRC

#+CAPTION: Speaker notes
#+begin_notes
- What is this policy doing?
  - Defining variables for different platforms
#+end_notes

#+REVEAL: split

#+BEGIN_SRC cfengine3 :tangle examples/00-20-example-package_and_service.cf :prologue ""
      any::
        "_default_page"
          string => ifelse( "debian|ubuntu", "/var/www/html/index.html",
                            "centos|redhat", "/var/www/error/noindex.html",
                            "UNKNOWN" ),
          meta => { "inventory", "attribute_name=Apache Default Page"};

    packages:
        "$(_package)"
          policy => "present";

    services:
        "$(_service)"
          service_policy => "start";

    reports:
      inform_mode|verbose_mode::
        "My default page is from $(_default_page)";
  }
  bundle agent __main__{methods:"example_package_and_service";}
#+END_SRC

#+CAPTION: Speaker notes
#+begin_notes
- What is this policy doing?
  - Defining and inventorying the default page based on platform
  - Ensuring the package (name based on variable which differs by platform) is present
  - Ensure the service is running
- Note, there are two implementations of /packages/ promises.
#+end_notes

*** Competing implementations of packages promises

- /methods/ (legacy) vs /modules/ (modern)

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  packages:
    "apache2"
      package_policy => "add",
      comment => "I use the method based implementation";

    "apache2"
      policy => "present",
      comment => "I use the module based implementation";
#+END_SRC

#+CAPTION: Speaker notes
#+begin_notes
- package methods allow for more flexible version specification
- package modules allow for more simple expression of state
- Developing package methods only allow specification of regex and commands
- Developing package modules allows much freedom and they interface with cf-agent via the module protocol
- More package methods available than package modules
- Recommend using package modules
#+end_notes

** Classify role based on hostname
:PROPERTIES:
:ID:       b4f7b0a9-5839-4d1b-bbec-f12d6a68f282
:END:
[[file:examples/00-20-example-classes-role_by_hostname.cf][examples/00-20-example-classes-role_by_hostname.cf]]
#+BEGIN_SRC cfengine3 :tangle examples/00-20-example-classes-role_by_hostname.cf
bundle common classes_role_by_hostname
{
  classes:
    "env_prod"
      meta => { "inventory", "attribute_name=Role Classes" },
      or => {
              regcmp( "hub", $(sys.uqhost) ),
              regcmp( "^prd.*", $(sys.uqhost) ),
            };

    "webserver"
      expression => "host001",
      meta => { "inventory", "attribute_name=Role Classes" };

    "webserver"
      expression => regcmp( "^www.*", $(sys.fqhost) ),
      meta => { "inventory", "attribute_name=Role Classes" };
}
bundle agent __main__{methods:"classes_role_by_hostname";}
#+END_SRC

** Classify geographic location by network
:PROPERTIES:
:ID:       fae34dc9-c6af-4bb2-9755-142af0f22d79
:END:
[[file:examples/00-20-example-classes-geographic_location_by_network.cf][examples/00-20-example-classes-geographic_location_by_network]]
#+BEGIN_SRC cfengine3 :tangle examples/00-20-example-classes-geographic_location_by_network.cf :prologue ""
bundle common classify_geo_location_by_network
{
  meta:
    "tags" slist => { "autorun" };

  vars:
    "nadc01_subnets"
      slist => { "172.16.25.0/25", "172.17.0.0/16",
                 "192.168.33.2/32",
               };

    "nadc02_subnets"
      slist => { "172.17.5.0/25", "172.42.0.0/16",
                 "192.168.33.3/32",
               };

    "sadc01_subnets"
      slist => { "172.19.4.0/23", "192.168.33.4-5" };

    "continent"
      string => ifelse("north_america", "North America",
                       "south_america", "South America",
                       "Unknown"),
      meta => { "inventory", "attribute_name=Continent" };
#+END_SRC

#+CAPTION: Speaker notes
#+begin_notes
- What does this policy do?
  - Defines some variables containing subnet specifications
  - Defines and inventories variable for continent based on presence of other classes
    - Where are those other classes defined?
      - Further down in the policy
    - How does something written further down in the policy affect something at the top?
      - Normal Order, 3 passes
#+end_notes

#+REVEAL: split

#+Caption: Continued =examples/00-20-example-classes-geographic_location_by_network.cf=
#+BEGIN_SRC cfengine3 :tangle examples/00-20-example-classes-geographic_location_by_network.cf :prologue ""

  classes:
    "north_america"
      or => { "nadc01", "nadc02" };

    "south_america"
      expression => classmatch("^sadc\d+");

    "nadc01"
      expression => iprange( $(nadc01_subnets) );

    "nadc02"
      expression => iprange( $(nadc02_subnets) );

    "sadc01"
      expression => iprange( $(sadc01_subnets) );

  reports:
    "DEBUG|DEBUG_$(this.bundle)"::
      "DEBUG $(this.bundle): Continent = '$(continent)'";
}
bundle agent __main__{methods:"classify_geo_location_by_network";}
#+END_SRC

#+CAPTION: Speaker notes
#+begin_notes
- What does this policy do?
  - Defines some classes based on the host having an ip within known subnet ranges
  - Emits debug reports if DEBUG class is defined
#+end_notes

** Manage key value entries in a config file
:PROPERTIES:
:ID:       61e9705e-9cec-49f1-89cb-31322c34a17c
:END:
[[file:examples/00-20-example-key_value_config.cf][examples/00-20-example-key_value_config.cf]]
#+BEGIN_SRC cfengine3 :tangle examples/00-20-example-key_value_config.cf :prologue ""
bundle agent manage_ssh
{
  meta:
    "tags" slist => { "autorun" };

  methods:
    "SSH Config Data"
      usebundle => ssh_config;

    "Manage SSH Config"
      usebundle => ssh_config_manage_kv("ssh_config.data");
}
#+END_SRC

#+REVEAL: split

#+BEGIN_SRC cfengine3 :tangle examples/00-20-example-key_value_config.cf  :include-stdlib nil :prologue ""
bundle agent ssh_config
{
  vars:
      "data[PermitRootLogin]" string => "no";
      "data[Protocol]" string => "2";
      "data[Port]" string => "22";

    DEBUG|DEBUG_ssh_config::
      "keys" slist => getindices(data);

  reports:
    DEBUG|DEBUG_ssh_config::
      "DEBUG $(this.bundle): $(keys) = '$(data[$(keys)])'";
}
#+END_SRC

#+REVEAL: split

#+BEGIN_SRC cfengine3 :tangle examples/00-20-example-key_value_config.cf  :include-stdlib nil :prologue ""
bundle agent ssh_config_manage_kv(data)
{
  vars:
    "config" string => "/etc/ssh/sshd_config";

  files:
    "$(config)"
      handle => "ssh_config_manage_kv_entries",
      edit_line => set_line_based("$(data)", " ", "\s+", ".*", "\s*#\s*"),
      classes => scoped_classes_generic("bundle", "sshd_config");

  classes:
    sshd_config_repaired::
      "config_valid"
        expression => returnszero("/usr/sbin/sshd -t -f $(config)", noshell),
        comment => "It's important that we don't restart the service with a
                    broken config, or the service will be down.";

  commands:
    sshd_config_repaired.config_valid::
      "$(paths.service)"
        handle => "ssh_config_manage_kv_restart_after_config_change",
        args => "sshd restart",
        comment => "The service must be restarted in order to pick up new
                    configuration settings.";

  reports:
      "DEBUG $(this.bundle): Reparied configuration"
        if => "sshd_config_repaired";

      "DEBUG $(this.bundle): Configuration Valid"
        if => "config_valid";

      "DEBUG $(this.bundle): Restarted sshd after config change"
        depends_on => { "ssh_config_manage_kv_restart_after_config_change" };
}
bundle agent __main__{methods:"manage_ssh";}
#+END_SRC

#+REVEAL: split

#+BEGIN_EXAMPLE
  [root@hub masterfiles]# cf-agent -KID DEBUG_ssh_config,DEBUG_ssh_config_manage_kv
      info: Installing cfe_internal_non_existing_package...
  R: DEBUG ssh_config: PermitRootLogin = 'no'
  R: DEBUG ssh_config: Protocol = '2'
  R: DEBUG ssh_config: Port = '22'
      info: Edit file '/etc/ssh/sshd_config'
  R: DEBUG ssh_config_manage_kv: Reparied configuration
      info: Executing 'no timeout' ... '/sbin/service sshd restart'
    notice: Q: "...in/service sshd": Stopping sshd:          [  OK  ]
  Q: "...in/service sshd": Starting sshd:                    [  OK  ]
      info: Last 2 quoted lines were generated by promiser '/sbin/service sshd restart'
      info: Completed execution of '/sbin/service sshd restart'
  R: DEBUG ssh_config_manage_kv: Configuration Valid
  R: DEBUG ssh_config_manage_kv: Restarted sshd after config change
#+END_EXAMPLE

** Templating a file with mustache
:PROPERTIES:
:ID:       c2bc7d78-1a04-4439-9ee8-935999e0ef06
:END:
[[file:examples/00-20-example-mustache_template_inline_using_datastate.cf][examples/00-20-example-mustache_template_inline_using_datastate.cf]]
#+BEGIN_SRC cfengine3 :tangle examples/00-20-example-mustache_template_inline_using_datastate.cf
bundle agent motd
{
  meta:
    "tags" slist => { "autorun" };

  vars:
    "owner" string => "Bruce Wayne";

  files:
    "/etc/motd"
      template_method => "inline_mustache",
      edit_template_string => 'Welcome to {{{vars.sys.fqhost}}}!

For support issues please contact {{{vars.motd.owner}}}.';
}
bundle agent __main__{methods:"motd";}
#+END_SRC

#+CAPTION: Speaker notes
#+begin_notes
- What does this policy do?
  - Renders =/etc/motd= using an inline mustache template, expanding variables from =datastate()=
- How could you tweak this to set different owners for different hosts?
#+end_notes

** Mustache extensions
:PROPERTIES:
:ID:       924c6942-3d39-48b5-abc9-cf822100a81f
:END:
- =-top-= data handed to the templating engine
- =@= Currently iterated /key/
- =%= Multi-line JSON representation of data
- =$= Serialized JSON representation of data

[[file:examples/02-01-mustache-extensions.cf][examples/02-01-mustache-extensions.cf]]
#+NAME: =examples/02-01-mustache-extensions.cf=
#+BEGIN_SRC cfengine3 :exports both :tangle examples/02-01-mustache-extensions.cf
bundle agent example_mustache_extensions
{
  vars: "d" data => '{ "key": "value", "list": ["one", "two"]}';
  reports:
    "Multiline: $(with)" with => string_mustache( "{{%-top-}}", d);
    "Serial: $(with)" with => string_mustache( "{{$-top-}}", d);
    "Keys: $(with)" with => string_mustache( "{{#-top-}}{{{@}}}, {{/top}}", d);
}
bundle agent __main__{methods:"example_mustache_extensions";}
#+END_SRC

#+CAPTION: Speaker notes
#+begin_notes
- What does this policy do?
  - Defines =d= as a data container
  - Emits multiline, serialized JSON representation of datacontainer
  - Emits keys of the data container
#+end_notes

#+REVEAL: split

#+RESULTS: =examples/02-01-mustache-extensions.cf=
: R: Multiline: {
:   "key": "value",
:   "list": [
:     "one",
:     "two"
:   ]
: }
: R: Serial: {"key":"value","list":["one","two"]}
: R: Keys: key, list,

#+REVEAL: split
[[file:examples/02-01-mustache-extensions-yaml.cf][examples/02-01-mustache-extensions-yaml.cf]]
#+NAME: =examples/02-01-mustache-extensions-yaml.cf=
#+BEGIN_SRC cfengine3 :exports both :tangle examples/02-01-mustache-extensions-yaml.cf
  bundle agent example_mustache_extensions_yaml
  {
    vars: "d" data => '---
  key: value
  list:
    - one
    - two';
    reports:
      "Multiline: $(with)" with => string_mustache( "{{%-top-}}", d);
      "Serial: $(with)" with => string_mustache( "{{$-top-}}", d);
      "Keys: $(with)" with => string_mustache( "{{#-top-}}{{{@}}}, {{/top}}", d);
  }
  bundle agent __main__{methods:"example_mustache_extensions_yaml";}
#+END_SRC

#+CAPTION: Speaker notes
#+begin_notes
- What does this policy do?
  - Defines =d= as a data container by specifying YAML inline
  - Emits multiline, serialized JSON representation of datacontainer
  - Emits keys of the data container
- Note: the output is identical to the version where =d= was defined with inline JSON
#+end_notes

#+REVEAL: split
#+RESULTS: =examples/02-01-mustache-extensions-yaml.cf=
: R: Multiline: {
:   "key": "value",
:   "list": [
:     "one",
:     "two"
:   ]
: }
: R: Serial: {"key":"value","list":["one","two"]}
: R: Keys: key, list,

#+CAPTION: Speaker notes
#+begin_notes
- Note: the output is identical to the version where =d= was defined with inline JSON
#+end_notes

** Inventory SSH Host Keys
:PROPERTIES:
:ID:       5de931a8-1b0d-48c7-a655-ed3c024eca17
:END:
[[file:examples/inventory-ssh-host-keys.cf][examples/inventory-ssh-host-keys.cf]]
#+NAME: examples/inventory-ssh-host-keys.cf
#+BEGIN_SRC cfengine3 :tangle examples/inventory-ssh-host-keys.cf
  bundle agent example_inventory_ssh_host_keys
  {
    vars:
        "keys" slist => lsdir("/etc/ssh", "ssh_host_\w+_key", "false");
        "$(keys)"
          data => data_regextract("ssh_host_(?<type>\w+)_key", $(keys) );

        "type[$(keys)]"
          string => "$($(keys)[type])",
          meta => { "inventory", "attribute_name=SSH HostKey Type" };

        # Warning ssh-keygen output may vary across versions
        "fingerprint[$(keys)]"
          string => nth(
                         string_split(
                                       execresult("/usr/bin/ssh-keygen -l -f /etc/ssh/$(keys).pub",
                                                  noshell),
                                       "\s+", 5), 1),
          meta => { "inventory", "attribute_name=SSH HostKey Fingerprint" };

    reports:
        "/etc/ssh/$(keys).pub
          type: $($(keys)[type])
          fingerprint: $(fingerprint[$(keys)])";
  }
  bundle agent __main__{methods:"example_inventory_ssh_host_keys";}
#+END_SRC

#+REVEAL: split

#+RESULTS: examples/inventory-ssh-host-keys.cf
#+begin_example
R: /etc/ssh/ssh_host_ed25519_key.pub
        type: ed25519
        fingerprint: SHA256:NA04HcvSPZ/wAp/vJUIcOV799ImTWnbFEX0R9R2SXUI
R: /etc/ssh/ssh_host_ecdsa_key.pub
        type: ecdsa
        fingerprint: SHA256:gN37F6qt7vkYvVzxgOii5hNzu7EPJw/yTvEnRtr+rLk
R: /etc/ssh/ssh_host_dsa_key.pub
        type: dsa
        fingerprint: SHA256:/5b5NncWQL43gi9AQarZvVoQW5M+LJxk8KqFYGvZpqI
R: /etc/ssh/ssh_host_rsa_key.pub
        type: rsa
        fingerprint: SHA256:tSRcjuKPF6W/jcyhqYG7tHlVkcrUZGh0RmwFEEpMPzc
#+end_example

** Interacting with APIs from within CFEngine Policy
:PROPERTIES:
:ID:       b38db36b-ab44-46ca-95a2-739889385b75
:END:

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
 If it's a simple http(s) call you can use the [[https://docs.cfengine.com/docs/3.15/reference-functions-url_get.html][~url_get()~ function]]. It's fairly limited, but we can extend it if we have good real world use cases. For some cases, like POST currently you would need to leverage something like ~curl~ directly.
 - Not usually a huge limitation
   - Do you really /want/ thousands of hosts hitting some api directly?
   - Authorization for each host/device
   - Network availability
 Here is a very simple, contrived example working with the JSON returned by wtfismyip.com.
#+END_NOTES

[[file:examples/example-url_get-wtfismyip-v0.cf][examples/example-url_get-wtfismyip-v0.cf]]
#+Name: example-url_get-wtfismyip-v0.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle examples/example-url_get-wtfismyip-v0.cf :command-in-result t
  bundle agent example_url_get_wtfismyip_v0
  {
    vars:
        # This is the URL that we will query.
        "url" string => "https://wtfismyip.com/json";

        # We don't need to supply any specific options in this case.
        # url.max_content is a typical setting to change. 4K isn't enough for
        # some, (many?) API responses.
        "options" data => '{}';

        # Here we make our http(s) call, storing the response in `d`
        "d" data => url_get( $(url), @(options));

        # The response content is returned as a *string* inside the `content`. In
        # order to work with it, we need to pull it into a proper data container.
        "content" data => "$(d[content])";

    reports:

        # Let's view the multi-line JSON representation of the `url_get()` response.
        "$(with)" with => string_mustache( "{{%-top-}}", d);

        # Let's view the multi-line JSON representation of our extracted `content`
        # datacontainer.
        "$(with)" with => string_mustache( "{{%-top-}}", content);
  }
  bundle agent __main__{methods:"example_url_get_wtfismyip_v0";}
#+END_SRC

#+REVEAL: split

#+RESULTS: example-url_get-wtfismyip-v0.cf
#+begin_example
# cf-agent --no-lock --log-level info --file examples/example-url_get-wtfismyip-v0.cf
R: {
  "content": "{\n    \"YourFuckingIPAddress\": \"24.143.34.87\",\n    \"YourFuckingLocation\": \"Tonganoxie, KS, United States\",\n    \"YourFuckingHostname\": \"24-143-34-87-dynamic.midco.net\",\n    \"YourFuckingISP\": \"Midco\",\n    \"YourFuckingTorExit\": false,\n    \"YourFuckingCountryCode\": \"US\"\n}\n",
  "headers": "HTTP/1.1 200 OK\r\nAccess-Control-Allow-Methods: GET\r\nAccess-Control-Allow-Origin: *\r\nContent-Type: application/json\r\nDate: Fri, 28 Feb 2020 14:23:28 GMT\r\nContent-Length: 268\r\n\r\n",
  "rc": 0,
  "returncode": 200,
  "success": true
}
R: {
  "YourFuckingCountryCode": "US",
  "YourFuckingHostname": "24-143-34-87-dynamic.midco.net",
  "YourFuckingIPAddress": "24.143.34.87",
  "YourFuckingISP": "Midco",
  "YourFuckingLocation": "Tonganoxie, KS, United States",
  "YourFuckingTorExit": false
}
#+end_example

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
What was the real real use case behind this?
- Have Kubernetes running components
- Components register them selves Consul
- Loadbalancer (running in a container) needs to refresh it's config based on the current Consul data

How is this being accomplished today?
- Using [[https://github.com/hashicorp/consul-template][Consul template]]
  - But, it's quite limited
    - Can subscribe to events from consul
    - Can run a command or render a template when something changes

The idea is to run CFEngine (~cf-agent~) when something changes.
#+END_NOTES

* Policy Exercises
** Edit a file

Write a policy that populates =/etc/issue= with legaleze.

** Create local users

Write a policy that creates at least 2 users.

** Inventory the local users

Tag the variable(s) that contain the usernames you promised for /inventory/.

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
   meta => { "inventory", "attribute_name=My users" }
#+END_SRC

** Create a file

Write a policy that ensures =/etc/cron.allow= is populated with one of the previously created users allowed to have cron jobs.

Switch to a user and try to ~crontab -e~.

*** Possibility 0                                                :noexport:

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  bundle agnet main
  {
    vars: "file" string => "/etc/cron.allow";

   "$(file)"
     create => "true",
     edit_line => lines_present("nickanderson");
  }
#+END_SRC

*** Possibility 1                                                :noexport:

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  bundle agnet main
  {
    vars: "file" string => "/etc/cron.allow";

   "$(file)"
     create => "true",
     edit_line => lines_present("nickanderson");
     edit_line => insert_file("/tmp/users/txt");
  }
#+END_SRC

** Inventory users in /etc/cron.allow
Inventory the users listed in =/etc/cron.allow=
** Enable sshd banner
Write a policy that enables the ssh banner and directs it to =/etc/issue=. sshd
should be restarted after changing its configuration.
** Install ntpd and configure driftfile
:PROPERTIES:
:ID:       1a5a1fce-640e-4037-8dec-b50755dc5875
:SOLUTIONS: [[id:6c04ab5b-87fb-40c3-95bb-bec655f8015c][Example illustrating Install ntpd and configure driftfile]]
:END:
- Install ntp
- Ensure service is running
- Configure path to driftfile =/var/lib/ntp/drift=?
- Make sure service is restarted if configuration file content is altered

** Multiple outcomes :noexport:
:PROPERTIES:
:ID:       7d3b755b-1313-430f-8e46-9c6d6ad8e281
:END:

#+CAPTION: Create immutable file
#+BEGIN_SRC sh
  touch /tmp/immutable
  sudo chattr +i /tmp/immutable
#+END_SRC

#+REVEAL: split

#+NAME: =examples/00-20-example-multiple_outcomes.cf=
#+CAPTION: =examples/00-20-example-multiple_outcomes.cf=
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle examples/00-20-example-multiple_outcomes.cf
bundle agent example_multiple_outcomes
{
  files:
    "/tmp/immutable"
      create => "true",
      edit_line =>  example_edit_line,
      classes => results("bundle", "my_id");

  vars:
    "classes" slist => classesmatching(".*my_id.*");

  reports:
    "Found Class = '$(classes)'";
}

bundle edit_line example_edit_line
{
  insert_lines:
    "I want to edit an immutable file";
}
bundle agent __main__{methods:"example_multiple_outcomes";}
#+END_SRC

#+REVEAL: split

#+RESULTS: =examples/00-20-example-multiple_outcomes.cf=
#+begin_example
    info: Inserted the promised line 'I want to edit an immutable file' into '/tmp/immutable' after locator
    info: insert_lines promise 'I want to edit an immutable file' repaired
   error: Can't rename '/tmp/immutable.cf-after-edit' to '/tmp/immutable' - so promised edits could not be moved into place. (rename: Operation not permitted)
   error: Unable to save file '/tmp/immutable' after editing
   error: Errors encountered when actuating files promise '/tmp/immutable'
R: Found Class = 'my_id_failed'
R: Found Class = 'my_id_not_kept'
R: Found Class = 'my_id_error'
R: Found Class = 'my_id_kept'
R: Found Class = 'my_id_reached'
   error: Method 'example_multiple_outcomes' failed in some repairs
#+end_example

Refer to [[https://docs.cfengine.com/docs/3.10/reference-masterfiles-policy-framework-lib-common.html#results][implementation of the =results= classes body]] in the stdlib.

#+CAPTION: Cleanup immutable file
#+BEGIN_SRC sh
sudo chattr -i /tmp/immutable
sudo rm /tmp/immutable
#+END_SRC

** Report
:PROPERTIES:
:ID:       3bfc2fab-ad7c-4092-8896-98d36d7b8aad
:END:

Write a policy that defines a name in separate parts (at least 3). Then have
CFEngine report the name in a random order.

*** Example solution
:PROPERTIES:
:ID:       cd5b8f69-5b33-45cb-9bd7-950d028efdc8
:END:

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
  This solution will print the name multiple times, exposing normal order. Can you make it print just once?
#+END_NOTES

#+Name: examples/example-report-randomized-strings-v0.cf
#+Caption: examples/example-report-randomized-strings-v0.cf
#+BEGIN_SRC cfengine3 :tangle examples/example-report-randomized-strings-v0.cf
bundle agent example_report_randomized_strings_v0
{
  vars:
    "name_parts" slist => { "Ronald", "Mck", "Donald" };
    "shuffled" slist => shuffle( name_parts, randomint(0, inf) );
    "name" string => join(" ", shuffled );

  reports:
    "$(name)";
}
bundle agent __main__{methods:"example_report_randomized_strings_v0";}
#+END_SRC

#+RESULTS: examples/example-report-randomized-strings-v0.cf
: R: Ronald Donald Mck
: R: Mck Ronald Donald
: R: Donald Ronald Mck

** Trigger an action when a file changes
:PROPERTIES:
:ID:       e0fb3d65-e3d8-4a1a-bc57-8338cc2e70f7
:END:

Write policy to monitor a file for change. When a change is seen report =Winner
Winner Chicken Dinner=. Manually edit the file, show how cfengine detects and
reports on the change.

** Automatically abort based on file presence
:PROPERTIES:
:ID:       8d8825af-14a4-418b-a5cd-4f9141c0ed22
:END:

Write a policy that will abort cfengine execution if the file
=$(sys.statedir)/abort_agent_execution= exists.

- See [[https://docs.cfengine.com/lts/reference-components-cf-agent.html#abortclasses][abortclasses]] in the cfengine documentation
** Delete file based on age
:PROPERTIES:
:ID:       b4ba2fd4-f546-49ed-aa97-3de9be1cc771
:END:

Write a policy that will delete =$(sys.statedir)/abort_agent_execution= if it is
older than 1 hour.
** Kill a process
:PROPERTIES:
:ID:       c1ae5f7c-ff93-4833-be0f-e58a5c6798f1
:END:

Write a policy to kill irssi running on webservers. No need for our webservers
to be connected to IRC.

#+BEGIN_EXAMPLE
  cp /bin/sleep /tmp/irssi
  /tmp/irssi 5000
#+END_EXAMPLE

** Building on example-url_get-wtfismyip-v0.cf
:PROPERTIES:
:ID:       bcad1cb1-0589-412a-ab17-a3bb8db66fa4
:END:

- Let's use the response /content/ from the previous example in a template to manage a file.

[[file:examples/example-url_get-wtfismyip-v1.cf][examples/example-url_get-wtfismyip-v1.cf]]
#+Name: examples/example-url_get-wtfismyip-v1.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports none :tangle examples/example-url_get-wtfismyip-v1.cf :command-in-result t
  bundle agent example_url_get_wtfismyip_v1
  {
    vars:
        # This is the URL that we will query.
        "url" string => "https://wtfismyip.com/json";

        # We don't need to supply any specific options in this case.
        # url.max_content is a typical setting to change. 4K isn't enough for
        # some, (many?) API responses.
        "options" data => '{}';

        # Here we make our http(s) call, storing the response in `d`
        "d" data => url_get( $(url), @(options));

        # The response content is returned as a *string* inside the `content`. In
        # order to work with it, we need to pull it into a proper data container.
        "content" data => "$(d[content])";

    files:

        # Here we promise that a file exists, and that it's content matches a
        # mustache template which is supplied our `content` datacontainer.
        "/tmp/file.txt"
          create => "true",
          template_method => "inline_mustache",
          edit_template_string => "You seem to be from the {{{YourFuckingCountryCode}}}.
  Specifically {{{YourFuckingLocation}}}.
  And your ISP is {{{YourFuckingISP}}}.",
          template_data => @(content);

    reports:

        # Let's view the multi-line JSON representation of the `url_get()` response.
        "$(with)" with => string_mustache( "{{%-top-}}", d);

        # Let's view the multi-line JSON representation of our extracted `content` datacontainer.
        "$(with)" with => string_mustache( "{{%-top-}}", content);

        # Let's view the content of the file we rendered
        "/tmp/file.txt" printfile => cat( $(this.promiser) );
  }
  bundle agent __main__{methods:"example_url_get_wtfismyip_v1";}
#+END_SRC

#+REVEAL: split

#+RESULTS: examples/example-url_get-wtfismyip-v1.cf
#+begin_example
# cf-agent --no-lock --log-level info --file examples/example-url_get-wtfismyip-v1.cf
    info: Created file '/tmp/file.txt', mode 0600
    info: Updated rendering of '/tmp/file.txt' from mustache template 'inline'
    info: Edited file '/tmp/file.txt'
    info: files promise '/tmp/file.txt' repaired
R: {
  "content": "{\n    \"YourFuckingIPAddress\": \"24.143.37.227\",\n    \"YourFuckingLocation\": \"Lawrence, KS, United States\",\n    \"YourFuckingHostname\": \"24-143-37-227-dynamic.midco.net\",\n    \"YourFuckingISP\": \"Midco\",\n    \"YourFuckingTorExit\": false,\n    \"YourFuckingCountryCode\": \"US\"\n}\n",
  "headers": "HTTP/1.1 200 OK\r\nAccess-Control-Allow-Methods: GET\r\nAccess-Control-Allow-Origin: *\r\nContent-Type: application/json\r\nDate: Thu, 20 Aug 2020 15:19:03 GMT\r\nContent-Length: 268\r\n\r\n",
  "rc": 0,
  "returncode": 200,
  "success": true
}
R: {
  "YourFuckingCountryCode": "US",
  "YourFuckingHostname": "24-143-37-227-dynamic.midco.net",
  "YourFuckingIPAddress": "24.143.37.227",
  "YourFuckingISP": "Midco",
  "YourFuckingLocation": "Lawrence, KS, United States",
  "YourFuckingTorExit": false
}
R: /tmp/file.txt
R: You seem to be from the US.
R: Specifically Lawrence, KS, United States.
R: And your ISP is Midco.
#+end_example

#+REVEAL: split

- Now, let's extend it further.
- After updating the file, let's do something, like run a command or restart a service.
- *hint*, define a class as the result of the promise

#+BEGIN_NOTES
Here we add the =results= /classes/ body. It will define bundle (local) scoped classes for the outcomes (kept, notkept, repaired) produced by the promise.
#+END_NOTES

[[file:examples/example-url_get-wtfismyip-v2.cf][examples/example-url_get-wtfismyip-v2.cf]]
#+Name: examples/example-url_get-wtfismyip-v2.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports none :tangle examples/example-url_get-wtfismyip-v2.cf :command-in-result t
  bundle agent example_url_get_wtfismyip_v2
  {
    vars:
        # This is the URL that we will query.
        "url" string => "https://wtfismyip.com/json";

        # We don't need to supply any specific options in this case.
        # url.max_content is a typical setting to change. 4K isn't enough for
        # some, (many?) API responses.
        "options" data => '{}';

        # Here we make our http(s) call, storing the response in `d`
        "d" data => url_get( $(url), @(options));

        # The response content is returned as a *string* inside the `content`. In
        # order to work with it, we need to pull it into a proper data container.
        "content" data => "$(d[content])";

        # The file we are going to manage which will contain content from the `url_get()` response.
        "file" string => "/tmp/file.txt";

    files:
        # Here we promise that a file exists, and that it's content matches a
        # mustache template which is supplied our `content` datacontainer.
        "$(file)"
          create => "true",
          template_method => "inline_mustache",
          edit_template_string => "You seem to be from the {{{YourFuckingCountryCode}}}.
  Specifically {{{YourFuckingLocation}}}.
  And your ISP is {{{YourFuckingISP}}}.",
          template_data => @(content),
          classes => results( "bundle", "file_content"); # Here we attach the `results`
                     # *classes* body to the promise. This will define bundle (local) scoped
                     # classes starting with `file_content` and ending with the various
                     # outcomes produced by the promise (kept, notkept, repaired).


    # Typically:
    # services:
    #   file_content_repaired::
    #     "myservice" service_policy => "restart";

    commands:
      # This context applies until the next context or until the next promise type.
      file_content_repaired::
        "/bin/echo $(file) changed, so I ran a command";
        "/bin/echo I can do more than one thing using a class expression";

    reports:

        # Let's view the multi-line JSON representation of the `url_get()` response.
        "$(with)" with => string_mustache( "{{%-top-}}", d);

        # Let's view the multi-line JSON representation of our extracted `content` datacontainer.
        "$(with)" with => string_mustache( "{{%-top-}}", content);

        # Let's view the content of the file we rendered
        "$(file)" printfile => cat( $(this.promiser) );

        # Here we emit a report when we have repaired the file
        "My $(file) changed, so I ran a command"
          if => "file_content_repaired";
  }
  bundle agent __main__{methods:"example_url_get_wtfismyip_v2";}
#+END_SRC

#+REVEAL: split

#+RESULTS: examples/example-url_get-wtfismyip-v2.cf
#+begin_example
# cf-agent --no-lock --log-level info --file examples/example-url_get-wtfismyip-v2.cf
R: {
  "content": "{\n    \"YourFuckingIPAddress\": \"24.143.37.227\",\n    \"YourFuckingLocation\": \"Lawrence, KS, United States\",\n    \"YourFuckingHostname\": \"24-143-37-227-dynamic.midco.net\",\n    \"YourFuckingISP\": \"Midco\",\n    \"YourFuckingTorExit\": false,\n    \"YourFuckingCountryCode\": \"US\"\n}\n",
  "headers": "HTTP/1.1 200 OK\r\nAccess-Control-Allow-Methods: GET\r\nAccess-Control-Allow-Origin: *\r\nContent-Type: application/json\r\nDate: Thu, 20 Aug 2020 15:22:36 GMT\r\nContent-Length: 268\r\n\r\n",
  "rc": 0,
  "returncode": 200,
  "success": true
}
R: {
  "YourFuckingCountryCode": "US",
  "YourFuckingHostname": "24-143-37-227-dynamic.midco.net",
  "YourFuckingIPAddress": "24.143.37.227",
  "YourFuckingISP": "Midco",
  "YourFuckingLocation": "Lawrence, KS, United States",
  "YourFuckingTorExit": false
}
R: /tmp/file.txt
R: You seem to be from the US.
R: Specifically Lawrence, KS, United States.
R: And your ISP is Midco.
#+end_example

#+REVEAL: split

- Was your subsequent promise actuated?

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
Rightfully, no commands were executed and no extra report emitted because the file already existed with the desired content. Let's modify the target file so that the files promise will be /repaired/ and subsequently, we will execute commands and emit the extra report.
Modify the promised file so that we have something to repair
#+END_NOTES

#+REVEAL: split

- Find the classes that /were/ defined

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
- Verbose mode
- =--show-evaluated-classes=
- =classesmatching()= *winner winner chicken dinner*
#+END_NOTES

#+REVEAL: split

#+CAPTION: Modify the promised file so that we have something to repair
#+BEGIN_SRC  sh
  echo HELLO WORLD > /tmp/file.txt
  cat /tmp/file.txt
#+END_SRC

#+RESULTS:
: HELLO WORLD

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
Now that it differs from what we desire next time we run the policy, it should get repaired.
#+END_NOTES

#+REVEAL: split

- File updated?
- Classes expected defined?

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
The file was updated with the desired content as expected.

Wait, why was =file_content_kept= defined? The promise was repaired, why does it also claim to be kept? This is because the promise specified multiple things, both that the file should exist ( =create => "true"= ) and the content ( =edit_template => "inline_mustache"= ) itself. Let's separate them into discrete promises. Note, in practice this usually does not matter, but it's an important detail to know about.
#+END_NOTES

#+Name: examples/example-url_get-wtfismyip-v3.cf
#+CAPTION: examples/example-url_get-wtfismyip-v3.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports none :tangle examples/example-url_get-wtfismyip-v3.cf :command-in-result t
  bundle agent example_url_get_wtfismyip_v3
  {
    vars:
        # This is the URL that we will query.
        "url" string => "https://wtfismyip.com/json";

        # We don't need to supply any specific options in this case.
        # url.max_content is a typical setting to change. 4K isn't enough for
        # some, (many?) API responses.
        "options" data => '{}';

        # Here we make our http(s) call, storing the response in `d`
        "d" data => url_get( $(url), @(options));

        # The response content is returned as a *string* inside the `content`. In
        # order to work with it, we need to pull it into a proper data container.
        "content" data => "$(d[content])";

        # The file we are going to manage which will contain content from the `url_get()` response.
        "file" string => "/tmp/file.txt";

    files:
        # Here we promise that a file exists, and that it's content matches a
        # mustache template which is supplied our `content` datacontainer.
        "$(file)"
          create => "true",
          template_method => "inline_mustache",
          edit_template_string => "You seem to be from the {{{YourFuckingCountryCode}}}.
  Specifically {{{YourFuckingLocation}}}.
  And your ISP is {{{YourFuckingISP}}}.",
          template_data => @(content),
          classes => results( "bundle", "file_content"); # Here we attach the `results`
                     # *classes* body to the promise. This will define bundle (local) scoped
                     # classes starting with `file_content` and ending with the various
                     # outcomes produced by the promise (kept, notkept, repaired).


    # Typically:
    # services:
    #   file_content_repaired::
    #     "myservice" service_policy => "restart";

    commands:
      # This context applies until the next context or until the next promise type.
      file_content_repaired::
        "/bin/echo $(file) changed, so I ran a command";
        "/bin/echo I can do more than one thing using a class expression";

    reports:
        # Let's view the multi-line JSON representation of the `url_get()` response.
        "$(with)" with => string_mustache( "{{%-top-}}", d);

        # Let's view the multi-line JSON representation of our extracted `content` datacontainer.
        "$(with)" with => string_mustache( "{{%-top-}}", content);

        # Let's view the content of the file we rendered
        "$(file)" printfile => cat( $(this.promiser) );

        # Here we emit a report when we have repaired the file
        "My $(file) changed, so I ran a command"
          if => "file_content_repaired";

        # Here for debugging we emit a list of the classes starting with `file_content`;
        "Classes starting with file_content: $(with)"
          with => join( ", ", classesmatching( "file_content.*" ));
  }
  bundle agent __main__{methods:"example_url_get_wtfismyip_v3";}
#+END_SRC

#+RESULTS: examples/example-url_get-wtfismyip-v3.cf
#+begin_example
# cf-agent --no-lock --log-level info --file examples/example-url_get-wtfismyip-v3.cf
R: {
  "content": "{\n    \"YourFuckingIPAddress\": \"24.143.37.227\",\n    \"YourFuckingLocation\": \"Lawrence, KS, United States\",\n    \"YourFuckingHostname\": \"24-143-37-227-dynamic.midco.net\",\n    \"YourFuckingISP\": \"Midco\",\n    \"YourFuckingTorExit\": false,\n    \"YourFuckingCountryCode\": \"US\"\n}\n",
  "headers": "HTTP/1.1 200 OK\r\nAccess-Control-Allow-Methods: GET\r\nAccess-Control-Allow-Origin: *\r\nContent-Type: application/json\r\nDate: Thu, 20 Aug 2020 15:24:34 GMT\r\nContent-Length: 268\r\n\r\n",
  "rc": 0,
  "returncode": 200,
  "success": true
}
R: {
  "YourFuckingCountryCode": "US",
  "YourFuckingHostname": "24-143-37-227-dynamic.midco.net",
  "YourFuckingIPAddress": "24.143.37.227",
  "YourFuckingISP": "Midco",
  "YourFuckingLocation": "Lawrence, KS, United States",
  "YourFuckingTorExit": false
}
R: /tmp/file.txt
R: You seem to be from the US.
R: Specifically Lawrence, KS, United States.
R: And your ISP is Midco.
R: Classes starting with file_content: file_content_kept, file_content_reached
#+end_example

#+REVEAL: split

- Separate the files promise into discrete parts
- Again, mess with the file so that it will be repaired

#+Name: examples/example-url_get-wtfismyip-v4.cf
#+CAPTION: examples/example-url_get-wtfismyip-v4.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports none :tangle examples/example-url_get-wtfismyip-v4.cf :command-in-result t
  bundle agent example_url_get_wtfismyip_v4
  {
    vars:
        # This is the URL that we will query.
        "url" string => "https://wtfismyip.com/json";

        # We don't need to supply any specific options in this case.
        # url.max_content is a typical setting to change. 4K isn't enough for
        # some, (many?) API responses.
        "options" data => '{}';

        # Here we make our http(s) call, storing the response in `d`
        "d" data => url_get( $(url), @(options));

        # The response content is returned as a *string* inside the `content`. In
        # order to work with it, we need to pull it into a proper data container.
        "content" data => "$(d[content])";

        # The file we are going to manage which will contain content from the `url_get()` response.
        "file" string => "/tmp/file.txt";

    files:
        # Here we promise that a file exists
        "$(file)"
          create => "true";

        # Here we promise that the file's content matches a
        # mustache template which is supplied our `content` datacontainer.
        "$(file)"
          template_method => "inline_mustache",
          edit_template_string => "You seem to be from the {{{YourFuckingCountryCode}}}.
  Specifically {{{YourFuckingLocation}}}.
  And your ISP is {{{YourFuckingISP}}}.",
          template_data => @(content),
          classes => results( "bundle", "file_content"); # Here we attach the `results`
                     # *classes* body to the promise. This will define bundle (local) scoped
                     # classes starting with `file_content` and ending with the various
                     # outcomes produced by the promise (kept, notkept, repaired).


    # Typically:
    # services:
    #   file_content_repaired::
    #     "myservice" service_policy => "restart";

    commands:
      # This context applies until the next context or until the next promise type.
      file_content_repaired::
        "/bin/echo $(file) changed, so I ran a command";
        "/bin/echo I can do more than one thing using a class expression";

    reports:
        # Let's view the multi-line JSON representation of the `url_get()` response.
        "$(with)" with => string_mustache( "{{%-top-}}", d);

        # Let's view the multi-line JSON representation of our extracted `content` datacontainer.
        "$(with)" with => string_mustache( "{{%-top-}}", content);

        # Let's view the content of the file we rendered
        "$(file)" printfile => cat( $(this.promiser) );

        # Here we emit a report when we have repaired the file
        "My $(file) changed, so I ran a command"
          if => "file_content_repaired";

        # Here for debugging we emit a list of the classes starting with `file_content`;
        "Classes starting with file_content: $(with)"
          with => join( ", ", classesmatching( "file_content.*" ));
  }
  bundle agent __main__{methods:"example_url_get_wtfismyip_v4";}
#+END_SRC

#+REVEAL: split

#+RESULTS: examples/example-url_get-wtfismyip-v4.cf
#+begin_example
# cf-agent --no-lock --log-level info --file examples/example-url_get-wtfismyip-v4.cf
R: {
  "content": "{\n    \"YourFuckingIPAddress\": \"24.143.37.227\",\n    \"YourFuckingLocation\": \"Lawrence, KS, United States\",\n    \"YourFuckingHostname\": \"24-143-37-227-dynamic.midco.net\",\n    \"YourFuckingISP\": \"Midco\",\n    \"YourFuckingTorExit\": false,\n    \"YourFuckingCountryCode\": \"US\"\n}\n",
  "headers": "HTTP/1.1 200 OK\r\nAccess-Control-Allow-Methods: GET\r\nAccess-Control-Allow-Origin: *\r\nContent-Type: application/json\r\nDate: Thu, 20 Aug 2020 15:25:43 GMT\r\nContent-Length: 268\r\n\r\n",
  "rc": 0,
  "returncode": 200,
  "success": true
}
R: {
  "YourFuckingCountryCode": "US",
  "YourFuckingHostname": "24-143-37-227-dynamic.midco.net",
  "YourFuckingIPAddress": "24.143.37.227",
  "YourFuckingISP": "Midco",
  "YourFuckingLocation": "Lawrence, KS, United States",
  "YourFuckingTorExit": false
}
R: /tmp/file.txt
R: You seem to be from the US.
R: Specifically Lawrence, KS, United States.
R: And your ISP is Midco.
R: Classes starting with file_content: file_content_kept, file_content_reached
#+end_example

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
Note the =file_content_kept= is no longer defined.
#+END_NOTES

#+REVEAL: split

- Adjust =url.max_content= size in options for ~url_get()~

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
To increase the max content size, set =url.max_content= in the options data container. Here I set it to 266, which is 1 byte shy of the size I need to get a valid json response in content (yours will likely be slightly different). That truncates the response and makes for invalid json. Try playing with the size.
#+END_NOTES

#+Name: examples/example-url_get-wtfismyip-v5.cf
#+CAPTION: examples/example-url_get-wtfismyip-v5.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports none :tangle examples/example-url_get-wtfismyip-v5.cf :command-in-result t
  bundle agent example_url_get_wtfismyip_v5
  {
    vars:
        # This is the URL that we will query.
        "url" string => "https://wtfismyip.com/json";

        # We don't need to supply any specific options in this case.
        # url.max_content is a typical setting to change. 4K isn't enough for
        # some, (many?) API responses.
        "options" data => '{"url.max_content": "266"}';

        # Here we make our http(s) call, storing the response in `d`
        "d" data => url_get( $(url), @(options));

        # The response content is returned as a *string* inside the `content`. In
        # order to work with it, we need to pull it into a proper data container.
        "content" data => "$(d[content])";

        # The file we are going to manage which will contain content from the `url_get()` response.
        "file" string => "/tmp/file.txt";

    files:
        # Here we promise that a file exists
        "$(file)"
          create => "true";

        # Here we promise that the file's content matches a
        # mustache template which is supplied our `content` datacontainer.
        "$(file)"
          template_method => "inline_mustache",
          edit_template_string => "You seem to be from the {{{YourFuckingCountryCode}}}.
  Specifically {{{YourFuckingLocation}}}.
  And your ISP is {{{YourFuckingISP}}}.",
          template_data => @(content),
          classes => results( "bundle", "file_content"); # Here we attach the `results`
                     # *classes* body to the promise. This will define bundle (local) scoped
                     # classes starting with `file_content` and ending with the various
                     # outcomes produced by the promise (kept, notkept, repaired).


    # Typically:
    # services:
    #   file_content_repaired::
    #     "myservice" service_policy => "restart";

    commands:
      # This context applies until the next context or until the next promise type.
      file_content_repaired::
        "/bin/echo $(file) changed, so I ran a command";
        "/bin/echo I can do more than one thing using a class expression";

    reports:
        # Let's view the multi-line JSON representation of the `url_get()` response.
        "$(with)" with => string_mustache( "{{%-top-}}", d);

        # Let's view the multi-line JSON representation of our extracted `content` datacontainer.
        "$(with)" with => string_mustache( "{{%-top-}}", content);

        # Let's view the content of the file we rendered
        "$(file)" printfile => cat( $(this.promiser) );

        # Here we emit a report when we have repaired the file
        "My $(file) changed, so I ran a command"
          if => "file_content_repaired";

        # Here for debugging we emit a list of the classes starting with `file_content`;
        "Classes starting with file_content: $(with)"
          with => join( ", ", classesmatching( "file_content.*" ));
  }
  bundle agent __main__{methods:"example_url_get_wtfismyip_v5";}
#+END_SRC

#+REVEAL: split

#+RESULTS: examples/example-url_get-wtfismyip-v5.cf
#+begin_example
# cf-agent --no-lock --log-level info --file examples/example-url_get-wtfismyip-v5.cf
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: No template data for the promise '/tmp/file.txt'
   error: Errors encountered when actuating files promise '/tmp/file.txt'
R: {
  "content": "{\n    \"YourFuckingIPAddress\": \"24.143.37.227\",\n    \"YourFuckingLocation\": \"Lawrence, KS, United States\",\n    \"YourFuckingHostname\": \"24-143-37-227-dynamic.midco.net\",\n    \"YourFuckingISP\": \"Midco\",\n    \"YourFuckingTorExit\": false,\n    \"YourFuckingCountryCode\": \"US\"\n",
  "headers": "HTTP/1.1 200 OK\r\nAccess-Control-Allow-Methods: GET\r\nAccess-Control-Allow-Origin: *\r\nContent-Type: application/json\r\nDate: Thu, 20 Aug 2020 15:27:08 GMT\r\nContent-Length: 268\r\n\r\n",
  "rc": 0,
  "returncode": 200,
  "success": true
}
R: $(with)
R: /tmp/file.txt
R: You seem to be from the US.
R: Specifically Lawrence, KS, United States.
R: And your ISP is Midco.
R: Classes starting with file_content: file_content_failed, file_content_not_kept, file_content_error, file_content_reached
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Error parsing JSON expression '': Unable to parse json data as string, did not end with '}'
   error: Method 'example_url_get_wtfismyip_v5' failed in some repairs
#+end_example

** Inventory batteries
- =/sys/class/power_supply/BAT*/capacity=
  - What batteries are present
  - What are their capacities
  - More than 1? Aggregate capacity
  - Broken batteries?
*** Example solution :noexport:
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :extra-opts --show-evaluated-vars=battery
bundle agent battery
{
  meta:
    "tags" slist => { "autorun" };
  vars:
    "_batteries" slist => lsdir("/sys/class/power_supply/", "[bB][aA][tT]\d+", false);
    "_battery_capacity[$(_batteries)]"
      string => readfile( "/sys/class/power_supply/$(_batteries)/capacity" ),
      meta => { "inventory", "attribute_name=Battery Capacity $(_batteries)" },
      if => isplain( "/sys/class/power_supply/$(_batteries)/capacity" );
    "_battery_capacities" slist => getvalues( _battery_capacity );
    "_battery_count" int => length( _battery_capacities );
    "_sum_battery_capacities" real => sum( _battery_capacities );
    "_aggregate_battery_capacity" string => eval( "$(_sum_battery_capacities)/$(_battery_count)", "math", "infix" ),
      meta => { "inventory", "attribute_name=Aggregate Battery Capacity" };
    "_broken"
      slist => difference( _batteries, getindices( _battery_capacity) ),
      meta => { "inventory", "attribute_name=Broken Batteries" };
}
bundle agent __main__{ methods: "battery";}
#+END_SRC

** Strip suffixes from a list of filenames
:PROPERTIES:
:SOLUTIONS: [[id:674c0773-c062-4117-8a21-3b7a5bd2b09b][Example illustrating a few ways to strip suffixes from a list]]
:END:

Given a list of filenames strip the suffix and get the prefix into a new list.

E.g. given a list containing =1.txt=, =2.txt=, =3.txt= produce a list containing =1=, =2=, =3=.

** Manage files described by a data container
:PROPERTIES:
:SOLUTIONS: [[id:70aaaa9c-6770-4d20-86ec-30e1c9bf2c28][Example illustrating managing files described by a data container]]
:END:

#+begin_src json
 [
    {
      "name": "/tmp/create-multiple-files-with.content-1.txt",
      "content": "Hello CFEngine!"
    },
    {
      "name": "/tmp/create-multiple-files-with.content-2.txt",
      "content": "Bye CFEngine!"
    }
  ]
#+end_src

* Enterprise Reporting
** APIs
- Host
- Inventory
- File Changes
- Health
- Query
- Settings
  - Federated Reporting
  - Import & Export
  - LDAP
  - Users
  - Version Control
  - RBAC

#+CAPTION: Speaker Notes
#+begin_notes
- Host API : query for basic host info based on classes reported or not
- Inventory: Query for /inventory/ attribute values, filter on classes reported
- File Changes:  Query high level statistics about changes observed
- Health: Information about CFEngine's operation
- Query: SQL Queries
- Settings: Configure the Enterprise Hub
#+end_notes

** Host API

#+NAME: hostlist
#+BEGIN_SRC sh :results output :exports both :wrap "src json" :cached t
  curl -s -k --user $AUTHUSER:$PASSWORD \
    https://$HUB/api/host\?count\=2\&context-include\=cfengine_3_15_0

#+END_SRC

#+REVEAL: split

#+RESULTS: hostlist
#+begin_src json
{
  "data": [
    {
      "firstseen": "1578745699",
      "hostname": "host001.example.com",
      "id": "SHA=e01f65d069b9035c280ea0bdba6cf6e47863ac074a170addbad26e98cc89925c",
      "ip": "192.0.2.1",
      "lastreport": "1582643957"
    },
    {
      "firstseen": "1578745692",
      "hostname": "hub.example.com",
      "id": "SHA=70138d580b9fd292ff856746df2fe7f9ded29db9ffca0c4d83acbbb97cde4d42",
      "ip": "104.236.18.209",
      "lastreport": "1582643974"
    }
  ],
  "meta": {
    "count": 2,
    "page": 1,
    "timestamp": 1582644064,
    "total": 7
  }
}
#+end_src

** Inventory API
*** Inventory API attributes

#+BEGIN_SRC sh :results output :exports code
  curl -q -k --user $AUTHUSER:$PASSWORD \
    -X GET \
    https://$HUB/api/inventory/attributes-dictionary | \
    jq 'map(.attribute_name)[]'
#+END_SRC

#+BEGIN_SRC sh :results output :exports code
  curl -q -k --user $AUTHUSER:$PASSWORD \
    -X GET \
    https://$HUB/api/inventory/attributes-dictionary | \
    jq 'map(.attribute_name)[]'
#+END_SRC

#+REVEAL: split

#+RESULTS:
#+begin_example
"Policy Release Id"
"EC2 Image ID"
"CPU sockets"
"Uptime minutes"
"System product name"
"System manufacturer"
"SSH Host Key /etc/ssh/ssh_host_rsa_key.pub SHA256 Fingerprint"
"CISOfy Lynis finding count"
"Number linux kernel modules loaded"
"CISOfy Lynis datetime scan completed"
"Unexpected Local Users"
"SSH Host Key /etc/ssh/ssh_host_ecdsa_key.pub SHA256 Fingerprint"
"Last logged in ubuntu"
"Windows roles"
"IPv4 addresses"
"SSH Host Key Type /etc/ssh/ssh_host_ecdsa_key.pub"
"CMDB Business Unit"
"DigitalOcean Droplet ID"
"SSH Host Key Type /etc/ssh/ssh_host_dsa_key.pub"
"BIOS version"
"Memory size (MB)"
"MAC addresses"
"Last logged in cfapache"
"CISOfy Lynis Suggestion SSH-7408 details"
"OS kernel"
"Last logged in root"
"NAT Public IPv4"
"EC2 Instance ID"
"CFEngine ID"
"CISOfy Lynis Version"
"CISOcy Lynis Remediaitons implicitly enabled"
"Volume / Percent Disk Used"
"SSH Host Key Type /etc/ssh/ssh_host_ed25519_key.pub"
"EventLog MaxSize"
"Architecture"
"OS"
"CISOfy Lynis Suggestions"
"Virtual host"
"SSH Host Key Types"
"SSH Host Keys"
"ARRAY CISOcy Lynis Remediaitons implicitly enabled"
"Number linux kernel moduels unused"
"SSH Host Key /etc/ssh/ssh_host_dsa_key.pub SHA256 Fingerprint"
"EventLog Retention"
"CFEngine roles"
"Local Users"
"CMDB Owner"
"CISOfy Lynis Control ID findings"
"SSH Host Key /etc/ssh/ssh_host_ed25519_key.pub SHA256 Fingerprint"
"legal notice caption"
"DigitalOcean Region"
"legal notice"
"Local User"
"Unused linux kernel modules"
"Data Container"
"Last logged in centos"
"CISOfy Lynis Hardening Index"
"CFEngine version"
"CISOfy Lynis Remediations explicitly disabled"
"Host name"
"SSH Host Key Fingerprint (ssh-keygen)"
"System UUID"
"System version"
"Registered Orginization"
"BIOS vendor"
"OS type"
"Disk free (%)"
"CISOfy Lynis Suggestion KRNL-6000 details"
"Ports listening"
"Users who have logged in"
"Last logged in nickanderson"
"EC2 Region"
"Interfaces"
"CISOfy Lynis Warnings"
"EC2 Availability Zone"
"Physical memory (MB)"
"Last logged in cfpostgres"
"Show Last Logged in Username"
"CPU physical cores"
"Volume /tmp Percent Disk Used"
"CPU logical cores"
"Volume /var Percent Disk Used"
"System serial number"
"Systemd services running"
"EC2 Instance Type"
"TestArray"
"Unexpected local user count"
"Used linux kernel modules"
"Registered Owner"
"SSH Host Key Type /etc/ssh/ssh_host_rsa_key.pub"
"CPU model"
"Cloud Provider"
#+end_example

*** Inventory API Query
#+NAME: inventory
#+BEGIN_SRC sh :results output :exports both
  curl -q -k --user $AUTHUSER:$PASSWORD \
    -X POST \
    https://$HUB/api/inventory \
    -H 'content-type: application/json' \
    -d '{
          "sort":"Host name",
          "select":[
             "Host name",
             "OS",
             "Policy Release Id",
             "IPv4 addresses",
             "CFEngine version",
             "Ports listening"
          ],
          "hostContextInclude":[
             "cfengine"
          ],
          "hostContextExclude":[
             "coreos"
          ]
        }
  '
#+END_SRC

** Health API

#+CAPTION: Get an overview of the health status
#+BEGIN_SRC sh :results output :exports both :wrap "src json"
  curl -s -k --user $AUTHUSER:$PASSWORD \
    https://$HUB/api/health-diagnostic/status/ | jq
#+END_SRC

#+RESULTS:
#+begin_src json
{
  "hostsNeverCollected": 2,
  "notRecentlyCollected": 3,
  "hostsUsingSameIdentity": 0,
  "agentNotRunRecently": 0,
  "lastAgentRunUnsuccessful": 0,
  "totalFailed": 5,
  "total": "8"
}
#+end_src

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
- Get an overview of the health status
- Query for details of each health status
#+END_NOTES

#+BEGIN_SRC sh :results output :exports both :wrap "src json"
  curl -s -k --user $AUTHUSER:$PASSWORD \
    https://$HUB/api/health-diagnostic/report_ids | jq
#+END_SRC

#+RESULTS:
#+begin_src json
#+end_src

#+CAPTION: Get an overview of the health status
#+BEGIN_SRC sh :results output :exports code
  curl -s -k --user $AUTHUSER:$PASSWORD \
    -X POST \
    https://$HUB/api/health-diagnostic/report/hostsNeverCollected \
    -H 'Content-Type: application/json' \
    -d '{"limit": 50}' | jq
#+END_SRC

#+RESULTS:
#+begin_example
{
  "data": [
    {
      "header": [
        {
          "columnName": "key",
          "columnType": "STRING"
        },
        {
          "columnName": "hostkey",
          "columnType": "STRING"
        },
        {
          "columnName": "IP address",
          "columnType": "STRING"
        },
        {
          "columnName": "Last report collected",
          "columnType": "STRING"
        },
        {
          "columnName": "First report collected",
          "columnType": "STRING"
        }
      ],
      "query": "SELECT h.Hostkey as key,h.Hostkey as hostkey, ipaddress as \"IP address\", lastreporttimestamp as \"Last report collected\", firstreporttimestamp as \"First report collected\"\n                            FROM hosts_not_reported h WHERE HostKey IN (SELECT hostkey FROM hosts_not_reported WHERE hostkey NOT IN (SELECT hostkey FROM health_diagnostics_dismissed WHERE username = 'a10042' AND report_type = 'hostsNeverCollected' ))",
      "queryTimeMs": 22,
      "rowCount": 2,
      "rows": [
        [
          "SHA=5a9cd97cb5941f63caae95a377dc2e3a50e4ff2953fe921d8a143573a8fe0a9c",
          "SHA=5a9cd97cb5941f63caae95a377dc2e3a50e4ff2953fe921d8a143573a8fe0a9c",
          "24.143.37.227",
          "2020-08-27 17:00:57-05",
          "2020-07-16 15:23:55.932442-05"
        ],
        [
          "SHA=0461796ddcd31f13d4701141eb7290e7d58f8149f14a4f2ac8c8776a9d3a854e",
          "SHA=0461796ddcd31f13d4701141eb7290e7d58f8149f14a4f2ac8c8776a9d3a854e",
          "84.212.143.13",
          "2020-08-12 11:54:16-05",
          "2020-07-14 05:12:25.525343-05"
        ]
      ]
    }
  ],
  "meta": {
    "count": 1,
    "page": 1,
    "timestamp": 1600184236,
    "total": 1
  }
}
#+end_example

** Query API

#+CAPTION: Speaker Notes
#+BEGIN_NOTES
- Make complex SQL queries
- Make Asynchronous SQL Queries (for long running queries)
#+END_NOTES

#+NAME: query-api
#+BEGIN_SRC sh :results output :exports both :wrap "src json"
  curl -q -k --user $AUTHUSER:$PASSWORD \
    -X POST \
    https://$HUB/api/query \
    -H 'content-type: application/json' \
    -d '{
          "query": "select hostname, ipaddress from hosts",
          "limit": 2,
          "hostContextExclude": ["policy_server"]
       }'
#+END_SRC

#+REVEAL: split

#+RESULTS: query-api
#+begin_src json
{
  "data": [
    {
      "header": [
        {
          "columnName": "hostname",
          "columnType": "STRING"
        },
        {
          "columnName": "ipaddress",
          "columnType": "STRING"
        }
      ],
      "query": "select hostname, ipaddress from hosts",
      "queryTimeMs": 21,
      "rowCount": 6,
      "rows": [
        [
          "lex-win7-to-10",
          "84.212.143.13"
        ],
        [
          "desktop-aj2m57e",
          "24.143.37.227"
        ]
      ]
    }
  ],
  "meta": {
    "count": 1,
    "page": 1,
    "timestamp": 1597765127,
    "total": 1
  }
}
#+end_src

#+REVEAL: split

#+NAME: async-query
#+CAPTION: Asynchronous query
#+BEGIN_SRC sh :results output :exports both :wrap "src json"
  curl -q -k --user $AUTHUSER:$PASSWORD \
    -X POST \
    https://$HUB/api/query/async \
    -H 'content-type: application/json' \
    -d '{
          "query": "select hostname, ipaddress from hosts",
          "outputType": "csv",
          "limit": 2,
          "hostContextExclude": ["policy_server"]
       }'
#+END_SRC

#+REVEAL: split

#+RESULTS: async-query
#+begin_src json
{
  "data": [
    {
      "id": "0eb39e8f20ed978a8f4b3167730b76fd",
      "query": "select hostname, ipaddress from hosts"
    }
  ],
  "meta": {
    "count": 1,
    "page": 1,
    "timestamp": 1597765332,
    "total": 1
  }
}
#+end_src

#+REVEAL: split

#+NAME: check-async-query
#+BEGIN_SRC sh :results output :exports both :wrap "src json"
  curl -q -k --user $AUTHUSER:$PASSWORD \
    -X GET \
    https://$HUB/api/query/async/0eb39e8f20ed978a8f4b3167730b76fd \
    -H 'content-type: application/json'
#+END_SRC

#+REVEAL: split

#+RESULTS: check-async-query
#+begin_src json
{
  "data": [
    {
      "href": "https://demohub.a10042.cfengine.com/tmp/0eb39e8f20ed978a8f4b3167730b76fd.csv",
      "id": "0eb39e8f20ed978a8f4b3167730b76fd",
      "percentageComplete": 100
    }
  ],
  "meta": {
    "count": 1,
    "page": 1,
    "timestamp": 1597765595,
    "total": 1
  }
}
#+end_src

*** Base64 encoded query links
#+CAPTION: Speaker Notes
#+BEGIN_NOTES
- An alternative to "Saved Reports"
#+END_NOTES

#+BEGIN_SRC sh
  HUB_URL="https://hub"
  API="/index.php/advancedreports/#/report/run?sql="
  SQL_QUERY="SELECT Hosts.HostName AS 'Host Name' FROM Hosts"
  REPORT_TITLE="Example Report"
  LINK="${HUB_URL}${API}$(echo ${SQL_QUERY} | \
         base64)&title=$(/usr/bin/urlencode ${REPORT_TITLE})"
  echo "${LINK}"
#+END_SRC

** Actions

Actions API enables you to perform specific actions such a requesting report collection and triggering un-scheduled agent runs.

Note: Triggered actions (agent run, report collection) will not work for hosts that the hub cannot initiate connections to, e.g. hosts behind NAT.

:DRAWER:
#+name: hub-hostkey
#+begin_src sh :results output :exports none :dir /ssh:hub|sudo:hub: :wrap "src json"
  exec 2>&1
  HUB_HOSTNAME=hub.example.com
  CANONIFIED_HUB_HOSTNAME=$(echo $HUB_HOSTNAME | tr '.-' '_')
  curl --silent --insecure --user admin:admin https://hub.example.com/api/host?context-include=$CANONIFIED_HUB_HOSTNAME
  :
#+end_src

#+RESULTS: hub-hostkey
#+begin_src json
{
  "data": [
    {
      "firstseen": "1668614330",
      "hostname": "hub.example.com",
      "id": "SHA=55425b6c6c5fcd1ea7f00cf45736a3acd87a3503dc61abaf268ca59f47fe4a05",
      "ip": "192.168.56.2",
      "lastreport": "1668616552"
    }
  ],
  "meta": {
    "count": 1,
    "page": 1,
    "timestamp": 1668616573,
    "total": 1
  }
}
#+end_src
:END:

*** Trigger report collection

#+caption: API call to trigger report collection
#+begin_src sh :results output :exports both :dir /ssh:hub|sudo:hub:
  exec 2>&1
  /var/cfengine/bin/curl \
      --insecure \
      --user admin:admin \
      --write-out "HTTP %{response_code}" \
      --request POST \
      -H 'content-tyupe: application/json' \
      -d '{"hostkey": "SHA=55425b6c6c5fcd1ea7f00cf45736a3acd87a3503dc61abaf268ca59f47fe4a05" }' \
      https://hub.example.com/api/actions/report_collection
  :
#+end_src

#+RESULTS:
: Array
: HTTP 202

*** Trigger agent run

#+caption: API call to trigger agent run
#+begin_src sh :results output :exports both :dir /ssh:hub|sudo:hub:
  exec 2>&1
  /var/cfengine/bin/curl \
      --insecure \
      --user admin:admin \
      --write-out "HTTP %{response_code}" \
      --request POST \
      -H 'content-tyupe: application/json' \
      -d '{"hostkey": "SHA=55425b6c6c5fcd1ea7f00cf45736a3acd87a3503dc61abaf268ca59f47fe4a05" }' \
      https://hub.example.com/api/actions/agent_run
  :
#+end_src

#+RESULTS:
: {
: "output" : "",
: "exit_code": 0
: }
:
: HTTP 202


* What's New
** Coming up in 3.21...
** In 3.20
- Build in Mission Portal
** In 3.19
- Importable Compliance Reports in Mission Portal
** In 3.18
- Host specific data (CMDB) in Mission Portal
- More powerful Augments syntax
- Custom promise types
- Compliance Reports in Mission Portal
- New functions:
  - ~findfiles_up()~/~search_up()~
  - ~int()~
  - ~string()~
  - ~type()~

** In 3.17
- New functions:
  - =execresult_as_data()=
- New function options:
  - =execresult()= can capture /stdout/, /stderr/, or /both/
** In 3.16
*** Components
:PROPERTIES:
:ID:       c0204aa1-6b70-48b1-aa87-8cc17bff2054
:END:

#+begin_src sh :results output :exports results
  cf-secret --help
#+end_src

#+RESULTS:
#+begin_example
Usage: cf-secret COMMAND [OPTIONS] [FILE]

Commands:
  encrypt      - Encrypt data for one or more hosts/keys.
                 Usage: cf-secret encrypt -k/-H KEY/HOST -o OUTPUT INPUT
  decrypt      - Decrypt data.
                 Usage: cf-secret decrypt [-k/-H KEY/HOST] -o OUTPUT INPUT
  print-headers - Print headers from an encrypted file.
                 Usage: cf-secret print-headers ENCRYPTED_FILE

Options:
  --help        , -h       - Print the help message
  --manpage     , -M       - Print the man page
  --debug       , -d       - Enable debugging output
  --verbose     , -v       - Enable verbose output
  --log-level   , -g value - Specify how detailed logs should be. Possible values: 'error', 'warning', 'notice', 'info', 'verbose', 'debug'
  --inform      , -I       - Enable basic information output
  --key         , -k value - Comma-separated list of key files to use (one of -k/-H options is required for encryption)
  --host        , -H value - Comma-separated list of hosts to encrypt/decrypt for (defaults to 'localhost' for decryption)
  --output      , -o value - Output file (required)

Website: http://www.cfengine.com
This software is Copyright (C) 2008,2010-present Northern.tech AS.
#+end_example

#+REVEAL: split

#+CAPTION: Encrypt data with cf-secret from STDIN
#+begin_src sh :results output :exports both
  cf-secret encrypt \
    --key ~/.cfagent/ppkeys/localhost.pub \
    --output /tmp/secrets.json.cfsecret \
    <\(echo '{ "username": "secret_user", "password": "secret_token" }'\)
  cf-secret print-headers /tmp/secrets.json.cfsecret
#+end_src

#+RESULTS:
: Version: 1.0
: Encrypted-for: SHA=43c979e264924d0b4a2d3b568d71ab8c768ef63487670f2c51cd85e8cec63834

#+REVEAL: split

#+CAPTION: Using cf-secret binary from policy
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  bundle agent example_load_encrypted_data
  {
    vars:
        "decrypt_cmd"
          string => concat( "$(sys.bindir)/cf-secret decrypt ",
                            "--key $(sys.workdir)/ppkeys/localhost.priv ",
                            "--output - ",
                            "/tmp/secrets.json.cfsecret" );

        "d" data => parsejson( execresult( $(decrypt_cmd), noshell) );

    reports:
        "username: $(d[username])";
        "password: $(d[password])";
  }
  bundle agent __main__
  {
    methods:
        "example_load_encrypted_data";
  }
#+END_SRC

#+RESULTS:
: R: username: secret_user
: R: password: secret_token

*** Promise attributes

#+CAPTION: Example illustrating files content attribute
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
bundle agent example_file_content
# @brief Example showing files content
{
  files:
      "/tmp/hello_string"
        create => "true",
        content => "Hello from string!";

  reports:
      "/tmp/hello_string"
        printfile => cat( $(this.promiser) );
}

bundle agent __main__
{
  methods: "example_file_content";
}
#+END_SRC

#+RESULTS:
#+begin_example
    info: Created file '/tmp/hello_string', mode 0600
    info: Updated content of '/tmp/hello_string' with content 'Hello from string!'
    info: files promise '/tmp/hello_string' repaired
R: /tmp/hello_string
R: Hello from string!
#+end_example

*** Functions

Complementary to new macros:
- =cf_version_after()=
- =cf_version_at()=
- =cf_version_before()=
- =cf_version_between()=
- =cf_version_maximum()=
- =cf_version_maximum()=
- =cf_version_minimum()=

#+REVEAL: split

#+CAPTION: Example showing cf_after_version() function
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  bundle agent example_cf_after_version_function
  {
    reports:
        "$(sys.cf_version) is newer than 3.7.0"
          if => cf_version_after("3.7.0");

        "$(sys.cf_version) is NOT newer than 3.7.0"
          unless => cf_version_after("3.7.0");
  }
  bundle agent __main__
  {
    methods: "example_cf_after_version_function";
  }
#+END_SRC

#+RESULTS:
: R: 3.17.0a.82c3b3656 is newer than 3.7.0

#+REVEAL: split

Manipulating strings:
- =string_trim()=

#+REVEAL: split

#+CAPTION: Example showing string_trim()
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  bundle agent example_string_trim
  {
    vars:
      "my_string" string => " Trim me please ";
    reports:
        "my_string: '$(with)'"
           with => $(my_string);

        "my_string trimmed: '$(with)'"
           with => string_trim( $(my_string) );

  }
  bundle agent __main__
  {
    methods: "example_string_trim";
  }
#+END_SRC

#+RESULTS:
: R: my_string: ' Trim me please '
: R: my_string trimmed: 'Trim me please'

#+REVEAL: split

Data validation:
- =validdata()=
- =validjson()=

#+REVEAL: split

#+CAPTION: Example showing string_trim()
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  bundle agent example_validjson
  {
    vars:
      "valid_json" string => '{ "valid": "json" }';
      "invalid_json" string => '{ "invalid": "json"';
    reports:
        "valid_json is valid json"
           if => validjson( $(valid_json) );

        "valid_json is NOT valid json"
           unless => validjson( $(invalid_json) );

  }
  bundle agent __main__
  {
    methods: "example_validjson";
  }
#+END_SRC

#+RESULTS:
: R: valid_json is valid json
: R: valid_json is NOT valid json

*** Macros
- =maximum_version=
- =else=
- =at_version=
- =between_versions=
- =before_version=
- =after_version=

#+REVEAL: split

#+CAPTION: Example showing after_version and else macros
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  bundle agent example_macros_new_in_cfengine_3_16
  {
  @if after_version(3.7.0)
    reports:
        "$(sys.cf_version) is newer than 3.7.0";
  @else
        "$(sys.cf_version) is NOT newer than 3.7.0";
  @endif
  }
  bundle agent __main__
  {
    methods: "example_macros_new_in_cfengine_3_16";
  }
#+END_SRC

#+RESULTS:
: R: 3.17.0a.82c3b3656 is newer than 3.7.0

*** Enterprise Edition
- Compliance Reports
** In 3.15
*** Functions
:PROPERTIES:
:ID:       d5ef3c04-bd2a-4aa9-9a06-9b889cb4d485
:END:
- =basename()=
- =read_module_protocol()=

#+REVEAL: split

#+CAPTION: Example illustrating basename()
#+BEGIN_SRC cfengine3 :include-stdlib nil :log-level info :exports both :bundlesequence example_basename :command-in-result t
bundle agent example_basename
{
  vars:
      "basename" -> { "CFE-3196" }
        string => basename( $(this.promise_filename) );

      "basename_wo_extension" -> { "CFE-3196" }
        string => basename( $(this.promise_filename), ".cf" );
  reports:

      "basename = '$(basename)'";
      "basename without '.cf' extension = '$(basename_wo_extension)'";
}
#+END_SRC

#+RESULTS:
: # cf-agent --bundlesequence example_basename --no-lock --log-level info --file /home/nickanderson/src/presentations/state-of-the-cfengine/cfengine3-NiK6sU
:     info: Using command line specified bundlesequence
: R: basename = 'cfengine3-NiK6sU'
: R: basename without '.cf' extension = 'cfengine3-NiK6sU'

#+REVEAL: split

#+CAPTION: examples/read_module_protocol.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/read_module_protocol.cf
  bundle agent cache_maintenance
  # Creates a module protocol cache, refreshes it if minute is 30-35
  {
    vars:
        "file"
          string => "$(this.promise_dirname)/cached_module";

    classes:
        "cache_refresh"
          if => not(fileexists("$(file)"));
      Min30_35::
        "cache_refresh";

    files:
      cache_refresh::
        "$(file)"
          create => "true",
          template_method => "inline_mustache",
          edit_template_string => "=my_variable=$(sys.date)";
  }
#+END_SRC

#+REVEAL: split

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/read_module_protocol.cf
  bundle agent demo
  # Demonstrates read_module_protocol function, prints a variable from it
  {
    classes:
        "cache_was_read"
          if => read_module_protocol("$(cache_maintenance.file)");

    reports:
      cache_was_read::
        "Module cache was read!";
        "cached_module.my_variable = $(cached_module.my_variable)";
  }
  bundle agent __main__
  {
    methods:
        "cache_maintenance"
          handle => "cache_maintenance_done";
        "demo"
          depends_on => { "cache_maintenance_done" };
  }
#+END_SRC

#+REVEAL: split

#+RESULTS:
: R: Module cache was read!
: R: cached_module.my_variable = Mon Feb  3 05:32:05 2020

** In 3.14
*** Functions
:PROPERTIES:
:ID:       e3725a7c-faf7-45ad-bbee-eff083ab61c4
:END:
- =classfiltercsv()= (back-ported to 3.12.1)

#+REVEAL: split

#+CAPTION: examples/classfiltercsv.csv
#+BEGIN_SRC csv :tangle ./examples/classfiltercsv.csv
ClassExpr,Sort,Token,Value
# This is a comment
any,A,net.ipv4.ip_forward,ANYVALUE
example_class1,z,net.ipv4.ip_forward,ANYVALUE
example_class2,a,net.ipv4.ip_forward,127.0.0.3
not_defined,Z,net.ipv4.ip_forward,NOT_DEFINED
example_class3.example_class2.example_class1,1,net.ipv4.ip_forward,127.0.0.4
also_undefined,0,net.ipv4.ip_forward,NOT_DEFINED
#+END_SRC

#+REVEAL: split

*NOTE:* CRLF (Windows/DOS)  line endings required per RFC

#+BEGIN_SRC  sh :results output :exports code
dos2unix ./examples/classfiltercsv.csv
#+END_SRC

#+REVEAL: split

#+NAME: example_classfiltercsv
#+Caption: examples/classfiltercsv.cf
#+BEGIN_SRC cfengine3 :include-stdlib nil :log-level error :exports both :tangle ./examples/classfiltercsv.cf
  bundle agent example_classfiltercsv
  {
    classes:
        "example_class1";
        "example_class2";
        "example_class3";

    vars:
        "data_file"
          string => "$(this.promise_dirname)/examples/classfiltercsv.csv";
        "d" data => classfiltercsv($(data_file), "true", 0, 1);

    reports:
        "Filtered data: $(with)" with => string_mustache("{{%-top-}}", d);
  }
  bundle agent __main__
  {
    methods: "example_classfiltercsv";
  }
#+END_SRC

#+REVEAL: split

#+RESULTS: example_classfiltercsv
#+begin_example
R: Filtered data: [
  {
    "Sort": "1",
    "Token": "net.ipv4.ip_forward",
    "Value": "127.0.0.4"
  },
  {
    "Sort": "A",
    "Token": "net.ipv4.ip_forward",
    "Value": "ANYVALUE"
  },
  {
    "Sort": "a",
    "Token": "net.ipv4.ip_forward",
    "Value": "127.0.0.3"
  },
  {
    "Sort": "z",
    "Token": "net.ipv4.ip_forward",
    "Value": "ANYVALUE"
  }
]
#+end_example

** In 3.13
*** Functions
:PROPERTIES:
:ID:       a6205dea-4a47-4a0e-a5fb-a7b00b4004bf
:END:
- =string_replace()=

#+REVEAL: split

#+CAPTION: examples/string_replace.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/string_replace.cf
  bundle agent example_string_replace
  {
    vars:
        "my_string"
          string => "Bash is the best config management tool";
    reports:
        "$(with)" with => string_replace( $(my_string),
                                          "Bash", "CFEngine" );
  }
  bundle agent __main__
  {
    methods: "example_string_replace";
  }
#+END_SRC

#+RESULTS:
: R: CFEngine is the best config management tool

** In 3.12
*** Functions
:PROPERTIES:
:ID:       bc9df932-7faf-490c-83bb-07d2530b2857
:END:
- =hash_to_int()=

#+REVEAL: split

#+Name: =examples/hash_to_int.cf=
#+CAPTION: =examples/hash_to_int.cf=
#+BEGIN_SRC cfengine3 :include-stdlib nil :log-level info :exports both :tangle ./examples/hash_to_int.cf
  bundle agent example_hash_to_int
  {
    vars:
        "hello"  int => hash_to_int(0, 1000, "hello");
        "world"  int => hash_to_int(0, 1000, "world");

        # Hash can vary on hostkey or policy hub:
        "hour"   int => hash_to_int(0, 24, "$(sys.key_digest)");
        "minute" int => hash_to_int(0, 60, "$(sys.policy_hub)");

    reports:
        "'hello' hashed to: $(hello)";
        "'world' hashed to: $(world)";

  }
  bundle agent __main__{methods: "example_hash_to_int";}
#+END_SRC

#+RESULTS: =examples/hash_to_int.cf=
: R: 'hello' hashed to: 172
: R: 'world' hashed to: 760
*** Library __main__ bundles
:PROPERTIES:
:ID:       2560344f-c33f-4c87-923c-574f82d69ab3
:END:

- Default bundle per policy file
- Useful for testing

#+REVEAL: split

#+NAME: =examples/library__main__/example_library__main__1.cf=
#+CAPTION: =examples/library__main__/example_library__main__1.cf=
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/library__main__/example_library__main__1.cf :prologue ""
  bundle agent example_library__main__1
  {
    reports: "Hello from $(this.bundle)";
  }
  bundle agent __main__
  {
    methods:
        "example_library__main__1";
  }
#+END_SRC

#+REVEAL: split

What output do you get when you run the policy file ?

#+Name: Executing =examples/library__main__/example_library__main__1.cf=
#+CAPTION: Executing =examples/library__main__/example_library__main__1.cf=
#+begin_src sh :results output :exports both :dir ./examples/library__main__/
  cf-agent -KIf ./example_library__main__1.cf
#+end_src

#+REVEAL: split

#+RESULTS: Executing =examples/library__main__/example_library__main__1.cf=
: R: Hello from example_library__main__1

#+REVEAL: split

#+NAME: =examples/library__main__/example_library__main__2.cf=
#+CAPTION: =examples/library__main__/example_library__main__2.cf=
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/library__main__/example_library__main__2.cf :prologue ""
  bundle agent example_library__main__2
  {
    reports: "Hello from $(this.bundle)";
  }
  bundle agent __main__
  {
    methods:
        "example_library__main__2";
  }
#+END_SRC

#+Name: Executing =examples/library__main__/example_library__main__2.cf=
#+CAPTION: Executing =examples/library__main__/example_library__main__2.cf=
#+begin_src sh :results output :exports both :dir ./examples/library__main__/
  cf-agent -KIf ./example_library__main__2.cf
#+end_src

#+RESULTS: Executing =examples/library__main__/example_library__main__2.cf=
: R: Hello from example_library__main__2

#+REVEAL: split

#+NAME: =examples/library__main__/example_library__main__.cf=
#+CAPTION: =examples/library__main__/example_library__main__.cf=
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/library__main__/example_library__main__.cf :prologue ""
  body file control
  {
    inputs => {
                "example_library__main__1.cf",
                "example_library__main__2.cf",
              };
  }
  bundle agent example_library__main__
  {
    reports: "Hello from $(this.bundle)";
  }
  bundle agent __main__
  {
    vars: "b" slist => bundlesmatching( "example_.*" );
    methods:
        "example_library__main__";
        "example_library__main__1";
        "example_library__main__2";
    reports: "$(b)";
  }
#+END_SRC

#+REVEAL: split

What output do you get when you run the policy file ?

#+Name: Executing =examples/library__main__/example_library__main__.cf=
#+CAPTION: Executing =examples/library__main__/example_library__main__.cf=
#+begin_src sh :results output :exports both :dir ./examples/library__main__/
  cf-agent -KIf ./example_library__main__.cf
#+end_src

#+REVEAL: split

#+RESULTS: Executing =examples/library__main__/example_library__main__.cf=
#+begin_example
example_library__main__1.cf
example_library__main__2.cf
example_library__main__.cf
#!/var/cfengine/bin/cf-agent -f-
body file control
{
      inputs => { '$(sys.libdir)/stdlib.cf' };
}

bundle agent example_library__main__1
{
  reports: "Hello from $(this.bundle)";
}
bundle agent __main__
{
  methods:
      "example_library__main__1";
}
#!/var/cfengine/bin/cf-agent -f-
body file control
{
      inputs => { '$(sys.libdir)/stdlib.cf' };
}

bundle agent example_library__main__2
{
  reports: "Hello from $(this.bundle)";
}
bundle agent __main__
{
  methods:
      "example_library__main__2";
}
#!/var/cfengine/bin/cf-agent -f-
body file control
{
      inputs => { '$(sys.libdir)/stdlib.cf' };
}

body file control
{
  inputs => {
              "example_library__main__1.cf",
              "example_library__main__2.cf",
            };
}
bundle agent example_library__main__
{
  reports: "Hello from $(this.bundle)";
}
bundle agent __main__
{
  vars: "b" slist => bundlesmatching( "example_.*" );
  methods:
      "example_library__main__";
      "example_library__main__1";
      "example_library__main__2";
  reports: "$(b)";
}
R: Hello from example_library__main__
   error: A method attempted to use a bundle 'example_library__main__1' that was apparently not defined
   error: A method attempted to use a bundle 'example_library__main__2' that was apparently not defined
#+end_example



*** --log-level option
:PROPERTIES:
:ID:       cb03262c-fb55-4d2a-a3b7-c365ea2b0de0
:END:

#+NAME: =examples/example_log_level_inform.cf=
#+CAPTION: =examples/example_log_level_inform.cf=
#+BEGIN_SRC cfengine3 :include-stdlib t :exports both :command-in-result t :tangle ./examples/example_log_level_inform.cf
  bundle agent main
  {
    reports:
      inform_mode:: "Running with info level logging";
  }
#+END_SRC

#+NAME: Executing with --inform
#+CALL: =examples/example_log_level_inform.cf=() :extra-opts --inform

#+RESULTS: Executing with --inform
: # cf-agent --no-lock --inform --file ./examples/example_log_level_inform.cf
: R: Running with info level logging

#+NAME: Executing with --log-level inform
#+CALL: =examples/example_log_level_inform.cf=() :extra-opts --log-level inform

#+RESULTS: Executing with --log-level inform
: # cf-agent --no-lock --log-level inform --file ./examples/example_log_level_inform.cf
: R: Running with info level logging

*** Promise attributes
- =copy_from= body attribute =missing_ok= allows missing upstream files to be considered promise kept
- files promise =template_method= accepts /inline_mustache/
- files promise =edit_template_string=  defines inline mustache

#+CAPTION: Speaker notes
#+begin_notes
- missing_ok useful for things like downloading host specific data that may or may not exist
- inline_mustache easier usage for small templates
#+end_notes

#+REVEAL: split

#+NAME: =./examples/whats_new_3_12_missing_ok.cf=
#+CAPTION: =./examples/whats_new_3_12_missing_ok.cf=
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/whats_new_3_12_missing_ok.cf
  bundle agent example_missing_ok
  {
    vars:
      copy_from_missing_ok_reached::
        "_c"
          string => string_mustache( "{{%-top-}}",
                                     sort( classesmatching( "copy_from_.*" ), lex));
    files:
        "/tmp/copied_from_missing_ok"
          copy_from => missing_ok( "/var/cfengine/masterfiles/missing" ),
          classes => results("bundle", "copy_from_missing_ok");

    reports:
        "$(_c)" if => isvariable( _c );
  }
  body copy_from missing_ok( file_path )
  {
          source => "$(file_path)";
          missing_ok => "true";
  }
  bundle agent __main__{methods:"example_missing_ok";}
#+END_SRC

#+REVEAL: split

#+RESULTS: =./examples/whats_new_3_12_missing_ok.cf=
: R: [
:   "copy_from_missing_ok_kept",
:   "copy_from_missing_ok_reached"
: ]

#+REVEAL: split

#+NAME: =examples/whats_new_3_12_inline_mustache.cf=
#+Caption: =examples/whats_new_3_12_inline_mustache.cf=
#+BEGIN_SRC cfengine3 :tangle examples/whats_new_3_12_inline_mustache.cf :command-in-result t
  bundle agent example_inline_mustache
  {
    vars:
      "d" data => '{
    "Name": "Bruce Wayne",
    "Secret Identity": "Batman"
  }';

    files:
      "/tmp/$(this.bundle)"
          create => "true",
          template_method => "inline_mustache",
          template_data => @(d),
          edit_template_string => 'Did you know that {{{Name}}}
  ... is really {{{Secret Identity}}}!?';

    reports:
      "/tmp/$(this.bundle)" printfile => cat( $(this.promiser) );
  }
  bundle agent __main__{methods:"example_inline_mustache";}
#+END_SRC

#+REVEAL: split

#+RESULTS: =examples/whats_new_3_12_inline_mustache.cf=
: # cf-agent --no-lock --file examples/whats_new_3_12_inline_mustache.cf
: R: /tmp/example_inline_mustache
: R: Did you know that Bruce Wayne
: R: ... is really Batman!?

*** sys vars
- sys.policy_entry*
-
** In 3.11
*** Promise attributes
- =with=

*** Functions
:PROPERTIES:
:ID:       c8849cbd-7a39-441d-9c15-becd174ee248
:END:
- =data_sysctlvalues()=
- =readenvfile()=
- =sysctlvalue()=

#+REVEAL: split

#+CAPTION: examples/data_sysctlvalues.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level error :exports both :tangle ./examples/data_sysctlvalues.cf
  bundle agent example_data_sysctlvalues
  {
    vars:
        "_d" data => data_sysctlvalues();
    reports:
        "$(with)"
          with => string_mustache( "{{%-top-}}", _d );
  }
  bundle agent __main__
  {
        methods: "example_data_sysctlvalues";
  }
#+END_SRC

#+RESULTS:
#+begin_example
R: {
  "abi.vsyscall32": "1",
  "debug.exception-trace": "1",
  "debug.kprobes-optimization": "1",
  "dev.cdrom.autoclose": "1",
  "dev.cdrom.autoeject": "0",
  "dev.cdrom.check_media": "0",
  "dev.cdrom.debug": "0",
  "dev.cdrom.info": "CD-ROM information, Id: cdrom.c 3.20 2003/12/17\n\ndrive name:\t\ndrive speed:\t\ndrive # of slots:\nCan close tray:\t\nCan open tray:\t\nCan lock tray:\t\nCan change speed:\nCan select disk:\nCan read multisession:\nCan read MCN:\t\nReports media changed:\nCan play audio:\t\nCan write CD-R:\t\nCan write CD-RW:\nCan read DVD:\t\nCan write DVD-R:\nCan write DVD-RAM:\nCan read MRW:\t\nCan write MRW:\t\nCan write RAM:\t",
  "dev.cdrom.lock": "0",
  "dev.hpet.max-user-freq": "64",
  "dev.i915.oa_max_sample_rate": "100000",
  "dev.i915.perf_stream_paranoid": "1",
  "dev.mac_hid.mouse_button2_keycode": "97",
  "dev.mac_hid.mouse_button3_keycode": "100",
  "dev.mac_hid.mouse_button_emulation": "0",
  "dev.parport.default.spintime": "500",
  "dev.parport.default.timeslice": "200",
  "dev.raid.speed_limit_max": "200000",
  "dev.raid.speed_limit_min": "1000",
  "dev.scsi.logging_level": "0",
  "dev.tty.ldisc_autoload": "1",
  "fs.aio-max-nr": "65536",
  "fs.aio-nr": "3301",
  "fs.binfmt_misc.cli": "enabled\ninterpreter /usr/lib/binfmt-support/run-detectors\nflags: \noffset 0\nmagic 4d5a",
  "fs.binfmt_misc.jar": "enabled\ninterpreter /usr/bin/jexec\nflags: \noffset 0\nmagic 504b0304",
  "fs.binfmt_misc.python2.7": "enabled\ninterpreter /usr/bin/python2.7\nflags: \noffset 0\nmagic 03f30d0a",
  "fs.binfmt_misc.python3.8": "enabled\ninterpreter /usr/bin/python3.8\nflags: \noffset 0\nmagic 550d0d0a",
  "fs.binfmt_misc.sbcl": "enabled\ninterpreter /usr/lib/sbcl/sbcl-run\nflags: \noffset 0\nmagic 23204641534c0a",
  "fs.binfmt_misc.status": "enabled",
  "fs.dentry-state": "311030\t222679\t45\t0\t42660\t0",
  "fs.dir-notify-enable": "1",
  "fs.epoll.max_user_watches": "6698721",
  "fs.file-max": "9223372036854775807",
  "fs.file-nr": "46048\t0\t9223372036854775807",
  "fs.inode-nr": "507770\t238746",
  "fs.inode-state": "507770\t238746\t0\t0\t0\t0\t0",
  "fs.inotify.max_queued_events": "16384",
  "fs.inotify.max_user_instances": "128",
  "fs.inotify.max_user_watches": "98304",
  "fs.lease-break-time": "45",
  "fs.leases-enable": "1",
  "fs.mount-max": "100000",
  "fs.mqueue.msg_default": "10",
  "fs.mqueue.msg_max": "10",
  "fs.mqueue.msgsize_default": "8192",
  "fs.mqueue.msgsize_max": "8192",
  "fs.mqueue.queues_max": "256",
  "fs.nfs.idmap_cache_timeout": "600",
  "fs.nfs.nfs_callback_tcpport": "0",
  "fs.nfs.nfs_congestion_kb": "183104",
  "fs.nfs.nfs_mountpoint_timeout": "500",
  "fs.nfs.nlm_grace_period": "0",
  "fs.nfs.nlm_tcpport": "0",
  "fs.nfs.nlm_timeout": "10",
  "fs.nfs.nlm_udpport": "0",
  "fs.nfs.nsm_local_state": "3",
  "fs.nfs.nsm_use_hostnames": "0",
  "fs.nr_open": "1048576",
  "fs.overflowgid": "65534",
  "fs.overflowuid": "65534",
  "fs.pipe-max-size": "1048576",
  "fs.pipe-user-pages-hard": "0",
  "fs.pipe-user-pages-soft": "16384",
  "fs.quota.allocated_dquots": "0",
  "fs.quota.cache_hits": "0",
  "fs.quota.drops": "0",
  "fs.quota.free_dquots": "0",
  "fs.quota.lookups": "0",
  "fs.quota.reads": "0",
  "fs.quota.syncs": "26",
  "fs.quota.writes": "0",
  "fs.suid_dumpable": "2",
  "fs.verity.require_signatures": "0",
  "fscache.object_max_active": "8",
  "fscache.operation_max_active": "4",
  "kernel.acct": "4\t2\t30",
  "kernel.acpi_video_flags": "0",
  "kernel.auto_msgmni": "0",
  "kernel.bootloader_type": "6",
  "kernel.bootloader_version": "38",
  "kernel.bpf_stats_enabled": "0",
  "kernel.cap_last_cap": "37",
  "kernel.core_pattern": "|/usr/share/apport/apport %p %s %c %d %P %E",
  "kernel.core_pipe_limit": "0",
  "kernel.core_uses_pid": "0",
  "kernel.ctrl-alt-del": "0",
  "kernel.dmesg_restrict": "0",
  "kernel.domainname": "(none)",
  "kernel.firmware_config.force_sysfs_fallback": "0",
  "kernel.firmware_config.ignore_sysfs_fallback": "0",
  "kernel.ftrace_dump_on_oops": "0",
  "kernel.ftrace_enabled": "1",
  "kernel.hardlockup_all_cpu_backtrace": "0",
  "kernel.hardlockup_panic": "0",
  "kernel.hostname": "nickanderson-ThinkPad-W550s",
  "kernel.hotplug": "",
  "kernel.hung_task_check_count": "4194304",
  "kernel.hung_task_check_interval_secs": "0",
  "kernel.hung_task_panic": "0",
  "kernel.hung_task_timeout_secs": "120",
  "kernel.hung_task_warnings": "8",
  "kernel.io_delay_type": "1",
  "kernel.kexec_load_disabled": "0",
  "kernel.keys.gc_delay": "300",
  "kernel.keys.maxbytes": "20000",
  "kernel.keys.maxkeys": "200",
  "kernel.keys.persistent_keyring_expiry": "259200",
  "kernel.keys.root_maxbytes": "25000000",
  "kernel.keys.root_maxkeys": "1000000",
  "kernel.kptr_restrict": "1",
  "kernel.latencytop": "0",
  "kernel.max_lock_depth": "1024",
  "kernel.modprobe": "/sbin/modprobe",
  "kernel.modules_disabled": "0",
  "kernel.msg_next_id": "-1",
  "kernel.msgmax": "8192",
  "kernel.msgmnb": "16384",
  "kernel.msgmni": "32000",
  "kernel.ngroups_max": "65536",
  "kernel.nmi_watchdog": "0",
  "kernel.ns_last_pid": "1116084",
  "kernel.numa_balancing": "0",
  "kernel.numa_balancing_scan_delay_ms": "1000",
  "kernel.numa_balancing_scan_period_max_ms": "60000",
  "kernel.numa_balancing_scan_period_min_ms": "1000",
  "kernel.numa_balancing_scan_size_mb": "256",
  "kernel.osrelease": "5.4.0-42-lowlatency",
  "kernel.ostype": "Linux",
  "kernel.overflowgid": "65534",
  "kernel.overflowuid": "65534",
  "kernel.panic": "0",
  "kernel.panic_on_io_nmi": "0",
  "kernel.panic_on_oops": "0",
  "kernel.panic_on_rcu_stall": "0",
  "kernel.panic_on_unrecovered_nmi": "0",
  "kernel.panic_on_warn": "0",
  "kernel.panic_print": "0",
  "kernel.perf_cpu_time_max_percent": "25",
  "kernel.perf_event_max_contexts_per_stack": "8",
  "kernel.perf_event_max_sample_rate": "100000",
  "kernel.perf_event_max_stack": "127",
  "kernel.perf_event_mlock_kb": "516",
  "kernel.perf_event_paranoid": "3",
  "kernel.pid_max": "4194304",
  "kernel.poweroff_cmd": "/sbin/poweroff",
  "kernel.print-fatal-signals": "0",
  "kernel.printk": "4\t4\t1\t7",
  "kernel.printk_delay": "0",
  "kernel.printk_devkmsg": "on",
  "kernel.printk_ratelimit": "5",
  "kernel.printk_ratelimit_burst": "10",
  "kernel.pty.max": "4096",
  "kernel.pty.nr": "8",
  "kernel.pty.reserve": "1024",
  "kernel.random.boot_id": "fdf58181-01bd-4d59-a45d-c56bca7eceef",
  "kernel.random.entropy_avail": "3936",
  "kernel.random.poolsize": "4096",
  "kernel.random.read_wakeup_threshold": "64",
  "kernel.random.urandom_min_reseed_secs": "60",
  "kernel.random.uuid": "81b27359-dcd8-4d6b-9173-1ae8b4d71a94",
  "kernel.random.write_wakeup_threshold": "1024",
  "kernel.randomize_va_space": "2",
  "kernel.real-root-dev": "0",
  "kernel.sched_autogroup_enabled": "1",
  "kernel.sched_cfs_bandwidth_slice_us": "5000",
  "kernel.sched_child_runs_first": "0",
  "kernel.sched_domain.cpu0.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu0.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu0.domain0.flags": "4783",
  "kernel.sched_domain.cpu0.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu0.domain0.max_interval": "4",
  "kernel.sched_domain.cpu0.domain0.max_newidle_lb_cost": "20996",
  "kernel.sched_domain.cpu0.domain0.min_interval": "2",
  "kernel.sched_domain.cpu0.domain0.name": "SMT",
  "kernel.sched_domain.cpu0.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu0.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu0.domain1.flags": "4655",
  "kernel.sched_domain.cpu0.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu0.domain1.max_interval": "8",
  "kernel.sched_domain.cpu0.domain1.max_newidle_lb_cost": "18377",
  "kernel.sched_domain.cpu0.domain1.min_interval": "4",
  "kernel.sched_domain.cpu0.domain1.name": "MC",
  "kernel.sched_domain.cpu1.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu1.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu1.domain0.flags": "4783",
  "kernel.sched_domain.cpu1.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu1.domain0.max_interval": "4",
  "kernel.sched_domain.cpu1.domain0.max_newidle_lb_cost": "28467",
  "kernel.sched_domain.cpu1.domain0.min_interval": "2",
  "kernel.sched_domain.cpu1.domain0.name": "SMT",
  "kernel.sched_domain.cpu1.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu1.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu1.domain1.flags": "4655",
  "kernel.sched_domain.cpu1.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu1.domain1.max_interval": "8",
  "kernel.sched_domain.cpu1.domain1.max_newidle_lb_cost": "24312",
  "kernel.sched_domain.cpu1.domain1.min_interval": "4",
  "kernel.sched_domain.cpu1.domain1.name": "MC",
  "kernel.sched_domain.cpu2.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu2.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu2.domain0.flags": "4783",
  "kernel.sched_domain.cpu2.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu2.domain0.max_interval": "4",
  "kernel.sched_domain.cpu2.domain0.max_newidle_lb_cost": "25634",
  "kernel.sched_domain.cpu2.domain0.min_interval": "2",
  "kernel.sched_domain.cpu2.domain0.name": "SMT",
  "kernel.sched_domain.cpu2.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu2.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu2.domain1.flags": "4655",
  "kernel.sched_domain.cpu2.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu2.domain1.max_interval": "8",
  "kernel.sched_domain.cpu2.domain1.max_newidle_lb_cost": "20399",
  "kernel.sched_domain.cpu2.domain1.min_interval": "4",
  "kernel.sched_domain.cpu2.domain1.name": "MC",
  "kernel.sched_domain.cpu3.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu3.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu3.domain0.flags": "4783",
  "kernel.sched_domain.cpu3.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu3.domain0.max_interval": "4",
  "kernel.sched_domain.cpu3.domain0.max_newidle_lb_cost": "20811",
  "kernel.sched_domain.cpu3.domain0.min_interval": "2",
  "kernel.sched_domain.cpu3.domain0.name": "SMT",
  "kernel.sched_domain.cpu3.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu3.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu3.domain1.flags": "4655",
  "kernel.sched_domain.cpu3.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu3.domain1.max_interval": "8",
  "kernel.sched_domain.cpu3.domain1.max_newidle_lb_cost": "21132",
  "kernel.sched_domain.cpu3.domain1.min_interval": "4",
  "kernel.sched_domain.cpu3.domain1.name": "MC",
  "kernel.sched_latency_ns": "18000000",
  "kernel.sched_migration_cost_ns": "500000",
  "kernel.sched_min_granularity_ns": "2250000",
  "kernel.sched_nr_migrate": "32",
  "kernel.sched_rr_timeslice_ms": "100",
  "kernel.sched_rt_period_us": "1000000",
  "kernel.sched_rt_runtime_us": "950000",
  "kernel.sched_schedstats": "0",
  "kernel.sched_tunable_scaling": "1",
  "kernel.sched_util_clamp_max": "1024",
  "kernel.sched_util_clamp_min": "1024",
  "kernel.sched_wakeup_granularity_ns": "3000000",
  "kernel.seccomp.actions_avail": "kill_process kill_thread trap errno user_notif trace log allow",
  "kernel.seccomp.actions_logged": "kill_process kill_thread trap errno user_notif trace log",
  "kernel.sem": "32000\t1024000000\t500\t32000",
  "kernel.sem_next_id": "-1",
  "kernel.sg-big-buff": "32768",
  "kernel.shm_next_id": "-1",
  "kernel.shm_rmid_forced": "0",
  "kernel.shmall": "18446744073692774399",
  "kernel.shmmax": "18446744073692774399",
  "kernel.shmmni": "4096",
  "kernel.soft_watchdog": "1",
  "kernel.softlockup_all_cpu_backtrace": "0",
  "kernel.softlockup_panic": "0",
  "kernel.stack_tracer_enabled": "0",
  "kernel.sysctl_writes_strict": "1",
  "kernel.sysrq": "176",
  "kernel.tainted": "5632",
  "kernel.threads-max": "255535",
  "kernel.timer_migration": "1",
  "kernel.traceoff_on_warning": "0",
  "kernel.tracepoint_printk": "0",
  "kernel.unknown_nmi_panic": "0",
  "kernel.unprivileged_bpf_disabled": "0",
  "kernel.unprivileged_userns_clone": "1",
  "kernel.version": "#46-Ubuntu SMP PREEMPT Fri Jul 10 01:43:58 UTC 2020",
  "kernel.watchdog": "1",
  "kernel.watchdog_cpumask": "0-7",
  "kernel.watchdog_thresh": "10",
  "kernel.yama.ptrace_scope": "1",
  "net.bridge.bridge-nf-call-arptables": "1",
  "net.bridge.bridge-nf-call-ip6tables": "1",
  "net.bridge.bridge-nf-call-iptables": "1",
  "net.bridge.bridge-nf-filter-pppoe-tagged": "0",
  "net.bridge.bridge-nf-filter-vlan-tagged": "0",
  "net.bridge.bridge-nf-pass-vlan-input-dev": "0",
  "net.core.bpf_jit_enable": "1",
  "net.core.busy_poll": "0",
  "net.core.busy_read": "0",
  "net.core.default_qdisc": "fq_codel",
  "net.core.dev_weight": "64",
  "net.core.dev_weight_rx_bias": "1",
  "net.core.dev_weight_tx_bias": "1",
  "net.core.devconf_inherit_init_net": "0",
  "net.core.fb_tunnels_only_for_init_net": "0",
  "net.core.flow_limit_cpu_bitmap": "00",
  "net.core.flow_limit_table_len": "4096",
  "net.core.gro_normal_batch": "8",
  "net.core.high_order_alloc_disable": "0",
  "net.core.max_skb_frags": "17",
  "net.core.message_burst": "10",
  "net.core.message_cost": "5",
  "net.core.netdev_budget": "300",
  "net.core.netdev_budget_usecs": "2000",
  "net.core.netdev_max_backlog": "1000",
  "net.core.netdev_rss_key": "de:cd:e7:76:dc:fb:d8:5b:ab:b6:d5:97:d1:14:ce:ac:14:23:a7:c9:07:b3:4a:e9:82:f2:a3:7d:ae:37:21:8f:0b:90:09:47:6b:9d:d6:b2:7b:40:f1:62:fd:a4:b4:a2:cb:29:72:f0",
  "net.core.netdev_tstamp_prequeue": "1",
  "net.core.optmem_max": "20480",
  "net.core.rmem_default": "212992",
  "net.core.rmem_max": "212992",
  "net.core.rps_sock_flow_entries": "0",
  "net.core.somaxconn": "4096",
  "net.core.tstamp_allow_data": "1",
  "net.core.warnings": "0",
  "net.core.wmem_default": "212992",
  "net.core.wmem_max": "212992",
  "net.core.xfrm_acq_expires": "30",
  "net.core.xfrm_aevent_etime": "10",
  "net.core.xfrm_aevent_rseqth": "2",
  "net.core.xfrm_larval_drop": "1",
  "net.ipv4.cipso_cache_bucket_size": "10",
  "net.ipv4.cipso_cache_enable": "1",
  "net.ipv4.cipso_rbm_optfmt": "0",
  "net.ipv4.cipso_rbm_strictvalid": "1",
  "net.ipv4.conf.all.accept_local": "0",
  "net.ipv4.conf.all.accept_redirects": "0",
  "net.ipv4.conf.all.accept_source_route": "0",
  "net.ipv4.conf.all.arp_accept": "0",
  "net.ipv4.conf.all.arp_announce": "0",
  "net.ipv4.conf.all.arp_filter": "0",
  "net.ipv4.conf.all.arp_ignore": "0",
  "net.ipv4.conf.all.arp_notify": "0",
  "net.ipv4.conf.all.bc_forwarding": "0",
  "net.ipv4.conf.all.bootp_relay": "0",
  "net.ipv4.conf.all.disable_policy": "0",
  "net.ipv4.conf.all.disable_xfrm": "0",
  "net.ipv4.conf.all.drop_gratuitous_arp": "0",
  "net.ipv4.conf.all.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.all.force_igmp_version": "0",
  "net.ipv4.conf.all.forwarding": "1",
  "net.ipv4.conf.all.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.all.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.all.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.all.log_martians": "0",
  "net.ipv4.conf.all.mc_forwarding": "0",
  "net.ipv4.conf.all.medium_id": "0",
  "net.ipv4.conf.all.promote_secondaries": "0",
  "net.ipv4.conf.all.proxy_arp": "0",
  "net.ipv4.conf.all.proxy_arp_pvlan": "0",
  "net.ipv4.conf.all.route_localnet": "0",
  "net.ipv4.conf.all.rp_filter": "2",
  "net.ipv4.conf.all.secure_redirects": "1",
  "net.ipv4.conf.all.send_redirects": "1",
  "net.ipv4.conf.all.shared_media": "1",
  "net.ipv4.conf.all.src_valid_mark": "0",
  "net.ipv4.conf.all.tag": "0",
  "net.ipv4.conf.default.accept_local": "0",
  "net.ipv4.conf.default.accept_redirects": "1",
  "net.ipv4.conf.default.accept_source_route": "1",
  "net.ipv4.conf.default.arp_accept": "0",
  "net.ipv4.conf.default.arp_announce": "0",
  "net.ipv4.conf.default.arp_filter": "0",
  "net.ipv4.conf.default.arp_ignore": "0",
  "net.ipv4.conf.default.arp_notify": "0",
  "net.ipv4.conf.default.bc_forwarding": "0",
  "net.ipv4.conf.default.bootp_relay": "0",
  "net.ipv4.conf.default.disable_policy": "0",
  "net.ipv4.conf.default.disable_xfrm": "0",
  "net.ipv4.conf.default.drop_gratuitous_arp": "0",
  "net.ipv4.conf.default.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.default.force_igmp_version": "0",
  "net.ipv4.conf.default.forwarding": "1",
  "net.ipv4.conf.default.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.default.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.default.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.default.log_martians": "0",
  "net.ipv4.conf.default.mc_forwarding": "0",
  "net.ipv4.conf.default.medium_id": "0",
  "net.ipv4.conf.default.promote_secondaries": "1",
  "net.ipv4.conf.default.proxy_arp": "0",
  "net.ipv4.conf.default.proxy_arp_pvlan": "0",
  "net.ipv4.conf.default.route_localnet": "0",
  "net.ipv4.conf.default.rp_filter": "2",
  "net.ipv4.conf.default.secure_redirects": "1",
  "net.ipv4.conf.default.send_redirects": "1",
  "net.ipv4.conf.default.shared_media": "1",
  "net.ipv4.conf.default.src_valid_mark": "0",
  "net.ipv4.conf.default.tag": "0",
  "net.ipv4.conf.docker0.accept_local": "0",
  "net.ipv4.conf.docker0.accept_redirects": "1",
  "net.ipv4.conf.docker0.accept_source_route": "1",
  "net.ipv4.conf.docker0.arp_accept": "0",
  "net.ipv4.conf.docker0.arp_announce": "0",
  "net.ipv4.conf.docker0.arp_filter": "0",
  "net.ipv4.conf.docker0.arp_ignore": "0",
  "net.ipv4.conf.docker0.arp_notify": "0",
  "net.ipv4.conf.docker0.bc_forwarding": "0",
  "net.ipv4.conf.docker0.bootp_relay": "0",
  "net.ipv4.conf.docker0.disable_policy": "0",
  "net.ipv4.conf.docker0.disable_xfrm": "0",
  "net.ipv4.conf.docker0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.docker0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.docker0.force_igmp_version": "0",
  "net.ipv4.conf.docker0.forwarding": "1",
  "net.ipv4.conf.docker0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.docker0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.docker0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.docker0.log_martians": "0",
  "net.ipv4.conf.docker0.mc_forwarding": "0",
  "net.ipv4.conf.docker0.medium_id": "0",
  "net.ipv4.conf.docker0.promote_secondaries": "1",
  "net.ipv4.conf.docker0.proxy_arp": "0",
  "net.ipv4.conf.docker0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.docker0.route_localnet": "0",
  "net.ipv4.conf.docker0.rp_filter": "2",
  "net.ipv4.conf.docker0.secure_redirects": "1",
  "net.ipv4.conf.docker0.send_redirects": "1",
  "net.ipv4.conf.docker0.shared_media": "1",
  "net.ipv4.conf.docker0.src_valid_mark": "0",
  "net.ipv4.conf.docker0.tag": "0",
  "net.ipv4.conf.eth0.accept_local": "0",
  "net.ipv4.conf.eth0.accept_redirects": "1",
  "net.ipv4.conf.eth0.accept_source_route": "1",
  "net.ipv4.conf.eth0.arp_accept": "0",
  "net.ipv4.conf.eth0.arp_announce": "0",
  "net.ipv4.conf.eth0.arp_filter": "0",
  "net.ipv4.conf.eth0.arp_ignore": "0",
  "net.ipv4.conf.eth0.arp_notify": "0",
  "net.ipv4.conf.eth0.bc_forwarding": "0",
  "net.ipv4.conf.eth0.bootp_relay": "0",
  "net.ipv4.conf.eth0.disable_policy": "0",
  "net.ipv4.conf.eth0.disable_xfrm": "0",
  "net.ipv4.conf.eth0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.eth0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.eth0.force_igmp_version": "0",
  "net.ipv4.conf.eth0.forwarding": "1",
  "net.ipv4.conf.eth0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.eth0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.eth0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.eth0.log_martians": "0",
  "net.ipv4.conf.eth0.mc_forwarding": "0",
  "net.ipv4.conf.eth0.medium_id": "0",
  "net.ipv4.conf.eth0.promote_secondaries": "1",
  "net.ipv4.conf.eth0.proxy_arp": "0",
  "net.ipv4.conf.eth0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.eth0.route_localnet": "0",
  "net.ipv4.conf.eth0.rp_filter": "2",
  "net.ipv4.conf.eth0.secure_redirects": "1",
  "net.ipv4.conf.eth0.send_redirects": "1",
  "net.ipv4.conf.eth0.shared_media": "1",
  "net.ipv4.conf.eth0.src_valid_mark": "0",
  "net.ipv4.conf.eth0.tag": "0",
  "net.ipv4.conf.lo.accept_local": "0",
  "net.ipv4.conf.lo.accept_redirects": "1",
  "net.ipv4.conf.lo.accept_source_route": "1",
  "net.ipv4.conf.lo.arp_accept": "0",
  "net.ipv4.conf.lo.arp_announce": "0",
  "net.ipv4.conf.lo.arp_filter": "0",
  "net.ipv4.conf.lo.arp_ignore": "0",
  "net.ipv4.conf.lo.arp_notify": "0",
  "net.ipv4.conf.lo.bc_forwarding": "0",
  "net.ipv4.conf.lo.bootp_relay": "0",
  "net.ipv4.conf.lo.disable_policy": "1",
  "net.ipv4.conf.lo.disable_xfrm": "1",
  "net.ipv4.conf.lo.drop_gratuitous_arp": "0",
  "net.ipv4.conf.lo.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.lo.force_igmp_version": "0",
  "net.ipv4.conf.lo.forwarding": "1",
  "net.ipv4.conf.lo.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.lo.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.lo.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.lo.log_martians": "0",
  "net.ipv4.conf.lo.mc_forwarding": "0",
  "net.ipv4.conf.lo.medium_id": "0",
  "net.ipv4.conf.lo.promote_secondaries": "1",
  "net.ipv4.conf.lo.proxy_arp": "0",
  "net.ipv4.conf.lo.proxy_arp_pvlan": "0",
  "net.ipv4.conf.lo.route_localnet": "0",
  "net.ipv4.conf.lo.rp_filter": "0",
  "net.ipv4.conf.lo.secure_redirects": "1",
  "net.ipv4.conf.lo.send_redirects": "1",
  "net.ipv4.conf.lo.shared_media": "1",
  "net.ipv4.conf.lo.src_valid_mark": "0",
  "net.ipv4.conf.lo.tag": "0",
  "net.ipv4.conf.tun0.accept_local": "0",
  "net.ipv4.conf.tun0.accept_redirects": "1",
  "net.ipv4.conf.tun0.accept_source_route": "1",
  "net.ipv4.conf.tun0.arp_accept": "0",
  "net.ipv4.conf.tun0.arp_announce": "0",
  "net.ipv4.conf.tun0.arp_filter": "0",
  "net.ipv4.conf.tun0.arp_ignore": "0",
  "net.ipv4.conf.tun0.arp_notify": "0",
  "net.ipv4.conf.tun0.bc_forwarding": "0",
  "net.ipv4.conf.tun0.bootp_relay": "0",
  "net.ipv4.conf.tun0.disable_policy": "0",
  "net.ipv4.conf.tun0.disable_xfrm": "0",
  "net.ipv4.conf.tun0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.tun0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.tun0.force_igmp_version": "0",
  "net.ipv4.conf.tun0.forwarding": "1",
  "net.ipv4.conf.tun0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.tun0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.tun0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.tun0.log_martians": "0",
  "net.ipv4.conf.tun0.mc_forwarding": "0",
  "net.ipv4.conf.tun0.medium_id": "0",
  "net.ipv4.conf.tun0.promote_secondaries": "1",
  "net.ipv4.conf.tun0.proxy_arp": "0",
  "net.ipv4.conf.tun0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.tun0.route_localnet": "0",
  "net.ipv4.conf.tun0.rp_filter": "2",
  "net.ipv4.conf.tun0.secure_redirects": "1",
  "net.ipv4.conf.tun0.send_redirects": "1",
  "net.ipv4.conf.tun0.shared_media": "1",
  "net.ipv4.conf.tun0.src_valid_mark": "0",
  "net.ipv4.conf.tun0.tag": "0",
  "net.ipv4.conf.vboxnet0.accept_local": "0",
  "net.ipv4.conf.vboxnet0.accept_redirects": "1",
  "net.ipv4.conf.vboxnet0.accept_source_route": "1",
  "net.ipv4.conf.vboxnet0.arp_accept": "0",
  "net.ipv4.conf.vboxnet0.arp_announce": "0",
  "net.ipv4.conf.vboxnet0.arp_filter": "0",
  "net.ipv4.conf.vboxnet0.arp_ignore": "0",
  "net.ipv4.conf.vboxnet0.arp_notify": "0",
  "net.ipv4.conf.vboxnet0.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet0.bootp_relay": "0",
  "net.ipv4.conf.vboxnet0.disable_policy": "0",
  "net.ipv4.conf.vboxnet0.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet0.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet0.forwarding": "1",
  "net.ipv4.conf.vboxnet0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet0.log_martians": "0",
  "net.ipv4.conf.vboxnet0.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet0.medium_id": "0",
  "net.ipv4.conf.vboxnet0.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet0.proxy_arp": "0",
  "net.ipv4.conf.vboxnet0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet0.route_localnet": "0",
  "net.ipv4.conf.vboxnet0.rp_filter": "2",
  "net.ipv4.conf.vboxnet0.secure_redirects": "1",
  "net.ipv4.conf.vboxnet0.send_redirects": "1",
  "net.ipv4.conf.vboxnet0.shared_media": "1",
  "net.ipv4.conf.vboxnet0.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet0.tag": "0",
  "net.ipv4.conf.vboxnet1.accept_local": "0",
  "net.ipv4.conf.vboxnet1.accept_redirects": "1",
  "net.ipv4.conf.vboxnet1.accept_source_route": "1",
  "net.ipv4.conf.vboxnet1.arp_accept": "0",
  "net.ipv4.conf.vboxnet1.arp_announce": "0",
  "net.ipv4.conf.vboxnet1.arp_filter": "0",
  "net.ipv4.conf.vboxnet1.arp_ignore": "0",
  "net.ipv4.conf.vboxnet1.arp_notify": "0",
  "net.ipv4.conf.vboxnet1.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet1.bootp_relay": "0",
  "net.ipv4.conf.vboxnet1.disable_policy": "0",
  "net.ipv4.conf.vboxnet1.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet1.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet1.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet1.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet1.forwarding": "1",
  "net.ipv4.conf.vboxnet1.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet1.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet1.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet1.log_martians": "0",
  "net.ipv4.conf.vboxnet1.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet1.medium_id": "0",
  "net.ipv4.conf.vboxnet1.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet1.proxy_arp": "0",
  "net.ipv4.conf.vboxnet1.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet1.route_localnet": "0",
  "net.ipv4.conf.vboxnet1.rp_filter": "2",
  "net.ipv4.conf.vboxnet1.secure_redirects": "1",
  "net.ipv4.conf.vboxnet1.send_redirects": "1",
  "net.ipv4.conf.vboxnet1.shared_media": "1",
  "net.ipv4.conf.vboxnet1.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet1.tag": "0",
  "net.ipv4.conf.vboxnet10.accept_local": "0",
  "net.ipv4.conf.vboxnet10.accept_redirects": "1",
  "net.ipv4.conf.vboxnet10.accept_source_route": "1",
  "net.ipv4.conf.vboxnet10.arp_accept": "0",
  "net.ipv4.conf.vboxnet10.arp_announce": "0",
  "net.ipv4.conf.vboxnet10.arp_filter": "0",
  "net.ipv4.conf.vboxnet10.arp_ignore": "0",
  "net.ipv4.conf.vboxnet10.arp_notify": "0",
  "net.ipv4.conf.vboxnet10.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet10.bootp_relay": "0",
  "net.ipv4.conf.vboxnet10.disable_policy": "0",
  "net.ipv4.conf.vboxnet10.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet10.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet10.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet10.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet10.forwarding": "1",
  "net.ipv4.conf.vboxnet10.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet10.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet10.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet10.log_martians": "0",
  "net.ipv4.conf.vboxnet10.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet10.medium_id": "0",
  "net.ipv4.conf.vboxnet10.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet10.proxy_arp": "0",
  "net.ipv4.conf.vboxnet10.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet10.route_localnet": "0",
  "net.ipv4.conf.vboxnet10.rp_filter": "2",
  "net.ipv4.conf.vboxnet10.secure_redirects": "1",
  "net.ipv4.conf.vboxnet10.send_redirects": "1",
  "net.ipv4.conf.vboxnet10.shared_media": "1",
  "net.ipv4.conf.vboxnet10.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet10.tag": "0",
  "net.ipv4.conf.vboxnet11.accept_local": "0",
  "net.ipv4.conf.vboxnet11.accept_redirects": "1",
  "net.ipv4.conf.vboxnet11.accept_source_route": "1",
  "net.ipv4.conf.vboxnet11.arp_accept": "0",
  "net.ipv4.conf.vboxnet11.arp_announce": "0",
  "net.ipv4.conf.vboxnet11.arp_filter": "0",
  "net.ipv4.conf.vboxnet11.arp_ignore": "0",
  "net.ipv4.conf.vboxnet11.arp_notify": "0",
  "net.ipv4.conf.vboxnet11.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet11.bootp_relay": "0",
  "net.ipv4.conf.vboxnet11.disable_policy": "0",
  "net.ipv4.conf.vboxnet11.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet11.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet11.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet11.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet11.forwarding": "1",
  "net.ipv4.conf.vboxnet11.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet11.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet11.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet11.log_martians": "0",
  "net.ipv4.conf.vboxnet11.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet11.medium_id": "0",
  "net.ipv4.conf.vboxnet11.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet11.proxy_arp": "0",
  "net.ipv4.conf.vboxnet11.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet11.route_localnet": "0",
  "net.ipv4.conf.vboxnet11.rp_filter": "2",
  "net.ipv4.conf.vboxnet11.secure_redirects": "1",
  "net.ipv4.conf.vboxnet11.send_redirects": "1",
  "net.ipv4.conf.vboxnet11.shared_media": "1",
  "net.ipv4.conf.vboxnet11.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet11.tag": "0",
  "net.ipv4.conf.vboxnet12.accept_local": "0",
  "net.ipv4.conf.vboxnet12.accept_redirects": "1",
  "net.ipv4.conf.vboxnet12.accept_source_route": "1",
  "net.ipv4.conf.vboxnet12.arp_accept": "0",
  "net.ipv4.conf.vboxnet12.arp_announce": "0",
  "net.ipv4.conf.vboxnet12.arp_filter": "0",
  "net.ipv4.conf.vboxnet12.arp_ignore": "0",
  "net.ipv4.conf.vboxnet12.arp_notify": "0",
  "net.ipv4.conf.vboxnet12.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet12.bootp_relay": "0",
  "net.ipv4.conf.vboxnet12.disable_policy": "0",
  "net.ipv4.conf.vboxnet12.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet12.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet12.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet12.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet12.forwarding": "1",
  "net.ipv4.conf.vboxnet12.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet12.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet12.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet12.log_martians": "0",
  "net.ipv4.conf.vboxnet12.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet12.medium_id": "0",
  "net.ipv4.conf.vboxnet12.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet12.proxy_arp": "0",
  "net.ipv4.conf.vboxnet12.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet12.route_localnet": "0",
  "net.ipv4.conf.vboxnet12.rp_filter": "2",
  "net.ipv4.conf.vboxnet12.secure_redirects": "1",
  "net.ipv4.conf.vboxnet12.send_redirects": "1",
  "net.ipv4.conf.vboxnet12.shared_media": "1",
  "net.ipv4.conf.vboxnet12.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet12.tag": "0",
  "net.ipv4.conf.vboxnet13.accept_local": "0",
  "net.ipv4.conf.vboxnet13.accept_redirects": "1",
  "net.ipv4.conf.vboxnet13.accept_source_route": "1",
  "net.ipv4.conf.vboxnet13.arp_accept": "0",
  "net.ipv4.conf.vboxnet13.arp_announce": "0",
  "net.ipv4.conf.vboxnet13.arp_filter": "0",
  "net.ipv4.conf.vboxnet13.arp_ignore": "0",
  "net.ipv4.conf.vboxnet13.arp_notify": "0",
  "net.ipv4.conf.vboxnet13.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet13.bootp_relay": "0",
  "net.ipv4.conf.vboxnet13.disable_policy": "0",
  "net.ipv4.conf.vboxnet13.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet13.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet13.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet13.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet13.forwarding": "1",
  "net.ipv4.conf.vboxnet13.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet13.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet13.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet13.log_martians": "0",
  "net.ipv4.conf.vboxnet13.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet13.medium_id": "0",
  "net.ipv4.conf.vboxnet13.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet13.proxy_arp": "0",
  "net.ipv4.conf.vboxnet13.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet13.route_localnet": "0",
  "net.ipv4.conf.vboxnet13.rp_filter": "2",
  "net.ipv4.conf.vboxnet13.secure_redirects": "1",
  "net.ipv4.conf.vboxnet13.send_redirects": "1",
  "net.ipv4.conf.vboxnet13.shared_media": "1",
  "net.ipv4.conf.vboxnet13.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet13.tag": "0",
  "net.ipv4.conf.vboxnet2.accept_local": "0",
  "net.ipv4.conf.vboxnet2.accept_redirects": "1",
  "net.ipv4.conf.vboxnet2.accept_source_route": "1",
  "net.ipv4.conf.vboxnet2.arp_accept": "0",
  "net.ipv4.conf.vboxnet2.arp_announce": "0",
  "net.ipv4.conf.vboxnet2.arp_filter": "0",
  "net.ipv4.conf.vboxnet2.arp_ignore": "0",
  "net.ipv4.conf.vboxnet2.arp_notify": "0",
  "net.ipv4.conf.vboxnet2.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet2.bootp_relay": "0",
  "net.ipv4.conf.vboxnet2.disable_policy": "0",
  "net.ipv4.conf.vboxnet2.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet2.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet2.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet2.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet2.forwarding": "1",
  "net.ipv4.conf.vboxnet2.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet2.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet2.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet2.log_martians": "0",
  "net.ipv4.conf.vboxnet2.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet2.medium_id": "0",
  "net.ipv4.conf.vboxnet2.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet2.proxy_arp": "0",
  "net.ipv4.conf.vboxnet2.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet2.route_localnet": "0",
  "net.ipv4.conf.vboxnet2.rp_filter": "2",
  "net.ipv4.conf.vboxnet2.secure_redirects": "1",
  "net.ipv4.conf.vboxnet2.send_redirects": "1",
  "net.ipv4.conf.vboxnet2.shared_media": "1",
  "net.ipv4.conf.vboxnet2.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet2.tag": "0",
  "net.ipv4.conf.vboxnet3.accept_local": "0",
  "net.ipv4.conf.vboxnet3.accept_redirects": "1",
  "net.ipv4.conf.vboxnet3.accept_source_route": "1",
  "net.ipv4.conf.vboxnet3.arp_accept": "0",
  "net.ipv4.conf.vboxnet3.arp_announce": "0",
  "net.ipv4.conf.vboxnet3.arp_filter": "0",
  "net.ipv4.conf.vboxnet3.arp_ignore": "0",
  "net.ipv4.conf.vboxnet3.arp_notify": "0",
  "net.ipv4.conf.vboxnet3.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet3.bootp_relay": "0",
  "net.ipv4.conf.vboxnet3.disable_policy": "0",
  "net.ipv4.conf.vboxnet3.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet3.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet3.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet3.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet3.forwarding": "1",
  "net.ipv4.conf.vboxnet3.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet3.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet3.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet3.log_martians": "0",
  "net.ipv4.conf.vboxnet3.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet3.medium_id": "0",
  "net.ipv4.conf.vboxnet3.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet3.proxy_arp": "0",
  "net.ipv4.conf.vboxnet3.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet3.route_localnet": "0",
  "net.ipv4.conf.vboxnet3.rp_filter": "2",
  "net.ipv4.conf.vboxnet3.secure_redirects": "1",
  "net.ipv4.conf.vboxnet3.send_redirects": "1",
  "net.ipv4.conf.vboxnet3.shared_media": "1",
  "net.ipv4.conf.vboxnet3.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet3.tag": "0",
  "net.ipv4.conf.vboxnet4.accept_local": "0",
  "net.ipv4.conf.vboxnet4.accept_redirects": "1",
  "net.ipv4.conf.vboxnet4.accept_source_route": "1",
  "net.ipv4.conf.vboxnet4.arp_accept": "0",
  "net.ipv4.conf.vboxnet4.arp_announce": "0",
  "net.ipv4.conf.vboxnet4.arp_filter": "0",
  "net.ipv4.conf.vboxnet4.arp_ignore": "0",
  "net.ipv4.conf.vboxnet4.arp_notify": "0",
  "net.ipv4.conf.vboxnet4.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet4.bootp_relay": "0",
  "net.ipv4.conf.vboxnet4.disable_policy": "0",
  "net.ipv4.conf.vboxnet4.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet4.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet4.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet4.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet4.forwarding": "1",
  "net.ipv4.conf.vboxnet4.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet4.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet4.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet4.log_martians": "0",
  "net.ipv4.conf.vboxnet4.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet4.medium_id": "0",
  "net.ipv4.conf.vboxnet4.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet4.proxy_arp": "0",
  "net.ipv4.conf.vboxnet4.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet4.route_localnet": "0",
  "net.ipv4.conf.vboxnet4.rp_filter": "2",
  "net.ipv4.conf.vboxnet4.secure_redirects": "1",
  "net.ipv4.conf.vboxnet4.send_redirects": "1",
  "net.ipv4.conf.vboxnet4.shared_media": "1",
  "net.ipv4.conf.vboxnet4.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet4.tag": "0",
  "net.ipv4.conf.vboxnet5.accept_local": "0",
  "net.ipv4.conf.vboxnet5.accept_redirects": "1",
  "net.ipv4.conf.vboxnet5.accept_source_route": "1",
  "net.ipv4.conf.vboxnet5.arp_accept": "0",
  "net.ipv4.conf.vboxnet5.arp_announce": "0",
  "net.ipv4.conf.vboxnet5.arp_filter": "0",
  "net.ipv4.conf.vboxnet5.arp_ignore": "0",
  "net.ipv4.conf.vboxnet5.arp_notify": "0",
  "net.ipv4.conf.vboxnet5.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet5.bootp_relay": "0",
  "net.ipv4.conf.vboxnet5.disable_policy": "0",
  "net.ipv4.conf.vboxnet5.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet5.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet5.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet5.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet5.forwarding": "1",
  "net.ipv4.conf.vboxnet5.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet5.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet5.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet5.log_martians": "0",
  "net.ipv4.conf.vboxnet5.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet5.medium_id": "0",
  "net.ipv4.conf.vboxnet5.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet5.proxy_arp": "0",
  "net.ipv4.conf.vboxnet5.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet5.route_localnet": "0",
  "net.ipv4.conf.vboxnet5.rp_filter": "2",
  "net.ipv4.conf.vboxnet5.secure_redirects": "1",
  "net.ipv4.conf.vboxnet5.send_redirects": "1",
  "net.ipv4.conf.vboxnet5.shared_media": "1",
  "net.ipv4.conf.vboxnet5.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet5.tag": "0",
  "net.ipv4.conf.vboxnet6.accept_local": "0",
  "net.ipv4.conf.vboxnet6.accept_redirects": "1",
  "net.ipv4.conf.vboxnet6.accept_source_route": "1",
  "net.ipv4.conf.vboxnet6.arp_accept": "0",
  "net.ipv4.conf.vboxnet6.arp_announce": "0",
  "net.ipv4.conf.vboxnet6.arp_filter": "0",
  "net.ipv4.conf.vboxnet6.arp_ignore": "0",
  "net.ipv4.conf.vboxnet6.arp_notify": "0",
  "net.ipv4.conf.vboxnet6.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet6.bootp_relay": "0",
  "net.ipv4.conf.vboxnet6.disable_policy": "0",
  "net.ipv4.conf.vboxnet6.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet6.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet6.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet6.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet6.forwarding": "1",
  "net.ipv4.conf.vboxnet6.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet6.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet6.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet6.log_martians": "0",
  "net.ipv4.conf.vboxnet6.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet6.medium_id": "0",
  "net.ipv4.conf.vboxnet6.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet6.proxy_arp": "0",
  "net.ipv4.conf.vboxnet6.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet6.route_localnet": "0",
  "net.ipv4.conf.vboxnet6.rp_filter": "2",
  "net.ipv4.conf.vboxnet6.secure_redirects": "1",
  "net.ipv4.conf.vboxnet6.send_redirects": "1",
  "net.ipv4.conf.vboxnet6.shared_media": "1",
  "net.ipv4.conf.vboxnet6.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet6.tag": "0",
  "net.ipv4.conf.vboxnet7.accept_local": "0",
  "net.ipv4.conf.vboxnet7.accept_redirects": "1",
  "net.ipv4.conf.vboxnet7.accept_source_route": "1",
  "net.ipv4.conf.vboxnet7.arp_accept": "0",
  "net.ipv4.conf.vboxnet7.arp_announce": "0",
  "net.ipv4.conf.vboxnet7.arp_filter": "0",
  "net.ipv4.conf.vboxnet7.arp_ignore": "0",
  "net.ipv4.conf.vboxnet7.arp_notify": "0",
  "net.ipv4.conf.vboxnet7.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet7.bootp_relay": "0",
  "net.ipv4.conf.vboxnet7.disable_policy": "0",
  "net.ipv4.conf.vboxnet7.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet7.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet7.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet7.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet7.forwarding": "1",
  "net.ipv4.conf.vboxnet7.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet7.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet7.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet7.log_martians": "0",
  "net.ipv4.conf.vboxnet7.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet7.medium_id": "0",
  "net.ipv4.conf.vboxnet7.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet7.proxy_arp": "0",
  "net.ipv4.conf.vboxnet7.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet7.route_localnet": "0",
  "net.ipv4.conf.vboxnet7.rp_filter": "2",
  "net.ipv4.conf.vboxnet7.secure_redirects": "1",
  "net.ipv4.conf.vboxnet7.send_redirects": "1",
  "net.ipv4.conf.vboxnet7.shared_media": "1",
  "net.ipv4.conf.vboxnet7.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet7.tag": "0",
  "net.ipv4.conf.vboxnet8.accept_local": "0",
  "net.ipv4.conf.vboxnet8.accept_redirects": "1",
  "net.ipv4.conf.vboxnet8.accept_source_route": "1",
  "net.ipv4.conf.vboxnet8.arp_accept": "0",
  "net.ipv4.conf.vboxnet8.arp_announce": "0",
  "net.ipv4.conf.vboxnet8.arp_filter": "0",
  "net.ipv4.conf.vboxnet8.arp_ignore": "0",
  "net.ipv4.conf.vboxnet8.arp_notify": "0",
  "net.ipv4.conf.vboxnet8.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet8.bootp_relay": "0",
  "net.ipv4.conf.vboxnet8.disable_policy": "0",
  "net.ipv4.conf.vboxnet8.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet8.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet8.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet8.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet8.forwarding": "1",
  "net.ipv4.conf.vboxnet8.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet8.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet8.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet8.log_martians": "0",
  "net.ipv4.conf.vboxnet8.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet8.medium_id": "0",
  "net.ipv4.conf.vboxnet8.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet8.proxy_arp": "0",
  "net.ipv4.conf.vboxnet8.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet8.route_localnet": "0",
  "net.ipv4.conf.vboxnet8.rp_filter": "2",
  "net.ipv4.conf.vboxnet8.secure_redirects": "1",
  "net.ipv4.conf.vboxnet8.send_redirects": "1",
  "net.ipv4.conf.vboxnet8.shared_media": "1",
  "net.ipv4.conf.vboxnet8.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet8.tag": "0",
  "net.ipv4.conf.vboxnet9.accept_local": "0",
  "net.ipv4.conf.vboxnet9.accept_redirects": "1",
  "net.ipv4.conf.vboxnet9.accept_source_route": "1",
  "net.ipv4.conf.vboxnet9.arp_accept": "0",
  "net.ipv4.conf.vboxnet9.arp_announce": "0",
  "net.ipv4.conf.vboxnet9.arp_filter": "0",
  "net.ipv4.conf.vboxnet9.arp_ignore": "0",
  "net.ipv4.conf.vboxnet9.arp_notify": "0",
  "net.ipv4.conf.vboxnet9.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet9.bootp_relay": "0",
  "net.ipv4.conf.vboxnet9.disable_policy": "0",
  "net.ipv4.conf.vboxnet9.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet9.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet9.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet9.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet9.forwarding": "1",
  "net.ipv4.conf.vboxnet9.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet9.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet9.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet9.log_martians": "0",
  "net.ipv4.conf.vboxnet9.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet9.medium_id": "0",
  "net.ipv4.conf.vboxnet9.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet9.proxy_arp": "0",
  "net.ipv4.conf.vboxnet9.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet9.route_localnet": "0",
  "net.ipv4.conf.vboxnet9.rp_filter": "2",
  "net.ipv4.conf.vboxnet9.secure_redirects": "1",
  "net.ipv4.conf.vboxnet9.send_redirects": "1",
  "net.ipv4.conf.vboxnet9.shared_media": "1",
  "net.ipv4.conf.vboxnet9.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet9.tag": "0",
  "net.ipv4.conf.virbr0-nic.accept_local": "0",
  "net.ipv4.conf.virbr0-nic.accept_redirects": "1",
  "net.ipv4.conf.virbr0-nic.accept_source_route": "1",
  "net.ipv4.conf.virbr0-nic.arp_accept": "0",
  "net.ipv4.conf.virbr0-nic.arp_announce": "0",
  "net.ipv4.conf.virbr0-nic.arp_filter": "0",
  "net.ipv4.conf.virbr0-nic.arp_ignore": "0",
  "net.ipv4.conf.virbr0-nic.arp_notify": "0",
  "net.ipv4.conf.virbr0-nic.bc_forwarding": "0",
  "net.ipv4.conf.virbr0-nic.bootp_relay": "0",
  "net.ipv4.conf.virbr0-nic.disable_policy": "0",
  "net.ipv4.conf.virbr0-nic.disable_xfrm": "0",
  "net.ipv4.conf.virbr0-nic.drop_gratuitous_arp": "0",
  "net.ipv4.conf.virbr0-nic.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.virbr0-nic.force_igmp_version": "0",
  "net.ipv4.conf.virbr0-nic.forwarding": "1",
  "net.ipv4.conf.virbr0-nic.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.virbr0-nic.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.virbr0-nic.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.virbr0-nic.log_martians": "0",
  "net.ipv4.conf.virbr0-nic.mc_forwarding": "0",
  "net.ipv4.conf.virbr0-nic.medium_id": "0",
  "net.ipv4.conf.virbr0-nic.promote_secondaries": "1",
  "net.ipv4.conf.virbr0-nic.proxy_arp": "0",
  "net.ipv4.conf.virbr0-nic.proxy_arp_pvlan": "0",
  "net.ipv4.conf.virbr0-nic.route_localnet": "0",
  "net.ipv4.conf.virbr0-nic.rp_filter": "2",
  "net.ipv4.conf.virbr0-nic.secure_redirects": "1",
  "net.ipv4.conf.virbr0-nic.send_redirects": "1",
  "net.ipv4.conf.virbr0-nic.shared_media": "1",
  "net.ipv4.conf.virbr0-nic.src_valid_mark": "0",
  "net.ipv4.conf.virbr0-nic.tag": "0",
  "net.ipv4.conf.virbr0.accept_local": "0",
  "net.ipv4.conf.virbr0.accept_redirects": "1",
  "net.ipv4.conf.virbr0.accept_source_route": "1",
  "net.ipv4.conf.virbr0.arp_accept": "0",
  "net.ipv4.conf.virbr0.arp_announce": "0",
  "net.ipv4.conf.virbr0.arp_filter": "0",
  "net.ipv4.conf.virbr0.arp_ignore": "0",
  "net.ipv4.conf.virbr0.arp_notify": "0",
  "net.ipv4.conf.virbr0.bc_forwarding": "0",
  "net.ipv4.conf.virbr0.bootp_relay": "0",
  "net.ipv4.conf.virbr0.disable_policy": "0",
  "net.ipv4.conf.virbr0.disable_xfrm": "0",
  "net.ipv4.conf.virbr0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.virbr0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.virbr0.force_igmp_version": "0",
  "net.ipv4.conf.virbr0.forwarding": "1",
  "net.ipv4.conf.virbr0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.virbr0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.virbr0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.virbr0.log_martians": "0",
  "net.ipv4.conf.virbr0.mc_forwarding": "0",
  "net.ipv4.conf.virbr0.medium_id": "0",
  "net.ipv4.conf.virbr0.promote_secondaries": "1",
  "net.ipv4.conf.virbr0.proxy_arp": "0",
  "net.ipv4.conf.virbr0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.virbr0.route_localnet": "0",
  "net.ipv4.conf.virbr0.rp_filter": "2",
  "net.ipv4.conf.virbr0.secure_redirects": "1",
  "net.ipv4.conf.virbr0.send_redirects": "1",
  "net.ipv4.conf.virbr0.shared_media": "1",
  "net.ipv4.conf.virbr0.src_valid_mark": "0",
  "net.ipv4.conf.virbr0.tag": "0",
  "net.ipv4.conf.wlan0.accept_local": "0",
  "net.ipv4.conf.wlan0.accept_redirects": "1",
  "net.ipv4.conf.wlan0.accept_source_route": "1",
  "net.ipv4.conf.wlan0.arp_accept": "0",
  "net.ipv4.conf.wlan0.arp_announce": "0",
  "net.ipv4.conf.wlan0.arp_filter": "0",
  "net.ipv4.conf.wlan0.arp_ignore": "0",
  "net.ipv4.conf.wlan0.arp_notify": "0",
  "net.ipv4.conf.wlan0.bc_forwarding": "0",
  "net.ipv4.conf.wlan0.bootp_relay": "0",
  "net.ipv4.conf.wlan0.disable_policy": "0",
  "net.ipv4.conf.wlan0.disable_xfrm": "0",
  "net.ipv4.conf.wlan0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.wlan0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.wlan0.force_igmp_version": "0",
  "net.ipv4.conf.wlan0.forwarding": "1",
  "net.ipv4.conf.wlan0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.wlan0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.wlan0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.wlan0.log_martians": "0",
  "net.ipv4.conf.wlan0.mc_forwarding": "0",
  "net.ipv4.conf.wlan0.medium_id": "0",
  "net.ipv4.conf.wlan0.promote_secondaries": "1",
  "net.ipv4.conf.wlan0.proxy_arp": "0",
  "net.ipv4.conf.wlan0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.wlan0.route_localnet": "0",
  "net.ipv4.conf.wlan0.rp_filter": "2",
  "net.ipv4.conf.wlan0.secure_redirects": "1",
  "net.ipv4.conf.wlan0.send_redirects": "1",
  "net.ipv4.conf.wlan0.shared_media": "1",
  "net.ipv4.conf.wlan0.src_valid_mark": "0",
  "net.ipv4.conf.wlan0.tag": "0",
  "net.ipv4.fib_multipath_hash_policy": "0",
  "net.ipv4.fib_multipath_use_neigh": "0",
  "net.ipv4.fib_sync_mem": "524288",
  "net.ipv4.fwmark_reflect": "0",
  "net.ipv4.icmp_echo_ignore_all": "0",
  "net.ipv4.icmp_echo_ignore_broadcasts": "1",
  "net.ipv4.icmp_errors_use_inbound_ifaddr": "0",
  "net.ipv4.icmp_ignore_bogus_error_responses": "1",
  "net.ipv4.icmp_msgs_burst": "50",
  "net.ipv4.icmp_msgs_per_sec": "1000",
  "net.ipv4.icmp_ratelimit": "1000",
  "net.ipv4.icmp_ratemask": "6168",
  "net.ipv4.igmp_link_local_mcast_reports": "1",
  "net.ipv4.igmp_max_memberships": "20",
  "net.ipv4.igmp_max_msf": "10",
  "net.ipv4.igmp_qrv": "2",
  "net.ipv4.inet_peer_maxttl": "600",
  "net.ipv4.inet_peer_minttl": "120",
  "net.ipv4.inet_peer_threshold": "65664",
  "net.ipv4.ip_default_ttl": "64",
  "net.ipv4.ip_dynaddr": "0",
  "net.ipv4.ip_early_demux": "1",
  "net.ipv4.ip_forward": "1",
  "net.ipv4.ip_forward_update_priority": "1",
  "net.ipv4.ip_forward_use_pmtu": "0",
  "net.ipv4.ip_local_port_range": "32768\t60999",
  "net.ipv4.ip_local_reserved_ports": "",
  "net.ipv4.ip_no_pmtu_disc": "0",
  "net.ipv4.ip_nonlocal_bind": "0",
  "net.ipv4.ip_unprivileged_port_start": "1024",
  "net.ipv4.ipfrag_high_thresh": "4194304",
  "net.ipv4.ipfrag_low_thresh": "3145728",
  "net.ipv4.ipfrag_max_dist": "64",
  "net.ipv4.ipfrag_secret_interval": "0",
  "net.ipv4.ipfrag_time": "30",
  "net.ipv4.neigh.default.anycast_delay": "100",
  "net.ipv4.neigh.default.app_solicit": "0",
  "net.ipv4.neigh.default.base_reachable_time": "30",
  "net.ipv4.neigh.default.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.default.delay_first_probe_time": "5",
  "net.ipv4.neigh.default.gc_interval": "30",
  "net.ipv4.neigh.default.gc_stale_time": "60",
  "net.ipv4.neigh.default.gc_thresh1": "128",
  "net.ipv4.neigh.default.gc_thresh2": "512",
  "net.ipv4.neigh.default.gc_thresh3": "1024",
  "net.ipv4.neigh.default.locktime": "100",
  "net.ipv4.neigh.default.mcast_resolicit": "0",
  "net.ipv4.neigh.default.mcast_solicit": "3",
  "net.ipv4.neigh.default.proxy_delay": "80",
  "net.ipv4.neigh.default.proxy_qlen": "64",
  "net.ipv4.neigh.default.retrans_time": "100",
  "net.ipv4.neigh.default.retrans_time_ms": "1000",
  "net.ipv4.neigh.default.ucast_solicit": "3",
  "net.ipv4.neigh.default.unres_qlen": "101",
  "net.ipv4.neigh.default.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.docker0.anycast_delay": "100",
  "net.ipv4.neigh.docker0.app_solicit": "0",
  "net.ipv4.neigh.docker0.base_reachable_time": "30",
  "net.ipv4.neigh.docker0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.docker0.delay_first_probe_time": "5",
  "net.ipv4.neigh.docker0.gc_stale_time": "60",
  "net.ipv4.neigh.docker0.locktime": "100",
  "net.ipv4.neigh.docker0.mcast_resolicit": "0",
  "net.ipv4.neigh.docker0.mcast_solicit": "3",
  "net.ipv4.neigh.docker0.proxy_delay": "80",
  "net.ipv4.neigh.docker0.proxy_qlen": "64",
  "net.ipv4.neigh.docker0.retrans_time": "100",
  "net.ipv4.neigh.docker0.retrans_time_ms": "1000",
  "net.ipv4.neigh.docker0.ucast_solicit": "3",
  "net.ipv4.neigh.docker0.unres_qlen": "101",
  "net.ipv4.neigh.docker0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.eth0.anycast_delay": "100",
  "net.ipv4.neigh.eth0.app_solicit": "0",
  "net.ipv4.neigh.eth0.base_reachable_time": "30",
  "net.ipv4.neigh.eth0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.eth0.delay_first_probe_time": "5",
  "net.ipv4.neigh.eth0.gc_stale_time": "60",
  "net.ipv4.neigh.eth0.locktime": "100",
  "net.ipv4.neigh.eth0.mcast_resolicit": "0",
  "net.ipv4.neigh.eth0.mcast_solicit": "3",
  "net.ipv4.neigh.eth0.proxy_delay": "80",
  "net.ipv4.neigh.eth0.proxy_qlen": "64",
  "net.ipv4.neigh.eth0.retrans_time": "100",
  "net.ipv4.neigh.eth0.retrans_time_ms": "1000",
  "net.ipv4.neigh.eth0.ucast_solicit": "3",
  "net.ipv4.neigh.eth0.unres_qlen": "101",
  "net.ipv4.neigh.eth0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.lo.anycast_delay": "100",
  "net.ipv4.neigh.lo.app_solicit": "0",
  "net.ipv4.neigh.lo.base_reachable_time": "30",
  "net.ipv4.neigh.lo.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.lo.delay_first_probe_time": "5",
  "net.ipv4.neigh.lo.gc_stale_time": "60",
  "net.ipv4.neigh.lo.locktime": "100",
  "net.ipv4.neigh.lo.mcast_resolicit": "0",
  "net.ipv4.neigh.lo.mcast_solicit": "3",
  "net.ipv4.neigh.lo.proxy_delay": "80",
  "net.ipv4.neigh.lo.proxy_qlen": "64",
  "net.ipv4.neigh.lo.retrans_time": "100",
  "net.ipv4.neigh.lo.retrans_time_ms": "1000",
  "net.ipv4.neigh.lo.ucast_solicit": "3",
  "net.ipv4.neigh.lo.unres_qlen": "101",
  "net.ipv4.neigh.lo.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.tun0.anycast_delay": "100",
  "net.ipv4.neigh.tun0.app_solicit": "0",
  "net.ipv4.neigh.tun0.base_reachable_time": "30",
  "net.ipv4.neigh.tun0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.tun0.delay_first_probe_time": "5",
  "net.ipv4.neigh.tun0.gc_stale_time": "60",
  "net.ipv4.neigh.tun0.locktime": "100",
  "net.ipv4.neigh.tun0.mcast_resolicit": "0",
  "net.ipv4.neigh.tun0.mcast_solicit": "3",
  "net.ipv4.neigh.tun0.proxy_delay": "80",
  "net.ipv4.neigh.tun0.proxy_qlen": "64",
  "net.ipv4.neigh.tun0.retrans_time": "100",
  "net.ipv4.neigh.tun0.retrans_time_ms": "1000",
  "net.ipv4.neigh.tun0.ucast_solicit": "3",
  "net.ipv4.neigh.tun0.unres_qlen": "101",
  "net.ipv4.neigh.tun0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet0.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet0.app_solicit": "0",
  "net.ipv4.neigh.vboxnet0.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet0.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet0.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet0.locktime": "100",
  "net.ipv4.neigh.vboxnet0.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet0.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet0.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet0.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet0.retrans_time": "100",
  "net.ipv4.neigh.vboxnet0.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet0.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet0.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet1.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet1.app_solicit": "0",
  "net.ipv4.neigh.vboxnet1.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet1.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet1.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet1.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet1.locktime": "100",
  "net.ipv4.neigh.vboxnet1.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet1.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet1.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet1.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet1.retrans_time": "100",
  "net.ipv4.neigh.vboxnet1.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet1.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet1.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet1.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet10.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet10.app_solicit": "0",
  "net.ipv4.neigh.vboxnet10.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet10.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet10.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet10.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet10.locktime": "100",
  "net.ipv4.neigh.vboxnet10.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet10.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet10.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet10.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet10.retrans_time": "100",
  "net.ipv4.neigh.vboxnet10.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet10.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet10.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet10.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet11.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet11.app_solicit": "0",
  "net.ipv4.neigh.vboxnet11.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet11.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet11.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet11.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet11.locktime": "100",
  "net.ipv4.neigh.vboxnet11.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet11.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet11.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet11.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet11.retrans_time": "100",
  "net.ipv4.neigh.vboxnet11.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet11.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet11.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet11.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet12.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet12.app_solicit": "0",
  "net.ipv4.neigh.vboxnet12.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet12.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet12.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet12.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet12.locktime": "100",
  "net.ipv4.neigh.vboxnet12.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet12.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet12.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet12.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet12.retrans_time": "100",
  "net.ipv4.neigh.vboxnet12.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet12.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet12.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet12.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet13.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet13.app_solicit": "0",
  "net.ipv4.neigh.vboxnet13.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet13.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet13.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet13.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet13.locktime": "100",
  "net.ipv4.neigh.vboxnet13.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet13.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet13.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet13.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet13.retrans_time": "100",
  "net.ipv4.neigh.vboxnet13.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet13.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet13.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet13.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet2.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet2.app_solicit": "0",
  "net.ipv4.neigh.vboxnet2.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet2.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet2.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet2.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet2.locktime": "100",
  "net.ipv4.neigh.vboxnet2.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet2.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet2.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet2.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet2.retrans_time": "100",
  "net.ipv4.neigh.vboxnet2.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet2.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet2.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet2.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet3.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet3.app_solicit": "0",
  "net.ipv4.neigh.vboxnet3.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet3.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet3.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet3.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet3.locktime": "100",
  "net.ipv4.neigh.vboxnet3.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet3.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet3.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet3.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet3.retrans_time": "100",
  "net.ipv4.neigh.vboxnet3.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet3.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet3.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet3.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet4.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet4.app_solicit": "0",
  "net.ipv4.neigh.vboxnet4.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet4.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet4.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet4.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet4.locktime": "100",
  "net.ipv4.neigh.vboxnet4.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet4.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet4.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet4.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet4.retrans_time": "100",
  "net.ipv4.neigh.vboxnet4.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet4.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet4.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet4.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet5.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet5.app_solicit": "0",
  "net.ipv4.neigh.vboxnet5.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet5.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet5.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet5.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet5.locktime": "100",
  "net.ipv4.neigh.vboxnet5.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet5.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet5.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet5.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet5.retrans_time": "100",
  "net.ipv4.neigh.vboxnet5.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet5.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet5.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet5.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet6.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet6.app_solicit": "0",
  "net.ipv4.neigh.vboxnet6.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet6.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet6.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet6.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet6.locktime": "100",
  "net.ipv4.neigh.vboxnet6.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet6.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet6.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet6.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet6.retrans_time": "100",
  "net.ipv4.neigh.vboxnet6.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet6.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet6.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet6.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet7.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet7.app_solicit": "0",
  "net.ipv4.neigh.vboxnet7.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet7.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet7.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet7.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet7.locktime": "100",
  "net.ipv4.neigh.vboxnet7.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet7.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet7.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet7.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet7.retrans_time": "100",
  "net.ipv4.neigh.vboxnet7.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet7.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet7.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet7.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet8.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet8.app_solicit": "0",
  "net.ipv4.neigh.vboxnet8.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet8.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet8.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet8.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet8.locktime": "100",
  "net.ipv4.neigh.vboxnet8.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet8.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet8.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet8.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet8.retrans_time": "100",
  "net.ipv4.neigh.vboxnet8.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet8.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet8.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet8.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet9.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet9.app_solicit": "0",
  "net.ipv4.neigh.vboxnet9.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet9.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet9.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet9.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet9.locktime": "100",
  "net.ipv4.neigh.vboxnet9.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet9.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet9.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet9.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet9.retrans_time": "100",
  "net.ipv4.neigh.vboxnet9.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet9.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet9.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet9.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.virbr0-nic.anycast_delay": "100",
  "net.ipv4.neigh.virbr0-nic.app_solicit": "0",
  "net.ipv4.neigh.virbr0-nic.base_reachable_time": "30",
  "net.ipv4.neigh.virbr0-nic.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.virbr0-nic.delay_first_probe_time": "5",
  "net.ipv4.neigh.virbr0-nic.gc_stale_time": "60",
  "net.ipv4.neigh.virbr0-nic.locktime": "100",
  "net.ipv4.neigh.virbr0-nic.mcast_resolicit": "0",
  "net.ipv4.neigh.virbr0-nic.mcast_solicit": "3",
  "net.ipv4.neigh.virbr0-nic.proxy_delay": "80",
  "net.ipv4.neigh.virbr0-nic.proxy_qlen": "64",
  "net.ipv4.neigh.virbr0-nic.retrans_time": "100",
  "net.ipv4.neigh.virbr0-nic.retrans_time_ms": "1000",
  "net.ipv4.neigh.virbr0-nic.ucast_solicit": "3",
  "net.ipv4.neigh.virbr0-nic.unres_qlen": "101",
  "net.ipv4.neigh.virbr0-nic.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.virbr0.anycast_delay": "100",
  "net.ipv4.neigh.virbr0.app_solicit": "0",
  "net.ipv4.neigh.virbr0.base_reachable_time": "30",
  "net.ipv4.neigh.virbr0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.virbr0.delay_first_probe_time": "5",
  "net.ipv4.neigh.virbr0.gc_stale_time": "60",
  "net.ipv4.neigh.virbr0.locktime": "100",
  "net.ipv4.neigh.virbr0.mcast_resolicit": "0",
  "net.ipv4.neigh.virbr0.mcast_solicit": "3",
  "net.ipv4.neigh.virbr0.proxy_delay": "80",
  "net.ipv4.neigh.virbr0.proxy_qlen": "64",
  "net.ipv4.neigh.virbr0.retrans_time": "100",
  "net.ipv4.neigh.virbr0.retrans_time_ms": "1000",
  "net.ipv4.neigh.virbr0.ucast_solicit": "3",
  "net.ipv4.neigh.virbr0.unres_qlen": "101",
  "net.ipv4.neigh.virbr0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.wlan0.anycast_delay": "100",
  "net.ipv4.neigh.wlan0.app_solicit": "0",
  "net.ipv4.neigh.wlan0.base_reachable_time": "30",
  "net.ipv4.neigh.wlan0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.wlan0.delay_first_probe_time": "5",
  "net.ipv4.neigh.wlan0.gc_stale_time": "60",
  "net.ipv4.neigh.wlan0.locktime": "100",
  "net.ipv4.neigh.wlan0.mcast_resolicit": "0",
  "net.ipv4.neigh.wlan0.mcast_solicit": "3",
  "net.ipv4.neigh.wlan0.proxy_delay": "80",
  "net.ipv4.neigh.wlan0.proxy_qlen": "64",
  "net.ipv4.neigh.wlan0.retrans_time": "100",
  "net.ipv4.neigh.wlan0.retrans_time_ms": "1000",
  "net.ipv4.neigh.wlan0.ucast_solicit": "3",
  "net.ipv4.neigh.wlan0.unres_qlen": "101",
  "net.ipv4.neigh.wlan0.unres_qlen_bytes": "212992",
  "net.ipv4.ping_group_range": "0\t2147483647",
  "net.ipv4.raw_l3mdev_accept": "1",
  "net.ipv4.route.error_burst": "5000",
  "net.ipv4.route.error_cost": "1000",
  "net.ipv4.route.gc_elasticity": "8",
  "net.ipv4.route.gc_interval": "60",
  "net.ipv4.route.gc_min_interval": "0",
  "net.ipv4.route.gc_min_interval_ms": "500",
  "net.ipv4.route.gc_thresh": "-1",
  "net.ipv4.route.gc_timeout": "300",
  "net.ipv4.route.max_size": "2147483647",
  "net.ipv4.route.min_adv_mss": "256",
  "net.ipv4.route.min_pmtu": "552",
  "net.ipv4.route.mtu_expires": "600",
  "net.ipv4.route.redirect_load": "20",
  "net.ipv4.route.redirect_number": "9",
  "net.ipv4.route.redirect_silence": "20480",
  "net.ipv4.tcp_abort_on_overflow": "0",
  "net.ipv4.tcp_adv_win_scale": "1",
  "net.ipv4.tcp_allowed_congestion_control": "reno cubic",
  "net.ipv4.tcp_app_win": "31",
  "net.ipv4.tcp_autocorking": "1",
  "net.ipv4.tcp_available_congestion_control": "reno cubic",
  "net.ipv4.tcp_available_ulp": "",
  "net.ipv4.tcp_base_mss": "1024",
  "net.ipv4.tcp_challenge_ack_limit": "1000",
  "net.ipv4.tcp_comp_sack_delay_ns": "1000000",
  "net.ipv4.tcp_comp_sack_nr": "44",
  "net.ipv4.tcp_congestion_control": "cubic",
  "net.ipv4.tcp_dsack": "1",
  "net.ipv4.tcp_early_demux": "1",
  "net.ipv4.tcp_early_retrans": "3",
  "net.ipv4.tcp_ecn": "2",
  "net.ipv4.tcp_ecn_fallback": "1",
  "net.ipv4.tcp_fack": "0",
  "net.ipv4.tcp_fastopen": "1",
  "net.ipv4.tcp_fastopen_blackhole_timeout_sec": "3600",
  "net.ipv4.tcp_fin_timeout": "60",
  "net.ipv4.tcp_frto": "2",
  "net.ipv4.tcp_fwmark_accept": "0",
  "net.ipv4.tcp_invalid_ratelimit": "500",
  "net.ipv4.tcp_keepalive_intvl": "75",
  "net.ipv4.tcp_keepalive_probes": "9",
  "net.ipv4.tcp_keepalive_time": "7200",
  "net.ipv4.tcp_l3mdev_accept": "0",
  "net.ipv4.tcp_limit_output_bytes": "1048576",
  "net.ipv4.tcp_low_latency": "0",
  "net.ipv4.tcp_max_orphans": "131072",
  "net.ipv4.tcp_max_reordering": "300",
  "net.ipv4.tcp_max_syn_backlog": "2048",
  "net.ipv4.tcp_max_tw_buckets": "131072",
  "net.ipv4.tcp_mem": "381744\t508994\t763488",
  "net.ipv4.tcp_min_rtt_wlen": "300",
  "net.ipv4.tcp_min_snd_mss": "48",
  "net.ipv4.tcp_min_tso_segs": "2",
  "net.ipv4.tcp_moderate_rcvbuf": "1",
  "net.ipv4.tcp_mtu_probe_floor": "48",
  "net.ipv4.tcp_mtu_probing": "0",
  "net.ipv4.tcp_no_metrics_save": "0",
  "net.ipv4.tcp_notsent_lowat": "4294967295",
  "net.ipv4.tcp_orphan_retries": "0",
  "net.ipv4.tcp_pacing_ca_ratio": "120",
  "net.ipv4.tcp_pacing_ss_ratio": "200",
  "net.ipv4.tcp_probe_interval": "600",
  "net.ipv4.tcp_probe_threshold": "8",
  "net.ipv4.tcp_recovery": "1",
  "net.ipv4.tcp_reordering": "3",
  "net.ipv4.tcp_retrans_collapse": "1",
  "net.ipv4.tcp_retries1": "3",
  "net.ipv4.tcp_retries2": "15",
  "net.ipv4.tcp_rfc1337": "0",
  "net.ipv4.tcp_rmem": "4096\t131072\t6291456",
  "net.ipv4.tcp_rx_skb_cache": "0",
  "net.ipv4.tcp_sack": "1",
  "net.ipv4.tcp_slow_start_after_idle": "1",
  "net.ipv4.tcp_stdurg": "0",
  "net.ipv4.tcp_syn_retries": "6",
  "net.ipv4.tcp_synack_retries": "5",
  "net.ipv4.tcp_syncookies": "1",
  "net.ipv4.tcp_thin_linear_timeouts": "0",
  "net.ipv4.tcp_timestamps": "1",
  "net.ipv4.tcp_tso_win_divisor": "3",
  "net.ipv4.tcp_tw_reuse": "2",
  "net.ipv4.tcp_tx_skb_cache": "0",
  "net.ipv4.tcp_window_scaling": "1",
  "net.ipv4.tcp_wmem": "4096\t16384\t4194304",
  "net.ipv4.tcp_workaround_signed_windows": "0",
  "net.ipv4.udp_early_demux": "1",
  "net.ipv4.udp_l3mdev_accept": "0",
  "net.ipv4.udp_mem": "763491\t1017988\t1526982",
  "net.ipv4.udp_rmem_min": "4096",
  "net.ipv4.udp_wmem_min": "4096",
  "net.ipv4.xfrm4_gc_thresh": "32768",
  "net.ipv6.anycast_src_echo_reply": "0",
  "net.ipv6.auto_flowlabels": "1",
  "net.ipv6.bindv6only": "0",
  "net.ipv6.calipso_cache_bucket_size": "10",
  "net.ipv6.calipso_cache_enable": "1",
  "net.ipv6.conf.all.accept_dad": "0",
  "net.ipv6.conf.all.accept_ra": "1",
  "net.ipv6.conf.all.accept_ra_defrtr": "1",
  "net.ipv6.conf.all.accept_ra_from_local": "0",
  "net.ipv6.conf.all.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.all.accept_ra_mtu": "1",
  "net.ipv6.conf.all.accept_ra_pinfo": "1",
  "net.ipv6.conf.all.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.all.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.all.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.all.accept_redirects": "1",
  "net.ipv6.conf.all.accept_source_route": "0",
  "net.ipv6.conf.all.addr_gen_mode": "0",
  "net.ipv6.conf.all.autoconf": "1",
  "net.ipv6.conf.all.dad_transmits": "1",
  "net.ipv6.conf.all.disable_ipv6": "0",
  "net.ipv6.conf.all.disable_policy": "0",
  "net.ipv6.conf.all.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.all.drop_unsolicited_na": "0",
  "net.ipv6.conf.all.enhanced_dad": "1",
  "net.ipv6.conf.all.force_mld_version": "0",
  "net.ipv6.conf.all.force_tllao": "0",
  "net.ipv6.conf.all.forwarding": "0",
  "net.ipv6.conf.all.hop_limit": "64",
  "net.ipv6.conf.all.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.all.keep_addr_on_down": "0",
  "net.ipv6.conf.all.max_addresses": "16",
  "net.ipv6.conf.all.max_desync_factor": "600",
  "net.ipv6.conf.all.mc_forwarding": "0",
  "net.ipv6.conf.all.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.all.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.all.mtu": "1280",
  "net.ipv6.conf.all.ndisc_notify": "0",
  "net.ipv6.conf.all.ndisc_tclass": "0",
  "net.ipv6.conf.all.proxy_ndp": "0",
  "net.ipv6.conf.all.regen_max_retry": "3",
  "net.ipv6.conf.all.router_probe_interval": "60",
  "net.ipv6.conf.all.router_solicitation_delay": "1",
  "net.ipv6.conf.all.router_solicitation_interval": "4",
  "net.ipv6.conf.all.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.all.router_solicitations": "-1",
  "net.ipv6.conf.all.seg6_enabled": "0",
  "net.ipv6.conf.all.seg6_require_hmac": "0",
  "net.ipv6.conf.all.suppress_frag_ndisc": "1",
  "net.ipv6.conf.all.temp_prefered_lft": "86400",
  "net.ipv6.conf.all.temp_valid_lft": "604800",
  "net.ipv6.conf.all.use_oif_addrs_only": "0",
  "net.ipv6.conf.all.use_tempaddr": "2",
  "net.ipv6.conf.default.accept_dad": "1",
  "net.ipv6.conf.default.accept_ra": "1",
  "net.ipv6.conf.default.accept_ra_defrtr": "1",
  "net.ipv6.conf.default.accept_ra_from_local": "0",
  "net.ipv6.conf.default.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.default.accept_ra_mtu": "1",
  "net.ipv6.conf.default.accept_ra_pinfo": "1",
  "net.ipv6.conf.default.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.default.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.default.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.default.accept_redirects": "1",
  "net.ipv6.conf.default.accept_source_route": "0",
  "net.ipv6.conf.default.addr_gen_mode": "0",
  "net.ipv6.conf.default.autoconf": "1",
  "net.ipv6.conf.default.dad_transmits": "1",
  "net.ipv6.conf.default.disable_ipv6": "0",
  "net.ipv6.conf.default.disable_policy": "0",
  "net.ipv6.conf.default.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.default.drop_unsolicited_na": "0",
  "net.ipv6.conf.default.enhanced_dad": "1",
  "net.ipv6.conf.default.force_mld_version": "0",
  "net.ipv6.conf.default.force_tllao": "0",
  "net.ipv6.conf.default.forwarding": "0",
  "net.ipv6.conf.default.hop_limit": "64",
  "net.ipv6.conf.default.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.default.keep_addr_on_down": "0",
  "net.ipv6.conf.default.max_addresses": "16",
  "net.ipv6.conf.default.max_desync_factor": "600",
  "net.ipv6.conf.default.mc_forwarding": "0",
  "net.ipv6.conf.default.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.default.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.default.mtu": "1280",
  "net.ipv6.conf.default.ndisc_notify": "0",
  "net.ipv6.conf.default.ndisc_tclass": "0",
  "net.ipv6.conf.default.proxy_ndp": "0",
  "net.ipv6.conf.default.regen_max_retry": "3",
  "net.ipv6.conf.default.router_probe_interval": "60",
  "net.ipv6.conf.default.router_solicitation_delay": "1",
  "net.ipv6.conf.default.router_solicitation_interval": "4",
  "net.ipv6.conf.default.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.default.router_solicitations": "-1",
  "net.ipv6.conf.default.seg6_enabled": "0",
  "net.ipv6.conf.default.seg6_require_hmac": "0",
  "net.ipv6.conf.default.suppress_frag_ndisc": "1",
  "net.ipv6.conf.default.temp_prefered_lft": "86400",
  "net.ipv6.conf.default.temp_valid_lft": "604800",
  "net.ipv6.conf.default.use_oif_addrs_only": "0",
  "net.ipv6.conf.default.use_tempaddr": "2",
  "net.ipv6.conf.docker0.accept_dad": "1",
  "net.ipv6.conf.docker0.accept_ra": "1",
  "net.ipv6.conf.docker0.accept_ra_defrtr": "1",
  "net.ipv6.conf.docker0.accept_ra_from_local": "0",
  "net.ipv6.conf.docker0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.docker0.accept_ra_mtu": "1",
  "net.ipv6.conf.docker0.accept_ra_pinfo": "1",
  "net.ipv6.conf.docker0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.docker0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.docker0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.docker0.accept_redirects": "1",
  "net.ipv6.conf.docker0.accept_source_route": "0",
  "net.ipv6.conf.docker0.addr_gen_mode": "0",
  "net.ipv6.conf.docker0.autoconf": "1",
  "net.ipv6.conf.docker0.dad_transmits": "1",
  "net.ipv6.conf.docker0.disable_ipv6": "0",
  "net.ipv6.conf.docker0.disable_policy": "0",
  "net.ipv6.conf.docker0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.docker0.drop_unsolicited_na": "0",
  "net.ipv6.conf.docker0.enhanced_dad": "1",
  "net.ipv6.conf.docker0.force_mld_version": "0",
  "net.ipv6.conf.docker0.force_tllao": "0",
  "net.ipv6.conf.docker0.forwarding": "0",
  "net.ipv6.conf.docker0.hop_limit": "64",
  "net.ipv6.conf.docker0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.docker0.keep_addr_on_down": "0",
  "net.ipv6.conf.docker0.max_addresses": "16",
  "net.ipv6.conf.docker0.max_desync_factor": "600",
  "net.ipv6.conf.docker0.mc_forwarding": "0",
  "net.ipv6.conf.docker0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.docker0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.docker0.mtu": "1500",
  "net.ipv6.conf.docker0.ndisc_notify": "0",
  "net.ipv6.conf.docker0.ndisc_tclass": "0",
  "net.ipv6.conf.docker0.proxy_ndp": "0",
  "net.ipv6.conf.docker0.regen_max_retry": "3",
  "net.ipv6.conf.docker0.router_probe_interval": "60",
  "net.ipv6.conf.docker0.router_solicitation_delay": "1",
  "net.ipv6.conf.docker0.router_solicitation_interval": "4",
  "net.ipv6.conf.docker0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.docker0.router_solicitations": "-1",
  "net.ipv6.conf.docker0.seg6_enabled": "0",
  "net.ipv6.conf.docker0.seg6_require_hmac": "0",
  "net.ipv6.conf.docker0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.docker0.temp_prefered_lft": "86400",
  "net.ipv6.conf.docker0.temp_valid_lft": "604800",
  "net.ipv6.conf.docker0.use_oif_addrs_only": "0",
  "net.ipv6.conf.docker0.use_tempaddr": "2",
  "net.ipv6.conf.eth0.accept_dad": "1",
  "net.ipv6.conf.eth0.accept_ra": "0",
  "net.ipv6.conf.eth0.accept_ra_defrtr": "1",
  "net.ipv6.conf.eth0.accept_ra_from_local": "0",
  "net.ipv6.conf.eth0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.eth0.accept_ra_mtu": "1",
  "net.ipv6.conf.eth0.accept_ra_pinfo": "1",
  "net.ipv6.conf.eth0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.eth0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.eth0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.eth0.accept_redirects": "1",
  "net.ipv6.conf.eth0.accept_source_route": "0",
  "net.ipv6.conf.eth0.addr_gen_mode": "1",
  "net.ipv6.conf.eth0.autoconf": "1",
  "net.ipv6.conf.eth0.dad_transmits": "1",
  "net.ipv6.conf.eth0.disable_ipv6": "0",
  "net.ipv6.conf.eth0.disable_policy": "0",
  "net.ipv6.conf.eth0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.eth0.drop_unsolicited_na": "0",
  "net.ipv6.conf.eth0.enhanced_dad": "1",
  "net.ipv6.conf.eth0.force_mld_version": "0",
  "net.ipv6.conf.eth0.force_tllao": "0",
  "net.ipv6.conf.eth0.forwarding": "0",
  "net.ipv6.conf.eth0.hop_limit": "64",
  "net.ipv6.conf.eth0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.eth0.keep_addr_on_down": "0",
  "net.ipv6.conf.eth0.max_addresses": "16",
  "net.ipv6.conf.eth0.max_desync_factor": "600",
  "net.ipv6.conf.eth0.mc_forwarding": "0",
  "net.ipv6.conf.eth0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.eth0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.eth0.mtu": "1500",
  "net.ipv6.conf.eth0.ndisc_notify": "0",
  "net.ipv6.conf.eth0.ndisc_tclass": "0",
  "net.ipv6.conf.eth0.proxy_ndp": "0",
  "net.ipv6.conf.eth0.regen_max_retry": "3",
  "net.ipv6.conf.eth0.router_probe_interval": "60",
  "net.ipv6.conf.eth0.router_solicitation_delay": "1",
  "net.ipv6.conf.eth0.router_solicitation_interval": "4",
  "net.ipv6.conf.eth0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.eth0.router_solicitations": "-1",
  "net.ipv6.conf.eth0.seg6_enabled": "0",
  "net.ipv6.conf.eth0.seg6_require_hmac": "0",
  "net.ipv6.conf.eth0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.eth0.temp_prefered_lft": "86400",
  "net.ipv6.conf.eth0.temp_valid_lft": "604800",
  "net.ipv6.conf.eth0.use_oif_addrs_only": "0",
  "net.ipv6.conf.eth0.use_tempaddr": "0",
  "net.ipv6.conf.lo.accept_dad": "-1",
  "net.ipv6.conf.lo.accept_ra": "1",
  "net.ipv6.conf.lo.accept_ra_defrtr": "1",
  "net.ipv6.conf.lo.accept_ra_from_local": "0",
  "net.ipv6.conf.lo.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.lo.accept_ra_mtu": "1",
  "net.ipv6.conf.lo.accept_ra_pinfo": "1",
  "net.ipv6.conf.lo.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.lo.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.lo.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.lo.accept_redirects": "1",
  "net.ipv6.conf.lo.accept_source_route": "0",
  "net.ipv6.conf.lo.addr_gen_mode": "0",
  "net.ipv6.conf.lo.autoconf": "1",
  "net.ipv6.conf.lo.dad_transmits": "1",
  "net.ipv6.conf.lo.disable_ipv6": "0",
  "net.ipv6.conf.lo.disable_policy": "0",
  "net.ipv6.conf.lo.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.lo.drop_unsolicited_na": "0",
  "net.ipv6.conf.lo.enhanced_dad": "1",
  "net.ipv6.conf.lo.force_mld_version": "0",
  "net.ipv6.conf.lo.force_tllao": "0",
  "net.ipv6.conf.lo.forwarding": "0",
  "net.ipv6.conf.lo.hop_limit": "64",
  "net.ipv6.conf.lo.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.lo.keep_addr_on_down": "0",
  "net.ipv6.conf.lo.max_addresses": "16",
  "net.ipv6.conf.lo.max_desync_factor": "600",
  "net.ipv6.conf.lo.mc_forwarding": "0",
  "net.ipv6.conf.lo.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.lo.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.lo.mtu": "65536",
  "net.ipv6.conf.lo.ndisc_notify": "0",
  "net.ipv6.conf.lo.ndisc_tclass": "0",
  "net.ipv6.conf.lo.proxy_ndp": "0",
  "net.ipv6.conf.lo.regen_max_retry": "3",
  "net.ipv6.conf.lo.router_probe_interval": "60",
  "net.ipv6.conf.lo.router_solicitation_delay": "1",
  "net.ipv6.conf.lo.router_solicitation_interval": "4",
  "net.ipv6.conf.lo.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.lo.router_solicitations": "-1",
  "net.ipv6.conf.lo.seg6_enabled": "0",
  "net.ipv6.conf.lo.seg6_require_hmac": "0",
  "net.ipv6.conf.lo.suppress_frag_ndisc": "1",
  "net.ipv6.conf.lo.temp_prefered_lft": "86400",
  "net.ipv6.conf.lo.temp_valid_lft": "604800",
  "net.ipv6.conf.lo.use_oif_addrs_only": "0",
  "net.ipv6.conf.lo.use_tempaddr": "-1",
  "net.ipv6.conf.tun0.accept_dad": "-1",
  "net.ipv6.conf.tun0.accept_ra": "1",
  "net.ipv6.conf.tun0.accept_ra_defrtr": "1",
  "net.ipv6.conf.tun0.accept_ra_from_local": "0",
  "net.ipv6.conf.tun0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.tun0.accept_ra_mtu": "1",
  "net.ipv6.conf.tun0.accept_ra_pinfo": "1",
  "net.ipv6.conf.tun0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.tun0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.tun0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.tun0.accept_redirects": "1",
  "net.ipv6.conf.tun0.accept_source_route": "0",
  "net.ipv6.conf.tun0.addr_gen_mode": "3",
  "net.ipv6.conf.tun0.autoconf": "1",
  "net.ipv6.conf.tun0.dad_transmits": "1",
  "net.ipv6.conf.tun0.disable_ipv6": "0",
  "net.ipv6.conf.tun0.disable_policy": "0",
  "net.ipv6.conf.tun0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.tun0.drop_unsolicited_na": "0",
  "net.ipv6.conf.tun0.enhanced_dad": "1",
  "net.ipv6.conf.tun0.force_mld_version": "0",
  "net.ipv6.conf.tun0.force_tllao": "0",
  "net.ipv6.conf.tun0.forwarding": "0",
  "net.ipv6.conf.tun0.hop_limit": "64",
  "net.ipv6.conf.tun0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.tun0.keep_addr_on_down": "0",
  "net.ipv6.conf.tun0.max_addresses": "16",
  "net.ipv6.conf.tun0.max_desync_factor": "600",
  "net.ipv6.conf.tun0.mc_forwarding": "0",
  "net.ipv6.conf.tun0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.tun0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.tun0.mtu": "1500",
  "net.ipv6.conf.tun0.ndisc_notify": "0",
  "net.ipv6.conf.tun0.ndisc_tclass": "0",
  "net.ipv6.conf.tun0.proxy_ndp": "0",
  "net.ipv6.conf.tun0.regen_max_retry": "3",
  "net.ipv6.conf.tun0.router_probe_interval": "60",
  "net.ipv6.conf.tun0.router_solicitation_delay": "1",
  "net.ipv6.conf.tun0.router_solicitation_interval": "4",
  "net.ipv6.conf.tun0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.tun0.router_solicitations": "-1",
  "net.ipv6.conf.tun0.seg6_enabled": "0",
  "net.ipv6.conf.tun0.seg6_require_hmac": "0",
  "net.ipv6.conf.tun0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.tun0.temp_prefered_lft": "86400",
  "net.ipv6.conf.tun0.temp_valid_lft": "604800",
  "net.ipv6.conf.tun0.use_oif_addrs_only": "0",
  "net.ipv6.conf.tun0.use_tempaddr": "-1",
  "net.ipv6.conf.vboxnet0.accept_dad": "1",
  "net.ipv6.conf.vboxnet0.accept_ra": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet0.accept_redirects": "1",
  "net.ipv6.conf.vboxnet0.accept_source_route": "0",
  "net.ipv6.conf.vboxnet0.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet0.autoconf": "1",
  "net.ipv6.conf.vboxnet0.dad_transmits": "1",
  "net.ipv6.conf.vboxnet0.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet0.disable_policy": "0",
  "net.ipv6.conf.vboxnet0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet0.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet0.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet0.force_mld_version": "0",
  "net.ipv6.conf.vboxnet0.force_tllao": "0",
  "net.ipv6.conf.vboxnet0.forwarding": "0",
  "net.ipv6.conf.vboxnet0.hop_limit": "64",
  "net.ipv6.conf.vboxnet0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet0.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet0.max_addresses": "16",
  "net.ipv6.conf.vboxnet0.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet0.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet0.mtu": "1500",
  "net.ipv6.conf.vboxnet0.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet0.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet0.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet0.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet0.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet0.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet0.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet0.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet0.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet0.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet0.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet0.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet0.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet0.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet1.accept_dad": "1",
  "net.ipv6.conf.vboxnet1.accept_ra": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet1.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet1.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet1.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet1.accept_redirects": "1",
  "net.ipv6.conf.vboxnet1.accept_source_route": "0",
  "net.ipv6.conf.vboxnet1.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet1.autoconf": "1",
  "net.ipv6.conf.vboxnet1.dad_transmits": "1",
  "net.ipv6.conf.vboxnet1.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet1.disable_policy": "0",
  "net.ipv6.conf.vboxnet1.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet1.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet1.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet1.force_mld_version": "0",
  "net.ipv6.conf.vboxnet1.force_tllao": "0",
  "net.ipv6.conf.vboxnet1.forwarding": "0",
  "net.ipv6.conf.vboxnet1.hop_limit": "64",
  "net.ipv6.conf.vboxnet1.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet1.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet1.max_addresses": "16",
  "net.ipv6.conf.vboxnet1.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet1.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet1.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet1.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet1.mtu": "1500",
  "net.ipv6.conf.vboxnet1.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet1.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet1.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet1.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet1.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet1.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet1.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet1.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet1.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet1.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet1.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet1.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet1.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet1.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet1.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet1.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet10.accept_dad": "1",
  "net.ipv6.conf.vboxnet10.accept_ra": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet10.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet10.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet10.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet10.accept_redirects": "1",
  "net.ipv6.conf.vboxnet10.accept_source_route": "0",
  "net.ipv6.conf.vboxnet10.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet10.autoconf": "1",
  "net.ipv6.conf.vboxnet10.dad_transmits": "1",
  "net.ipv6.conf.vboxnet10.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet10.disable_policy": "0",
  "net.ipv6.conf.vboxnet10.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet10.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet10.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet10.force_mld_version": "0",
  "net.ipv6.conf.vboxnet10.force_tllao": "0",
  "net.ipv6.conf.vboxnet10.forwarding": "0",
  "net.ipv6.conf.vboxnet10.hop_limit": "64",
  "net.ipv6.conf.vboxnet10.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet10.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet10.max_addresses": "16",
  "net.ipv6.conf.vboxnet10.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet10.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet10.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet10.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet10.mtu": "1500",
  "net.ipv6.conf.vboxnet10.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet10.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet10.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet10.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet10.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet10.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet10.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet10.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet10.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet10.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet10.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet10.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet10.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet10.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet10.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet10.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet11.accept_dad": "1",
  "net.ipv6.conf.vboxnet11.accept_ra": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet11.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet11.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet11.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet11.accept_redirects": "1",
  "net.ipv6.conf.vboxnet11.accept_source_route": "0",
  "net.ipv6.conf.vboxnet11.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet11.autoconf": "1",
  "net.ipv6.conf.vboxnet11.dad_transmits": "1",
  "net.ipv6.conf.vboxnet11.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet11.disable_policy": "0",
  "net.ipv6.conf.vboxnet11.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet11.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet11.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet11.force_mld_version": "0",
  "net.ipv6.conf.vboxnet11.force_tllao": "0",
  "net.ipv6.conf.vboxnet11.forwarding": "0",
  "net.ipv6.conf.vboxnet11.hop_limit": "64",
  "net.ipv6.conf.vboxnet11.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet11.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet11.max_addresses": "16",
  "net.ipv6.conf.vboxnet11.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet11.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet11.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet11.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet11.mtu": "1500",
  "net.ipv6.conf.vboxnet11.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet11.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet11.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet11.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet11.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet11.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet11.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet11.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet11.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet11.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet11.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet11.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet11.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet11.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet11.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet11.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet12.accept_dad": "1",
  "net.ipv6.conf.vboxnet12.accept_ra": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet12.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet12.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet12.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet12.accept_redirects": "1",
  "net.ipv6.conf.vboxnet12.accept_source_route": "0",
  "net.ipv6.conf.vboxnet12.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet12.autoconf": "1",
  "net.ipv6.conf.vboxnet12.dad_transmits": "1",
  "net.ipv6.conf.vboxnet12.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet12.disable_policy": "0",
  "net.ipv6.conf.vboxnet12.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet12.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet12.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet12.force_mld_version": "0",
  "net.ipv6.conf.vboxnet12.force_tllao": "0",
  "net.ipv6.conf.vboxnet12.forwarding": "0",
  "net.ipv6.conf.vboxnet12.hop_limit": "64",
  "net.ipv6.conf.vboxnet12.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet12.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet12.max_addresses": "16",
  "net.ipv6.conf.vboxnet12.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet12.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet12.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet12.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet12.mtu": "1500",
  "net.ipv6.conf.vboxnet12.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet12.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet12.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet12.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet12.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet12.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet12.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet12.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet12.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet12.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet12.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet12.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet12.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet12.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet12.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet12.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet13.accept_dad": "1",
  "net.ipv6.conf.vboxnet13.accept_ra": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet13.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet13.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet13.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet13.accept_redirects": "1",
  "net.ipv6.conf.vboxnet13.accept_source_route": "0",
  "net.ipv6.conf.vboxnet13.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet13.autoconf": "1",
  "net.ipv6.conf.vboxnet13.dad_transmits": "1",
  "net.ipv6.conf.vboxnet13.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet13.disable_policy": "0",
  "net.ipv6.conf.vboxnet13.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet13.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet13.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet13.force_mld_version": "0",
  "net.ipv6.conf.vboxnet13.force_tllao": "0",
  "net.ipv6.conf.vboxnet13.forwarding": "0",
  "net.ipv6.conf.vboxnet13.hop_limit": "64",
  "net.ipv6.conf.vboxnet13.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet13.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet13.max_addresses": "16",
  "net.ipv6.conf.vboxnet13.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet13.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet13.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet13.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet13.mtu": "1500",
  "net.ipv6.conf.vboxnet13.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet13.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet13.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet13.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet13.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet13.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet13.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet13.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet13.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet13.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet13.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet13.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet13.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet13.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet13.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet13.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet2.accept_dad": "1",
  "net.ipv6.conf.vboxnet2.accept_ra": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet2.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet2.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet2.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet2.accept_redirects": "1",
  "net.ipv6.conf.vboxnet2.accept_source_route": "0",
  "net.ipv6.conf.vboxnet2.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet2.autoconf": "1",
  "net.ipv6.conf.vboxnet2.dad_transmits": "1",
  "net.ipv6.conf.vboxnet2.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet2.disable_policy": "0",
  "net.ipv6.conf.vboxnet2.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet2.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet2.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet2.force_mld_version": "0",
  "net.ipv6.conf.vboxnet2.force_tllao": "0",
  "net.ipv6.conf.vboxnet2.forwarding": "0",
  "net.ipv6.conf.vboxnet2.hop_limit": "64",
  "net.ipv6.conf.vboxnet2.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet2.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet2.max_addresses": "16",
  "net.ipv6.conf.vboxnet2.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet2.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet2.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet2.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet2.mtu": "1500",
  "net.ipv6.conf.vboxnet2.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet2.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet2.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet2.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet2.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet2.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet2.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet2.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet2.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet2.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet2.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet2.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet2.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet2.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet2.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet2.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet3.accept_dad": "1",
  "net.ipv6.conf.vboxnet3.accept_ra": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet3.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet3.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet3.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet3.accept_redirects": "1",
  "net.ipv6.conf.vboxnet3.accept_source_route": "0",
  "net.ipv6.conf.vboxnet3.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet3.autoconf": "1",
  "net.ipv6.conf.vboxnet3.dad_transmits": "1",
  "net.ipv6.conf.vboxnet3.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet3.disable_policy": "0",
  "net.ipv6.conf.vboxnet3.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet3.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet3.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet3.force_mld_version": "0",
  "net.ipv6.conf.vboxnet3.force_tllao": "0",
  "net.ipv6.conf.vboxnet3.forwarding": "0",
  "net.ipv6.conf.vboxnet3.hop_limit": "64",
  "net.ipv6.conf.vboxnet3.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet3.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet3.max_addresses": "16",
  "net.ipv6.conf.vboxnet3.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet3.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet3.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet3.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet3.mtu": "1500",
  "net.ipv6.conf.vboxnet3.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet3.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet3.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet3.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet3.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet3.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet3.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet3.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet3.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet3.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet3.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet3.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet3.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet3.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet3.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet3.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet4.accept_dad": "1",
  "net.ipv6.conf.vboxnet4.accept_ra": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet4.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet4.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet4.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet4.accept_redirects": "1",
  "net.ipv6.conf.vboxnet4.accept_source_route": "0",
  "net.ipv6.conf.vboxnet4.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet4.autoconf": "1",
  "net.ipv6.conf.vboxnet4.dad_transmits": "1",
  "net.ipv6.conf.vboxnet4.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet4.disable_policy": "0",
  "net.ipv6.conf.vboxnet4.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet4.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet4.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet4.force_mld_version": "0",
  "net.ipv6.conf.vboxnet4.force_tllao": "0",
  "net.ipv6.conf.vboxnet4.forwarding": "0",
  "net.ipv6.conf.vboxnet4.hop_limit": "64",
  "net.ipv6.conf.vboxnet4.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet4.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet4.max_addresses": "16",
  "net.ipv6.conf.vboxnet4.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet4.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet4.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet4.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet4.mtu": "1500",
  "net.ipv6.conf.vboxnet4.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet4.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet4.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet4.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet4.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet4.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet4.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet4.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet4.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet4.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet4.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet4.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet4.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet4.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet4.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet4.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet5.accept_dad": "1",
  "net.ipv6.conf.vboxnet5.accept_ra": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet5.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet5.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet5.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet5.accept_redirects": "1",
  "net.ipv6.conf.vboxnet5.accept_source_route": "0",
  "net.ipv6.conf.vboxnet5.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet5.autoconf": "1",
  "net.ipv6.conf.vboxnet5.dad_transmits": "1",
  "net.ipv6.conf.vboxnet5.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet5.disable_policy": "0",
  "net.ipv6.conf.vboxnet5.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet5.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet5.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet5.force_mld_version": "0",
  "net.ipv6.conf.vboxnet5.force_tllao": "0",
  "net.ipv6.conf.vboxnet5.forwarding": "0",
  "net.ipv6.conf.vboxnet5.hop_limit": "64",
  "net.ipv6.conf.vboxnet5.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet5.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet5.max_addresses": "16",
  "net.ipv6.conf.vboxnet5.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet5.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet5.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet5.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet5.mtu": "1500",
  "net.ipv6.conf.vboxnet5.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet5.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet5.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet5.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet5.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet5.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet5.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet5.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet5.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet5.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet5.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet5.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet5.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet5.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet5.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet5.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet6.accept_dad": "1",
  "net.ipv6.conf.vboxnet6.accept_ra": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet6.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet6.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet6.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet6.accept_redirects": "1",
  "net.ipv6.conf.vboxnet6.accept_source_route": "0",
  "net.ipv6.conf.vboxnet6.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet6.autoconf": "1",
  "net.ipv6.conf.vboxnet6.dad_transmits": "1",
  "net.ipv6.conf.vboxnet6.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet6.disable_policy": "0",
  "net.ipv6.conf.vboxnet6.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet6.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet6.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet6.force_mld_version": "0",
  "net.ipv6.conf.vboxnet6.force_tllao": "0",
  "net.ipv6.conf.vboxnet6.forwarding": "0",
  "net.ipv6.conf.vboxnet6.hop_limit": "64",
  "net.ipv6.conf.vboxnet6.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet6.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet6.max_addresses": "16",
  "net.ipv6.conf.vboxnet6.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet6.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet6.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet6.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet6.mtu": "1500",
  "net.ipv6.conf.vboxnet6.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet6.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet6.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet6.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet6.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet6.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet6.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet6.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet6.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet6.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet6.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet6.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet6.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet6.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet6.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet6.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet7.accept_dad": "1",
  "net.ipv6.conf.vboxnet7.accept_ra": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet7.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet7.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet7.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet7.accept_redirects": "1",
  "net.ipv6.conf.vboxnet7.accept_source_route": "0",
  "net.ipv6.conf.vboxnet7.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet7.autoconf": "1",
  "net.ipv6.conf.vboxnet7.dad_transmits": "1",
  "net.ipv6.conf.vboxnet7.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet7.disable_policy": "0",
  "net.ipv6.conf.vboxnet7.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet7.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet7.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet7.force_mld_version": "0",
  "net.ipv6.conf.vboxnet7.force_tllao": "0",
  "net.ipv6.conf.vboxnet7.forwarding": "0",
  "net.ipv6.conf.vboxnet7.hop_limit": "64",
  "net.ipv6.conf.vboxnet7.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet7.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet7.max_addresses": "16",
  "net.ipv6.conf.vboxnet7.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet7.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet7.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet7.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet7.mtu": "1500",
  "net.ipv6.conf.vboxnet7.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet7.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet7.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet7.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet7.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet7.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet7.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet7.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet7.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet7.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet7.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet7.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet7.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet7.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet7.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet7.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet8.accept_dad": "1",
  "net.ipv6.conf.vboxnet8.accept_ra": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet8.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet8.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet8.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet8.accept_redirects": "1",
  "net.ipv6.conf.vboxnet8.accept_source_route": "0",
  "net.ipv6.conf.vboxnet8.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet8.autoconf": "1",
  "net.ipv6.conf.vboxnet8.dad_transmits": "1",
  "net.ipv6.conf.vboxnet8.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet8.disable_policy": "0",
  "net.ipv6.conf.vboxnet8.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet8.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet8.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet8.force_mld_version": "0",
  "net.ipv6.conf.vboxnet8.force_tllao": "0",
  "net.ipv6.conf.vboxnet8.forwarding": "0",
  "net.ipv6.conf.vboxnet8.hop_limit": "64",
  "net.ipv6.conf.vboxnet8.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet8.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet8.max_addresses": "16",
  "net.ipv6.conf.vboxnet8.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet8.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet8.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet8.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet8.mtu": "1500",
  "net.ipv6.conf.vboxnet8.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet8.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet8.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet8.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet8.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet8.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet8.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet8.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet8.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet8.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet8.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet8.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet8.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet8.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet8.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet8.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet9.accept_dad": "1",
  "net.ipv6.conf.vboxnet9.accept_ra": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet9.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet9.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet9.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet9.accept_redirects": "1",
  "net.ipv6.conf.vboxnet9.accept_source_route": "0",
  "net.ipv6.conf.vboxnet9.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet9.autoconf": "1",
  "net.ipv6.conf.vboxnet9.dad_transmits": "1",
  "net.ipv6.conf.vboxnet9.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet9.disable_policy": "0",
  "net.ipv6.conf.vboxnet9.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet9.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet9.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet9.force_mld_version": "0",
  "net.ipv6.conf.vboxnet9.force_tllao": "0",
  "net.ipv6.conf.vboxnet9.forwarding": "0",
  "net.ipv6.conf.vboxnet9.hop_limit": "64",
  "net.ipv6.conf.vboxnet9.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet9.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet9.max_addresses": "16",
  "net.ipv6.conf.vboxnet9.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet9.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet9.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet9.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet9.mtu": "1500",
  "net.ipv6.conf.vboxnet9.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet9.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet9.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet9.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet9.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet9.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet9.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet9.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet9.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet9.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet9.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet9.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet9.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet9.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet9.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet9.use_tempaddr": "2",
  "net.ipv6.conf.virbr0-nic.accept_dad": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_defrtr": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_from_local": "0",
  "net.ipv6.conf.virbr0-nic.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_mtu": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_pinfo": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.virbr0-nic.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.virbr0-nic.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.virbr0-nic.accept_redirects": "1",
  "net.ipv6.conf.virbr0-nic.accept_source_route": "0",
  "net.ipv6.conf.virbr0-nic.addr_gen_mode": "0",
  "net.ipv6.conf.virbr0-nic.autoconf": "1",
  "net.ipv6.conf.virbr0-nic.dad_transmits": "1",
  "net.ipv6.conf.virbr0-nic.disable_ipv6": "0",
  "net.ipv6.conf.virbr0-nic.disable_policy": "0",
  "net.ipv6.conf.virbr0-nic.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.virbr0-nic.drop_unsolicited_na": "0",
  "net.ipv6.conf.virbr0-nic.enhanced_dad": "1",
  "net.ipv6.conf.virbr0-nic.force_mld_version": "0",
  "net.ipv6.conf.virbr0-nic.force_tllao": "0",
  "net.ipv6.conf.virbr0-nic.forwarding": "0",
  "net.ipv6.conf.virbr0-nic.hop_limit": "64",
  "net.ipv6.conf.virbr0-nic.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.virbr0-nic.keep_addr_on_down": "0",
  "net.ipv6.conf.virbr0-nic.max_addresses": "16",
  "net.ipv6.conf.virbr0-nic.max_desync_factor": "600",
  "net.ipv6.conf.virbr0-nic.mc_forwarding": "0",
  "net.ipv6.conf.virbr0-nic.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.virbr0-nic.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.virbr0-nic.mtu": "1500",
  "net.ipv6.conf.virbr0-nic.ndisc_notify": "0",
  "net.ipv6.conf.virbr0-nic.ndisc_tclass": "0",
  "net.ipv6.conf.virbr0-nic.proxy_ndp": "0",
  "net.ipv6.conf.virbr0-nic.regen_max_retry": "3",
  "net.ipv6.conf.virbr0-nic.router_probe_interval": "60",
  "net.ipv6.conf.virbr0-nic.router_solicitation_delay": "1",
  "net.ipv6.conf.virbr0-nic.router_solicitation_interval": "4",
  "net.ipv6.conf.virbr0-nic.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.virbr0-nic.router_solicitations": "-1",
  "net.ipv6.conf.virbr0-nic.seg6_enabled": "0",
  "net.ipv6.conf.virbr0-nic.seg6_require_hmac": "0",
  "net.ipv6.conf.virbr0-nic.suppress_frag_ndisc": "1",
  "net.ipv6.conf.virbr0-nic.temp_prefered_lft": "86400",
  "net.ipv6.conf.virbr0-nic.temp_valid_lft": "604800",
  "net.ipv6.conf.virbr0-nic.use_oif_addrs_only": "0",
  "net.ipv6.conf.virbr0-nic.use_tempaddr": "2",
  "net.ipv6.conf.virbr0.accept_dad": "1",
  "net.ipv6.conf.virbr0.accept_ra": "0",
  "net.ipv6.conf.virbr0.accept_ra_defrtr": "1",
  "net.ipv6.conf.virbr0.accept_ra_from_local": "0",
  "net.ipv6.conf.virbr0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.virbr0.accept_ra_mtu": "1",
  "net.ipv6.conf.virbr0.accept_ra_pinfo": "1",
  "net.ipv6.conf.virbr0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.virbr0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.virbr0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.virbr0.accept_redirects": "1",
  "net.ipv6.conf.virbr0.accept_source_route": "0",
  "net.ipv6.conf.virbr0.addr_gen_mode": "0",
  "net.ipv6.conf.virbr0.autoconf": "0",
  "net.ipv6.conf.virbr0.dad_transmits": "1",
  "net.ipv6.conf.virbr0.disable_ipv6": "1",
  "net.ipv6.conf.virbr0.disable_policy": "0",
  "net.ipv6.conf.virbr0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.virbr0.drop_unsolicited_na": "0",
  "net.ipv6.conf.virbr0.enhanced_dad": "1",
  "net.ipv6.conf.virbr0.force_mld_version": "0",
  "net.ipv6.conf.virbr0.force_tllao": "0",
  "net.ipv6.conf.virbr0.forwarding": "0",
  "net.ipv6.conf.virbr0.hop_limit": "64",
  "net.ipv6.conf.virbr0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.virbr0.keep_addr_on_down": "0",
  "net.ipv6.conf.virbr0.max_addresses": "16",
  "net.ipv6.conf.virbr0.max_desync_factor": "600",
  "net.ipv6.conf.virbr0.mc_forwarding": "0",
  "net.ipv6.conf.virbr0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.virbr0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.virbr0.mtu": "1500",
  "net.ipv6.conf.virbr0.ndisc_notify": "0",
  "net.ipv6.conf.virbr0.ndisc_tclass": "0",
  "net.ipv6.conf.virbr0.proxy_ndp": "0",
  "net.ipv6.conf.virbr0.regen_max_retry": "3",
  "net.ipv6.conf.virbr0.router_probe_interval": "60",
  "net.ipv6.conf.virbr0.router_solicitation_delay": "1",
  "net.ipv6.conf.virbr0.router_solicitation_interval": "4",
  "net.ipv6.conf.virbr0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.virbr0.router_solicitations": "-1",
  "net.ipv6.conf.virbr0.seg6_enabled": "0",
  "net.ipv6.conf.virbr0.seg6_require_hmac": "0",
  "net.ipv6.conf.virbr0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.virbr0.temp_prefered_lft": "86400",
  "net.ipv6.conf.virbr0.temp_valid_lft": "604800",
  "net.ipv6.conf.virbr0.use_oif_addrs_only": "0",
  "net.ipv6.conf.virbr0.use_tempaddr": "2",
  "net.ipv6.conf.wlan0.accept_dad": "1",
  "net.ipv6.conf.wlan0.accept_ra": "0",
  "net.ipv6.conf.wlan0.accept_ra_defrtr": "1",
  "net.ipv6.conf.wlan0.accept_ra_from_local": "0",
  "net.ipv6.conf.wlan0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.wlan0.accept_ra_mtu": "1",
  "net.ipv6.conf.wlan0.accept_ra_pinfo": "1",
  "net.ipv6.conf.wlan0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.wlan0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.wlan0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.wlan0.accept_redirects": "1",
  "net.ipv6.conf.wlan0.accept_source_route": "0",
  "net.ipv6.conf.wlan0.addr_gen_mode": "1",
  "net.ipv6.conf.wlan0.autoconf": "1",
  "net.ipv6.conf.wlan0.dad_transmits": "1",
  "net.ipv6.conf.wlan0.disable_ipv6": "0",
  "net.ipv6.conf.wlan0.disable_policy": "0",
  "net.ipv6.conf.wlan0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.wlan0.drop_unsolicited_na": "0",
  "net.ipv6.conf.wlan0.enhanced_dad": "1",
  "net.ipv6.conf.wlan0.force_mld_version": "0",
  "net.ipv6.conf.wlan0.force_tllao": "0",
  "net.ipv6.conf.wlan0.forwarding": "0",
  "net.ipv6.conf.wlan0.hop_limit": "64",
  "net.ipv6.conf.wlan0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.wlan0.keep_addr_on_down": "0",
  "net.ipv6.conf.wlan0.max_addresses": "16",
  "net.ipv6.conf.wlan0.max_desync_factor": "600",
  "net.ipv6.conf.wlan0.mc_forwarding": "0",
  "net.ipv6.conf.wlan0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.wlan0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.wlan0.mtu": "1500",
  "net.ipv6.conf.wlan0.ndisc_notify": "0",
  "net.ipv6.conf.wlan0.ndisc_tclass": "0",
  "net.ipv6.conf.wlan0.proxy_ndp": "0",
  "net.ipv6.conf.wlan0.regen_max_retry": "3",
  "net.ipv6.conf.wlan0.router_probe_interval": "60",
  "net.ipv6.conf.wlan0.router_solicitation_delay": "1",
  "net.ipv6.conf.wlan0.router_solicitation_interval": "4",
  "net.ipv6.conf.wlan0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.wlan0.router_solicitations": "-1",
  "net.ipv6.conf.wlan0.seg6_enabled": "0",
  "net.ipv6.conf.wlan0.seg6_require_hmac": "0",
  "net.ipv6.conf.wlan0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.wlan0.temp_prefered_lft": "86400",
  "net.ipv6.conf.wlan0.temp_valid_lft": "604800",
  "net.ipv6.conf.wlan0.use_oif_addrs_only": "0",
  "net.ipv6.conf.wlan0.use_tempaddr": "2",
  "net.ipv6.fib_multipath_hash_policy": "0",
  "net.ipv6.flowlabel_consistency": "1",
  "net.ipv6.flowlabel_reflect": "0",
  "net.ipv6.flowlabel_state_ranges": "0",
  "net.ipv6.fwmark_reflect": "0",
  "net.ipv6.icmp.echo_ignore_all": "0",
  "net.ipv6.icmp.echo_ignore_anycast": "0",
  "net.ipv6.icmp.echo_ignore_multicast": "0",
  "net.ipv6.icmp.ratelimit": "1000",
  "net.ipv6.icmp.ratemask": "0-1,3-127",
  "net.ipv6.idgen_delay": "1",
  "net.ipv6.idgen_retries": "3",
  "net.ipv6.ip6frag_high_thresh": "4194304",
  "net.ipv6.ip6frag_low_thresh": "3145728",
  "net.ipv6.ip6frag_secret_interval": "0",
  "net.ipv6.ip6frag_time": "60",
  "net.ipv6.ip_nonlocal_bind": "0",
  "net.ipv6.max_dst_opts_length": "2147483647",
  "net.ipv6.max_dst_opts_number": "8",
  "net.ipv6.max_hbh_length": "2147483647",
  "net.ipv6.max_hbh_opts_number": "8",
  "net.ipv6.mld_max_msf": "64",
  "net.ipv6.mld_qrv": "2",
  "net.ipv6.neigh.default.anycast_delay": "100",
  "net.ipv6.neigh.default.app_solicit": "0",
  "net.ipv6.neigh.default.base_reachable_time": "30",
  "net.ipv6.neigh.default.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.default.delay_first_probe_time": "5",
  "net.ipv6.neigh.default.gc_interval": "30",
  "net.ipv6.neigh.default.gc_stale_time": "60",
  "net.ipv6.neigh.default.gc_thresh1": "128",
  "net.ipv6.neigh.default.gc_thresh2": "512",
  "net.ipv6.neigh.default.gc_thresh3": "1024",
  "net.ipv6.neigh.default.locktime": "0",
  "net.ipv6.neigh.default.mcast_resolicit": "0",
  "net.ipv6.neigh.default.mcast_solicit": "3",
  "net.ipv6.neigh.default.proxy_delay": "80",
  "net.ipv6.neigh.default.proxy_qlen": "64",
  "net.ipv6.neigh.default.retrans_time": "1000",
  "net.ipv6.neigh.default.retrans_time_ms": "1000",
  "net.ipv6.neigh.default.ucast_solicit": "3",
  "net.ipv6.neigh.default.unres_qlen": "101",
  "net.ipv6.neigh.default.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.docker0.anycast_delay": "100",
  "net.ipv6.neigh.docker0.app_solicit": "0",
  "net.ipv6.neigh.docker0.base_reachable_time": "30",
  "net.ipv6.neigh.docker0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.docker0.delay_first_probe_time": "5",
  "net.ipv6.neigh.docker0.gc_stale_time": "60",
  "net.ipv6.neigh.docker0.locktime": "0",
  "net.ipv6.neigh.docker0.mcast_resolicit": "0",
  "net.ipv6.neigh.docker0.mcast_solicit": "3",
  "net.ipv6.neigh.docker0.proxy_delay": "80",
  "net.ipv6.neigh.docker0.proxy_qlen": "64",
  "net.ipv6.neigh.docker0.retrans_time": "1000",
  "net.ipv6.neigh.docker0.retrans_time_ms": "1000",
  "net.ipv6.neigh.docker0.ucast_solicit": "3",
  "net.ipv6.neigh.docker0.unres_qlen": "101",
  "net.ipv6.neigh.docker0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.eth0.anycast_delay": "100",
  "net.ipv6.neigh.eth0.app_solicit": "0",
  "net.ipv6.neigh.eth0.base_reachable_time": "30",
  "net.ipv6.neigh.eth0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.eth0.delay_first_probe_time": "5",
  "net.ipv6.neigh.eth0.gc_stale_time": "60",
  "net.ipv6.neigh.eth0.locktime": "0",
  "net.ipv6.neigh.eth0.mcast_resolicit": "0",
  "net.ipv6.neigh.eth0.mcast_solicit": "3",
  "net.ipv6.neigh.eth0.proxy_delay": "80",
  "net.ipv6.neigh.eth0.proxy_qlen": "64",
  "net.ipv6.neigh.eth0.retrans_time": "1000",
  "net.ipv6.neigh.eth0.retrans_time_ms": "1000",
  "net.ipv6.neigh.eth0.ucast_solicit": "3",
  "net.ipv6.neigh.eth0.unres_qlen": "101",
  "net.ipv6.neigh.eth0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.lo.anycast_delay": "100",
  "net.ipv6.neigh.lo.app_solicit": "0",
  "net.ipv6.neigh.lo.base_reachable_time": "30",
  "net.ipv6.neigh.lo.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.lo.delay_first_probe_time": "5",
  "net.ipv6.neigh.lo.gc_stale_time": "60",
  "net.ipv6.neigh.lo.locktime": "0",
  "net.ipv6.neigh.lo.mcast_resolicit": "0",
  "net.ipv6.neigh.lo.mcast_solicit": "3",
  "net.ipv6.neigh.lo.proxy_delay": "80",
  "net.ipv6.neigh.lo.proxy_qlen": "64",
  "net.ipv6.neigh.lo.retrans_time": "1000",
  "net.ipv6.neigh.lo.retrans_time_ms": "1000",
  "net.ipv6.neigh.lo.ucast_solicit": "3",
  "net.ipv6.neigh.lo.unres_qlen": "101",
  "net.ipv6.neigh.lo.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.tun0.anycast_delay": "100",
  "net.ipv6.neigh.tun0.app_solicit": "0",
  "net.ipv6.neigh.tun0.base_reachable_time": "30",
  "net.ipv6.neigh.tun0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.tun0.delay_first_probe_time": "5",
  "net.ipv6.neigh.tun0.gc_stale_time": "60",
  "net.ipv6.neigh.tun0.locktime": "0",
  "net.ipv6.neigh.tun0.mcast_resolicit": "0",
  "net.ipv6.neigh.tun0.mcast_solicit": "3",
  "net.ipv6.neigh.tun0.proxy_delay": "80",
  "net.ipv6.neigh.tun0.proxy_qlen": "64",
  "net.ipv6.neigh.tun0.retrans_time": "1000",
  "net.ipv6.neigh.tun0.retrans_time_ms": "1000",
  "net.ipv6.neigh.tun0.ucast_solicit": "3",
  "net.ipv6.neigh.tun0.unres_qlen": "101",
  "net.ipv6.neigh.tun0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet0.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet0.app_solicit": "0",
  "net.ipv6.neigh.vboxnet0.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet0.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet0.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet0.locktime": "0",
  "net.ipv6.neigh.vboxnet0.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet0.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet0.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet0.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet0.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet0.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet0.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet0.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet1.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet1.app_solicit": "0",
  "net.ipv6.neigh.vboxnet1.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet1.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet1.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet1.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet1.locktime": "0",
  "net.ipv6.neigh.vboxnet1.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet1.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet1.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet1.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet1.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet1.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet1.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet1.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet1.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet10.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet10.app_solicit": "0",
  "net.ipv6.neigh.vboxnet10.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet10.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet10.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet10.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet10.locktime": "0",
  "net.ipv6.neigh.vboxnet10.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet10.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet10.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet10.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet10.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet10.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet10.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet10.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet10.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet11.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet11.app_solicit": "0",
  "net.ipv6.neigh.vboxnet11.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet11.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet11.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet11.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet11.locktime": "0",
  "net.ipv6.neigh.vboxnet11.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet11.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet11.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet11.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet11.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet11.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet11.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet11.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet11.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet12.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet12.app_solicit": "0",
  "net.ipv6.neigh.vboxnet12.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet12.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet12.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet12.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet12.locktime": "0",
  "net.ipv6.neigh.vboxnet12.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet12.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet12.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet12.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet12.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet12.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet12.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet12.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet12.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet13.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet13.app_solicit": "0",
  "net.ipv6.neigh.vboxnet13.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet13.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet13.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet13.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet13.locktime": "0",
  "net.ipv6.neigh.vboxnet13.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet13.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet13.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet13.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet13.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet13.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet13.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet13.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet13.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet2.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet2.app_solicit": "0",
  "net.ipv6.neigh.vboxnet2.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet2.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet2.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet2.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet2.locktime": "0",
  "net.ipv6.neigh.vboxnet2.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet2.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet2.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet2.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet2.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet2.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet2.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet2.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet2.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet3.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet3.app_solicit": "0",
  "net.ipv6.neigh.vboxnet3.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet3.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet3.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet3.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet3.locktime": "0",
  "net.ipv6.neigh.vboxnet3.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet3.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet3.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet3.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet3.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet3.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet3.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet3.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet3.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet4.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet4.app_solicit": "0",
  "net.ipv6.neigh.vboxnet4.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet4.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet4.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet4.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet4.locktime": "0",
  "net.ipv6.neigh.vboxnet4.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet4.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet4.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet4.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet4.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet4.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet4.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet4.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet4.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet5.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet5.app_solicit": "0",
  "net.ipv6.neigh.vboxnet5.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet5.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet5.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet5.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet5.locktime": "0",
  "net.ipv6.neigh.vboxnet5.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet5.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet5.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet5.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet5.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet5.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet5.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet5.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet5.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet6.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet6.app_solicit": "0",
  "net.ipv6.neigh.vboxnet6.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet6.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet6.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet6.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet6.locktime": "0",
  "net.ipv6.neigh.vboxnet6.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet6.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet6.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet6.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet6.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet6.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet6.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet6.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet6.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet7.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet7.app_solicit": "0",
  "net.ipv6.neigh.vboxnet7.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet7.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet7.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet7.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet7.locktime": "0",
  "net.ipv6.neigh.vboxnet7.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet7.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet7.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet7.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet7.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet7.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet7.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet7.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet7.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet8.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet8.app_solicit": "0",
  "net.ipv6.neigh.vboxnet8.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet8.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet8.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet8.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet8.locktime": "0",
  "net.ipv6.neigh.vboxnet8.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet8.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet8.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet8.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet8.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet8.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet8.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet8.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet8.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet9.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet9.app_solicit": "0",
  "net.ipv6.neigh.vboxnet9.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet9.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet9.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet9.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet9.locktime": "0",
  "net.ipv6.neigh.vboxnet9.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet9.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet9.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet9.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet9.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet9.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet9.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet9.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet9.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.virbr0-nic.anycast_delay": "100",
  "net.ipv6.neigh.virbr0-nic.app_solicit": "0",
  "net.ipv6.neigh.virbr0-nic.base_reachable_time": "30",
  "net.ipv6.neigh.virbr0-nic.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.virbr0-nic.delay_first_probe_time": "5",
  "net.ipv6.neigh.virbr0-nic.gc_stale_time": "60",
  "net.ipv6.neigh.virbr0-nic.locktime": "0",
  "net.ipv6.neigh.virbr0-nic.mcast_resolicit": "0",
  "net.ipv6.neigh.virbr0-nic.mcast_solicit": "3",
  "net.ipv6.neigh.virbr0-nic.proxy_delay": "80",
  "net.ipv6.neigh.virbr0-nic.proxy_qlen": "64",
  "net.ipv6.neigh.virbr0-nic.retrans_time": "1000",
  "net.ipv6.neigh.virbr0-nic.retrans_time_ms": "1000",
  "net.ipv6.neigh.virbr0-nic.ucast_solicit": "3",
  "net.ipv6.neigh.virbr0-nic.unres_qlen": "101",
  "net.ipv6.neigh.virbr0-nic.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.virbr0.anycast_delay": "100",
  "net.ipv6.neigh.virbr0.app_solicit": "0",
  "net.ipv6.neigh.virbr0.base_reachable_time": "30",
  "net.ipv6.neigh.virbr0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.virbr0.delay_first_probe_time": "5",
  "net.ipv6.neigh.virbr0.gc_stale_time": "60",
  "net.ipv6.neigh.virbr0.locktime": "0",
  "net.ipv6.neigh.virbr0.mcast_resolicit": "0",
  "net.ipv6.neigh.virbr0.mcast_solicit": "3",
  "net.ipv6.neigh.virbr0.proxy_delay": "80",
  "net.ipv6.neigh.virbr0.proxy_qlen": "64",
  "net.ipv6.neigh.virbr0.retrans_time": "1000",
  "net.ipv6.neigh.virbr0.retrans_time_ms": "1000",
  "net.ipv6.neigh.virbr0.ucast_solicit": "3",
  "net.ipv6.neigh.virbr0.unres_qlen": "101",
  "net.ipv6.neigh.virbr0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.wlan0.anycast_delay": "100",
  "net.ipv6.neigh.wlan0.app_solicit": "0",
  "net.ipv6.neigh.wlan0.base_reachable_time": "30",
  "net.ipv6.neigh.wlan0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.wlan0.delay_first_probe_time": "5",
  "net.ipv6.neigh.wlan0.gc_stale_time": "60",
  "net.ipv6.neigh.wlan0.locktime": "0",
  "net.ipv6.neigh.wlan0.mcast_resolicit": "0",
  "net.ipv6.neigh.wlan0.mcast_solicit": "3",
  "net.ipv6.neigh.wlan0.proxy_delay": "80",
  "net.ipv6.neigh.wlan0.proxy_qlen": "64",
  "net.ipv6.neigh.wlan0.retrans_time": "1000",
  "net.ipv6.neigh.wlan0.retrans_time_ms": "1000",
  "net.ipv6.neigh.wlan0.ucast_solicit": "3",
  "net.ipv6.neigh.wlan0.unres_qlen": "101",
  "net.ipv6.neigh.wlan0.unres_qlen_bytes": "212992",
  "net.ipv6.route.gc_elasticity": "9",
  "net.ipv6.route.gc_interval": "30",
  "net.ipv6.route.gc_min_interval": "0",
  "net.ipv6.route.gc_min_interval_ms": "500",
  "net.ipv6.route.gc_thresh": "1024",
  "net.ipv6.route.gc_timeout": "60",
  "net.ipv6.route.max_size": "4096",
  "net.ipv6.route.min_adv_mss": "1220",
  "net.ipv6.route.mtu_expires": "600",
  "net.ipv6.route.skip_notify_on_dev_down": "0",
  "net.ipv6.seg6_flowlabel": "0",
  "net.ipv6.xfrm6_gc_thresh": "32768",
  "net.netfilter.nf_conntrack_acct": "0",
  "net.netfilter.nf_conntrack_buckets": "65536",
  "net.netfilter.nf_conntrack_checksum": "1",
  "net.netfilter.nf_conntrack_count": "233",
  "net.netfilter.nf_conntrack_dccp_loose": "1",
  "net.netfilter.nf_conntrack_dccp_timeout_closereq": "64",
  "net.netfilter.nf_conntrack_dccp_timeout_closing": "64",
  "net.netfilter.nf_conntrack_dccp_timeout_open": "43200",
  "net.netfilter.nf_conntrack_dccp_timeout_partopen": "480",
  "net.netfilter.nf_conntrack_dccp_timeout_request": "240",
  "net.netfilter.nf_conntrack_dccp_timeout_respond": "480",
  "net.netfilter.nf_conntrack_dccp_timeout_timewait": "240",
  "net.netfilter.nf_conntrack_events": "1",
  "net.netfilter.nf_conntrack_expect_max": "1024",
  "net.netfilter.nf_conntrack_frag6_high_thresh": "4194304",
  "net.netfilter.nf_conntrack_frag6_low_thresh": "3145728",
  "net.netfilter.nf_conntrack_frag6_timeout": "60",
  "net.netfilter.nf_conntrack_generic_timeout": "600",
  "net.netfilter.nf_conntrack_gre_timeout": "30",
  "net.netfilter.nf_conntrack_gre_timeout_stream": "180",
  "net.netfilter.nf_conntrack_helper": "0",
  "net.netfilter.nf_conntrack_icmp_timeout": "30",
  "net.netfilter.nf_conntrack_icmpv6_timeout": "30",
  "net.netfilter.nf_conntrack_log_invalid": "0",
  "net.netfilter.nf_conntrack_max": "262144",
  "net.netfilter.nf_conntrack_sctp_timeout_closed": "10",
  "net.netfilter.nf_conntrack_sctp_timeout_cookie_echoed": "3",
  "net.netfilter.nf_conntrack_sctp_timeout_cookie_wait": "3",
  "net.netfilter.nf_conntrack_sctp_timeout_established": "432000",
  "net.netfilter.nf_conntrack_sctp_timeout_heartbeat_acked": "210",
  "net.netfilter.nf_conntrack_sctp_timeout_heartbeat_sent": "30",
  "net.netfilter.nf_conntrack_sctp_timeout_shutdown_ack_sent": "3",
  "net.netfilter.nf_conntrack_sctp_timeout_shutdown_recd": "0",
  "net.netfilter.nf_conntrack_sctp_timeout_shutdown_sent": "0",
  "net.netfilter.nf_conntrack_tcp_be_liberal": "0",
  "net.netfilter.nf_conntrack_tcp_loose": "1",
  "net.netfilter.nf_conntrack_tcp_max_retrans": "3",
  "net.netfilter.nf_conntrack_tcp_timeout_close": "10",
  "net.netfilter.nf_conntrack_tcp_timeout_close_wait": "60",
  "net.netfilter.nf_conntrack_tcp_timeout_established": "432000",
  "net.netfilter.nf_conntrack_tcp_timeout_fin_wait": "120",
  "net.netfilter.nf_conntrack_tcp_timeout_last_ack": "30",
  "net.netfilter.nf_conntrack_tcp_timeout_max_retrans": "300",
  "net.netfilter.nf_conntrack_tcp_timeout_syn_recv": "60",
  "net.netfilter.nf_conntrack_tcp_timeout_syn_sent": "120",
  "net.netfilter.nf_conntrack_tcp_timeout_time_wait": "120",
  "net.netfilter.nf_conntrack_tcp_timeout_unacknowledged": "300",
  "net.netfilter.nf_conntrack_timestamp": "0",
  "net.netfilter.nf_conntrack_udp_timeout": "30",
  "net.netfilter.nf_conntrack_udp_timeout_stream": "120",
  "net.netfilter.nf_log.0": "NONE",
  "net.netfilter.nf_log.1": "NONE",
  "net.netfilter.nf_log.10": "NONE",
  "net.netfilter.nf_log.11": "NONE",
  "net.netfilter.nf_log.12": "NONE",
  "net.netfilter.nf_log.2": "NONE",
  "net.netfilter.nf_log.3": "NONE",
  "net.netfilter.nf_log.4": "NONE",
  "net.netfilter.nf_log.5": "NONE",
  "net.netfilter.nf_log.6": "NONE",
  "net.netfilter.nf_log.7": "NONE",
  "net.netfilter.nf_log.8": "NONE",
  "net.netfilter.nf_log.9": "NONE",
  "net.netfilter.nf_log_all_netns": "0",
  "net.nf_conntrack_max": "262144",
  "net.unix.max_dgram_qlen": "512",
  "sunrpc.max_resvport": "1023",
  "sunrpc.min_resvport": "665",
  "sunrpc.nfs_debug": "0x0000",
  "sunrpc.nfsd_debug": "0x0000",
  "sunrpc.nlm_debug": "0x0000",
  "sunrpc.rpc_debug": "0x0000",
  "sunrpc.tcp_fin_timeout": "15",
  "sunrpc.tcp_max_slot_table_entries": "65536",
  "sunrpc.tcp_slot_table_entries": "2",
  "sunrpc.transports": "tcp 1048576\nudp 32768",
  "sunrpc.udp_slot_table_entries": "16",
  "user.max_cgroup_namespaces": "127767",
  "user.max_inotify_instances": "128",
  "user.max_inotify_watches": "98304",
  "user.max_ipc_namespaces": "127767",
  "user.max_mnt_namespaces": "127767",
  "user.max_net_namespaces": "127767",
  "user.max_pid_namespaces": "127767",
  "user.max_user_namespaces": "127767",
  "user.max_uts_namespaces": "127767",
  "vm.admin_reserve_kbytes": "8192",
  "vm.block_dump": "0",
  "vm.compact_unevictable_allowed": "1",
  "vm.dirty_background_bytes": "0",
  "vm.dirty_background_ratio": "10",
  "vm.dirty_bytes": "0",
  "vm.dirty_expire_centisecs": "1500",
  "vm.dirty_ratio": "20",
  "vm.dirty_writeback_centisecs": "1500",
  "vm.dirtytime_expire_seconds": "43200",
  "vm.extfrag_threshold": "500",
  "vm.hugetlb_shm_group": "0",
  "vm.laptop_mode": "0",
  "vm.legacy_va_layout": "0",
  "vm.lowmem_reserve_ratio": "256\t256\t32\t0\t0",
  "vm.max_map_count": "65530",
  "vm.memory_failure_early_kill": "0",
  "vm.memory_failure_recovery": "1",
  "vm.min_free_kbytes": "67584",
  "vm.min_slab_ratio": "5",
  "vm.min_unmapped_ratio": "1",
  "vm.mmap_min_addr": "65536",
  "vm.nr_hugepages": "0",
  "vm.nr_hugepages_mempolicy": "0",
  "vm.nr_overcommit_hugepages": "0",
  "vm.numa_stat": "1",
  "vm.numa_zonelist_order": "Node",
  "vm.oom_dump_tasks": "1",
  "vm.oom_kill_allocating_task": "0",
  "vm.overcommit_kbytes": "0",
  "vm.overcommit_memory": "0",
  "vm.overcommit_ratio": "50",
  "vm.page-cluster": "3",
  "vm.panic_on_oom": "0",
  "vm.percpu_pagelist_fraction": "0",
  "vm.stat_interval": "1",
  "vm.swappiness": "60",
  "vm.unprivileged_userfaultfd": "1",
  "vm.user_reserve_kbytes": "131072",
  "vm.vfs_cache_pressure": "100",
  "vm.watermark_boost_factor": "0",
  "vm.watermark_scale_factor": "10",
  "vm.zone_reclaim_mode": "0"
}
R: {
  "abi.vsyscall32": "1",
  "debug.exception-trace": "1",
  "debug.kprobes-optimization": "1",
  "dev.cdrom.autoclose": "1",
  "dev.cdrom.autoeject": "0",
  "dev.cdrom.check_media": "0",
  "dev.cdrom.debug": "0",
  "dev.cdrom.info": "CD-ROM information, Id: cdrom.c 3.20 2003/12/17\n\ndrive name:\t\ndrive speed:\t\ndrive # of slots:\nCan close tray:\t\nCan open tray:\t\nCan lock tray:\t\nCan change speed:\nCan select disk:\nCan read multisession:\nCan read MCN:\t\nReports media changed:\nCan play audio:\t\nCan write CD-R:\t\nCan write CD-RW:\nCan read DVD:\t\nCan write DVD-R:\nCan write DVD-RAM:\nCan read MRW:\t\nCan write MRW:\t\nCan write RAM:\t",
  "dev.cdrom.lock": "0",
  "dev.hpet.max-user-freq": "64",
  "dev.i915.oa_max_sample_rate": "100000",
  "dev.i915.perf_stream_paranoid": "1",
  "dev.mac_hid.mouse_button2_keycode": "97",
  "dev.mac_hid.mouse_button3_keycode": "100",
  "dev.mac_hid.mouse_button_emulation": "0",
  "dev.parport.default.spintime": "500",
  "dev.parport.default.timeslice": "200",
  "dev.raid.speed_limit_max": "200000",
  "dev.raid.speed_limit_min": "1000",
  "dev.scsi.logging_level": "0",
  "dev.tty.ldisc_autoload": "1",
  "fs.aio-max-nr": "65536",
  "fs.aio-nr": "3301",
  "fs.binfmt_misc.cli": "enabled\ninterpreter /usr/lib/binfmt-support/run-detectors\nflags: \noffset 0\nmagic 4d5a",
  "fs.binfmt_misc.jar": "enabled\ninterpreter /usr/bin/jexec\nflags: \noffset 0\nmagic 504b0304",
  "fs.binfmt_misc.python2.7": "enabled\ninterpreter /usr/bin/python2.7\nflags: \noffset 0\nmagic 03f30d0a",
  "fs.binfmt_misc.python3.8": "enabled\ninterpreter /usr/bin/python3.8\nflags: \noffset 0\nmagic 550d0d0a",
  "fs.binfmt_misc.sbcl": "enabled\ninterpreter /usr/lib/sbcl/sbcl-run\nflags: \noffset 0\nmagic 23204641534c0a",
  "fs.binfmt_misc.status": "enabled",
  "fs.dentry-state": "311039\t222685\t45\t0\t42660\t0",
  "fs.dir-notify-enable": "1",
  "fs.epoll.max_user_watches": "6698721",
  "fs.file-max": "9223372036854775807",
  "fs.file-nr": "46048\t0\t9223372036854775807",
  "fs.inode-nr": "507779\t238746",
  "fs.inode-state": "507779\t238746\t0\t0\t0\t0\t0",
  "fs.inotify.max_queued_events": "16384",
  "fs.inotify.max_user_instances": "128",
  "fs.inotify.max_user_watches": "98304",
  "fs.lease-break-time": "45",
  "fs.leases-enable": "1",
  "fs.mount-max": "100000",
  "fs.mqueue.msg_default": "10",
  "fs.mqueue.msg_max": "10",
  "fs.mqueue.msgsize_default": "8192",
  "fs.mqueue.msgsize_max": "8192",
  "fs.mqueue.queues_max": "256",
  "fs.nfs.idmap_cache_timeout": "600",
  "fs.nfs.nfs_callback_tcpport": "0",
  "fs.nfs.nfs_congestion_kb": "183104",
  "fs.nfs.nfs_mountpoint_timeout": "500",
  "fs.nfs.nlm_grace_period": "0",
  "fs.nfs.nlm_tcpport": "0",
  "fs.nfs.nlm_timeout": "10",
  "fs.nfs.nlm_udpport": "0",
  "fs.nfs.nsm_local_state": "3",
  "fs.nfs.nsm_use_hostnames": "0",
  "fs.nr_open": "1048576",
  "fs.overflowgid": "65534",
  "fs.overflowuid": "65534",
  "fs.pipe-max-size": "1048576",
  "fs.pipe-user-pages-hard": "0",
  "fs.pipe-user-pages-soft": "16384",
  "fs.quota.allocated_dquots": "0",
  "fs.quota.cache_hits": "0",
  "fs.quota.drops": "0",
  "fs.quota.free_dquots": "0",
  "fs.quota.lookups": "0",
  "fs.quota.reads": "0",
  "fs.quota.syncs": "26",
  "fs.quota.writes": "0",
  "fs.suid_dumpable": "2",
  "fs.verity.require_signatures": "0",
  "fscache.object_max_active": "8",
  "fscache.operation_max_active": "4",
  "kernel.acct": "4\t2\t30",
  "kernel.acpi_video_flags": "0",
  "kernel.auto_msgmni": "0",
  "kernel.bootloader_type": "6",
  "kernel.bootloader_version": "38",
  "kernel.bpf_stats_enabled": "0",
  "kernel.cap_last_cap": "37",
  "kernel.core_pattern": "|/usr/share/apport/apport %p %s %c %d %P %E",
  "kernel.core_pipe_limit": "0",
  "kernel.core_uses_pid": "0",
  "kernel.ctrl-alt-del": "0",
  "kernel.dmesg_restrict": "0",
  "kernel.domainname": "(none)",
  "kernel.firmware_config.force_sysfs_fallback": "0",
  "kernel.firmware_config.ignore_sysfs_fallback": "0",
  "kernel.ftrace_dump_on_oops": "0",
  "kernel.ftrace_enabled": "1",
  "kernel.hardlockup_all_cpu_backtrace": "0",
  "kernel.hardlockup_panic": "0",
  "kernel.hostname": "nickanderson-ThinkPad-W550s",
  "kernel.hotplug": "",
  "kernel.hung_task_check_count": "4194304",
  "kernel.hung_task_check_interval_secs": "0",
  "kernel.hung_task_panic": "0",
  "kernel.hung_task_timeout_secs": "120",
  "kernel.hung_task_warnings": "8",
  "kernel.io_delay_type": "1",
  "kernel.kexec_load_disabled": "0",
  "kernel.keys.gc_delay": "300",
  "kernel.keys.maxbytes": "20000",
  "kernel.keys.maxkeys": "200",
  "kernel.keys.persistent_keyring_expiry": "259200",
  "kernel.keys.root_maxbytes": "25000000",
  "kernel.keys.root_maxkeys": "1000000",
  "kernel.kptr_restrict": "1",
  "kernel.latencytop": "0",
  "kernel.max_lock_depth": "1024",
  "kernel.modprobe": "/sbin/modprobe",
  "kernel.modules_disabled": "0",
  "kernel.msg_next_id": "-1",
  "kernel.msgmax": "8192",
  "kernel.msgmnb": "16384",
  "kernel.msgmni": "32000",
  "kernel.ngroups_max": "65536",
  "kernel.nmi_watchdog": "0",
  "kernel.ns_last_pid": "1116084",
  "kernel.numa_balancing": "0",
  "kernel.numa_balancing_scan_delay_ms": "1000",
  "kernel.numa_balancing_scan_period_max_ms": "60000",
  "kernel.numa_balancing_scan_period_min_ms": "1000",
  "kernel.numa_balancing_scan_size_mb": "256",
  "kernel.osrelease": "5.4.0-42-lowlatency",
  "kernel.ostype": "Linux",
  "kernel.overflowgid": "65534",
  "kernel.overflowuid": "65534",
  "kernel.panic": "0",
  "kernel.panic_on_io_nmi": "0",
  "kernel.panic_on_oops": "0",
  "kernel.panic_on_rcu_stall": "0",
  "kernel.panic_on_unrecovered_nmi": "0",
  "kernel.panic_on_warn": "0",
  "kernel.panic_print": "0",
  "kernel.perf_cpu_time_max_percent": "25",
  "kernel.perf_event_max_contexts_per_stack": "8",
  "kernel.perf_event_max_sample_rate": "100000",
  "kernel.perf_event_max_stack": "127",
  "kernel.perf_event_mlock_kb": "516",
  "kernel.perf_event_paranoid": "3",
  "kernel.pid_max": "4194304",
  "kernel.poweroff_cmd": "/sbin/poweroff",
  "kernel.print-fatal-signals": "0",
  "kernel.printk": "4\t4\t1\t7",
  "kernel.printk_delay": "0",
  "kernel.printk_devkmsg": "on",
  "kernel.printk_ratelimit": "5",
  "kernel.printk_ratelimit_burst": "10",
  "kernel.pty.max": "4096",
  "kernel.pty.nr": "8",
  "kernel.pty.reserve": "1024",
  "kernel.random.boot_id": "fdf58181-01bd-4d59-a45d-c56bca7eceef",
  "kernel.random.entropy_avail": "3936",
  "kernel.random.poolsize": "4096",
  "kernel.random.read_wakeup_threshold": "64",
  "kernel.random.urandom_min_reseed_secs": "60",
  "kernel.random.uuid": "bb2f07c5-25f9-47ef-9df0-e668f7360426",
  "kernel.random.write_wakeup_threshold": "1024",
  "kernel.randomize_va_space": "2",
  "kernel.real-root-dev": "0",
  "kernel.sched_autogroup_enabled": "1",
  "kernel.sched_cfs_bandwidth_slice_us": "5000",
  "kernel.sched_child_runs_first": "0",
  "kernel.sched_domain.cpu0.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu0.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu0.domain0.flags": "4783",
  "kernel.sched_domain.cpu0.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu0.domain0.max_interval": "4",
  "kernel.sched_domain.cpu0.domain0.max_newidle_lb_cost": "20749",
  "kernel.sched_domain.cpu0.domain0.min_interval": "2",
  "kernel.sched_domain.cpu0.domain0.name": "SMT",
  "kernel.sched_domain.cpu0.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu0.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu0.domain1.flags": "4655",
  "kernel.sched_domain.cpu0.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu0.domain1.max_interval": "8",
  "kernel.sched_domain.cpu0.domain1.max_newidle_lb_cost": "18161",
  "kernel.sched_domain.cpu0.domain1.min_interval": "4",
  "kernel.sched_domain.cpu0.domain1.name": "MC",
  "kernel.sched_domain.cpu1.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu1.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu1.domain0.flags": "4783",
  "kernel.sched_domain.cpu1.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu1.domain0.max_interval": "4",
  "kernel.sched_domain.cpu1.domain0.max_newidle_lb_cost": "28467",
  "kernel.sched_domain.cpu1.domain0.min_interval": "2",
  "kernel.sched_domain.cpu1.domain0.name": "SMT",
  "kernel.sched_domain.cpu1.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu1.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu1.domain1.flags": "4655",
  "kernel.sched_domain.cpu1.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu1.domain1.max_interval": "8",
  "kernel.sched_domain.cpu1.domain1.max_newidle_lb_cost": "24312",
  "kernel.sched_domain.cpu1.domain1.min_interval": "4",
  "kernel.sched_domain.cpu1.domain1.name": "MC",
  "kernel.sched_domain.cpu2.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu2.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu2.domain0.flags": "4783",
  "kernel.sched_domain.cpu2.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu2.domain0.max_interval": "4",
  "kernel.sched_domain.cpu2.domain0.max_newidle_lb_cost": "25634",
  "kernel.sched_domain.cpu2.domain0.min_interval": "2",
  "kernel.sched_domain.cpu2.domain0.name": "SMT",
  "kernel.sched_domain.cpu2.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu2.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu2.domain1.flags": "4655",
  "kernel.sched_domain.cpu2.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu2.domain1.max_interval": "8",
  "kernel.sched_domain.cpu2.domain1.max_newidle_lb_cost": "20399",
  "kernel.sched_domain.cpu2.domain1.min_interval": "4",
  "kernel.sched_domain.cpu2.domain1.name": "MC",
  "kernel.sched_domain.cpu3.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu3.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu3.domain0.flags": "4783",
  "kernel.sched_domain.cpu3.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu3.domain0.max_interval": "4",
  "kernel.sched_domain.cpu3.domain0.max_newidle_lb_cost": "20567",
  "kernel.sched_domain.cpu3.domain0.min_interval": "2",
  "kernel.sched_domain.cpu3.domain0.name": "SMT",
  "kernel.sched_domain.cpu3.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu3.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu3.domain1.flags": "4655",
  "kernel.sched_domain.cpu3.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu3.domain1.max_interval": "8",
  "kernel.sched_domain.cpu3.domain1.max_newidle_lb_cost": "20884",
  "kernel.sched_domain.cpu3.domain1.min_interval": "4",
  "kernel.sched_domain.cpu3.domain1.name": "MC",
  "kernel.sched_latency_ns": "18000000",
  "kernel.sched_migration_cost_ns": "500000",
  "kernel.sched_min_granularity_ns": "2250000",
  "kernel.sched_nr_migrate": "32",
  "kernel.sched_rr_timeslice_ms": "100",
  "kernel.sched_rt_period_us": "1000000",
  "kernel.sched_rt_runtime_us": "950000",
  "kernel.sched_schedstats": "0",
  "kernel.sched_tunable_scaling": "1",
  "kernel.sched_util_clamp_max": "1024",
  "kernel.sched_util_clamp_min": "1024",
  "kernel.sched_wakeup_granularity_ns": "3000000",
  "kernel.seccomp.actions_avail": "kill_process kill_thread trap errno user_notif trace log allow",
  "kernel.seccomp.actions_logged": "kill_process kill_thread trap errno user_notif trace log",
  "kernel.sem": "32000\t1024000000\t500\t32000",
  "kernel.sem_next_id": "-1",
  "kernel.sg-big-buff": "32768",
  "kernel.shm_next_id": "-1",
  "kernel.shm_rmid_forced": "0",
  "kernel.shmall": "18446744073692774399",
  "kernel.shmmax": "18446744073692774399",
  "kernel.shmmni": "4096",
  "kernel.soft_watchdog": "1",
  "kernel.softlockup_all_cpu_backtrace": "0",
  "kernel.softlockup_panic": "0",
  "kernel.stack_tracer_enabled": "0",
  "kernel.sysctl_writes_strict": "1",
  "kernel.sysrq": "176",
  "kernel.tainted": "5632",
  "kernel.threads-max": "255535",
  "kernel.timer_migration": "1",
  "kernel.traceoff_on_warning": "0",
  "kernel.tracepoint_printk": "0",
  "kernel.unknown_nmi_panic": "0",
  "kernel.unprivileged_bpf_disabled": "0",
  "kernel.unprivileged_userns_clone": "1",
  "kernel.version": "#46-Ubuntu SMP PREEMPT Fri Jul 10 01:43:58 UTC 2020",
  "kernel.watchdog": "1",
  "kernel.watchdog_cpumask": "0-7",
  "kernel.watchdog_thresh": "10",
  "kernel.yama.ptrace_scope": "1",
  "net.bridge.bridge-nf-call-arptables": "1",
  "net.bridge.bridge-nf-call-ip6tables": "1",
  "net.bridge.bridge-nf-call-iptables": "1",
  "net.bridge.bridge-nf-filter-pppoe-tagged": "0",
  "net.bridge.bridge-nf-filter-vlan-tagged": "0",
  "net.bridge.bridge-nf-pass-vlan-input-dev": "0",
  "net.core.bpf_jit_enable": "1",
  "net.core.busy_poll": "0",
  "net.core.busy_read": "0",
  "net.core.default_qdisc": "fq_codel",
  "net.core.dev_weight": "64",
  "net.core.dev_weight_rx_bias": "1",
  "net.core.dev_weight_tx_bias": "1",
  "net.core.devconf_inherit_init_net": "0",
  "net.core.fb_tunnels_only_for_init_net": "0",
  "net.core.flow_limit_cpu_bitmap": "00",
  "net.core.flow_limit_table_len": "4096",
  "net.core.gro_normal_batch": "8",
  "net.core.high_order_alloc_disable": "0",
  "net.core.max_skb_frags": "17",
  "net.core.message_burst": "10",
  "net.core.message_cost": "5",
  "net.core.netdev_budget": "300",
  "net.core.netdev_budget_usecs": "2000",
  "net.core.netdev_max_backlog": "1000",
  "net.core.netdev_rss_key": "de:cd:e7:76:dc:fb:d8:5b:ab:b6:d5:97:d1:14:ce:ac:14:23:a7:c9:07:b3:4a:e9:82:f2:a3:7d:ae:37:21:8f:0b:90:09:47:6b:9d:d6:b2:7b:40:f1:62:fd:a4:b4:a2:cb:29:72:f0",
  "net.core.netdev_tstamp_prequeue": "1",
  "net.core.optmem_max": "20480",
  "net.core.rmem_default": "212992",
  "net.core.rmem_max": "212992",
  "net.core.rps_sock_flow_entries": "0",
  "net.core.somaxconn": "4096",
  "net.core.tstamp_allow_data": "1",
  "net.core.warnings": "0",
  "net.core.wmem_default": "212992",
  "net.core.wmem_max": "212992",
  "net.core.xfrm_acq_expires": "30",
  "net.core.xfrm_aevent_etime": "10",
  "net.core.xfrm_aevent_rseqth": "2",
  "net.core.xfrm_larval_drop": "1",
  "net.ipv4.cipso_cache_bucket_size": "10",
  "net.ipv4.cipso_cache_enable": "1",
  "net.ipv4.cipso_rbm_optfmt": "0",
  "net.ipv4.cipso_rbm_strictvalid": "1",
  "net.ipv4.conf.all.accept_local": "0",
  "net.ipv4.conf.all.accept_redirects": "0",
  "net.ipv4.conf.all.accept_source_route": "0",
  "net.ipv4.conf.all.arp_accept": "0",
  "net.ipv4.conf.all.arp_announce": "0",
  "net.ipv4.conf.all.arp_filter": "0",
  "net.ipv4.conf.all.arp_ignore": "0",
  "net.ipv4.conf.all.arp_notify": "0",
  "net.ipv4.conf.all.bc_forwarding": "0",
  "net.ipv4.conf.all.bootp_relay": "0",
  "net.ipv4.conf.all.disable_policy": "0",
  "net.ipv4.conf.all.disable_xfrm": "0",
  "net.ipv4.conf.all.drop_gratuitous_arp": "0",
  "net.ipv4.conf.all.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.all.force_igmp_version": "0",
  "net.ipv4.conf.all.forwarding": "1",
  "net.ipv4.conf.all.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.all.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.all.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.all.log_martians": "0",
  "net.ipv4.conf.all.mc_forwarding": "0",
  "net.ipv4.conf.all.medium_id": "0",
  "net.ipv4.conf.all.promote_secondaries": "0",
  "net.ipv4.conf.all.proxy_arp": "0",
  "net.ipv4.conf.all.proxy_arp_pvlan": "0",
  "net.ipv4.conf.all.route_localnet": "0",
  "net.ipv4.conf.all.rp_filter": "2",
  "net.ipv4.conf.all.secure_redirects": "1",
  "net.ipv4.conf.all.send_redirects": "1",
  "net.ipv4.conf.all.shared_media": "1",
  "net.ipv4.conf.all.src_valid_mark": "0",
  "net.ipv4.conf.all.tag": "0",
  "net.ipv4.conf.default.accept_local": "0",
  "net.ipv4.conf.default.accept_redirects": "1",
  "net.ipv4.conf.default.accept_source_route": "1",
  "net.ipv4.conf.default.arp_accept": "0",
  "net.ipv4.conf.default.arp_announce": "0",
  "net.ipv4.conf.default.arp_filter": "0",
  "net.ipv4.conf.default.arp_ignore": "0",
  "net.ipv4.conf.default.arp_notify": "0",
  "net.ipv4.conf.default.bc_forwarding": "0",
  "net.ipv4.conf.default.bootp_relay": "0",
  "net.ipv4.conf.default.disable_policy": "0",
  "net.ipv4.conf.default.disable_xfrm": "0",
  "net.ipv4.conf.default.drop_gratuitous_arp": "0",
  "net.ipv4.conf.default.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.default.force_igmp_version": "0",
  "net.ipv4.conf.default.forwarding": "1",
  "net.ipv4.conf.default.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.default.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.default.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.default.log_martians": "0",
  "net.ipv4.conf.default.mc_forwarding": "0",
  "net.ipv4.conf.default.medium_id": "0",
  "net.ipv4.conf.default.promote_secondaries": "1",
  "net.ipv4.conf.default.proxy_arp": "0",
  "net.ipv4.conf.default.proxy_arp_pvlan": "0",
  "net.ipv4.conf.default.route_localnet": "0",
  "net.ipv4.conf.default.rp_filter": "2",
  "net.ipv4.conf.default.secure_redirects": "1",
  "net.ipv4.conf.default.send_redirects": "1",
  "net.ipv4.conf.default.shared_media": "1",
  "net.ipv4.conf.default.src_valid_mark": "0",
  "net.ipv4.conf.default.tag": "0",
  "net.ipv4.conf.docker0.accept_local": "0",
  "net.ipv4.conf.docker0.accept_redirects": "1",
  "net.ipv4.conf.docker0.accept_source_route": "1",
  "net.ipv4.conf.docker0.arp_accept": "0",
  "net.ipv4.conf.docker0.arp_announce": "0",
  "net.ipv4.conf.docker0.arp_filter": "0",
  "net.ipv4.conf.docker0.arp_ignore": "0",
  "net.ipv4.conf.docker0.arp_notify": "0",
  "net.ipv4.conf.docker0.bc_forwarding": "0",
  "net.ipv4.conf.docker0.bootp_relay": "0",
  "net.ipv4.conf.docker0.disable_policy": "0",
  "net.ipv4.conf.docker0.disable_xfrm": "0",
  "net.ipv4.conf.docker0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.docker0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.docker0.force_igmp_version": "0",
  "net.ipv4.conf.docker0.forwarding": "1",
  "net.ipv4.conf.docker0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.docker0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.docker0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.docker0.log_martians": "0",
  "net.ipv4.conf.docker0.mc_forwarding": "0",
  "net.ipv4.conf.docker0.medium_id": "0",
  "net.ipv4.conf.docker0.promote_secondaries": "1",
  "net.ipv4.conf.docker0.proxy_arp": "0",
  "net.ipv4.conf.docker0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.docker0.route_localnet": "0",
  "net.ipv4.conf.docker0.rp_filter": "2",
  "net.ipv4.conf.docker0.secure_redirects": "1",
  "net.ipv4.conf.docker0.send_redirects": "1",
  "net.ipv4.conf.docker0.shared_media": "1",
  "net.ipv4.conf.docker0.src_valid_mark": "0",
  "net.ipv4.conf.docker0.tag": "0",
  "net.ipv4.conf.eth0.accept_local": "0",
  "net.ipv4.conf.eth0.accept_redirects": "1",
  "net.ipv4.conf.eth0.accept_source_route": "1",
  "net.ipv4.conf.eth0.arp_accept": "0",
  "net.ipv4.conf.eth0.arp_announce": "0",
  "net.ipv4.conf.eth0.arp_filter": "0",
  "net.ipv4.conf.eth0.arp_ignore": "0",
  "net.ipv4.conf.eth0.arp_notify": "0",
  "net.ipv4.conf.eth0.bc_forwarding": "0",
  "net.ipv4.conf.eth0.bootp_relay": "0",
  "net.ipv4.conf.eth0.disable_policy": "0",
  "net.ipv4.conf.eth0.disable_xfrm": "0",
  "net.ipv4.conf.eth0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.eth0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.eth0.force_igmp_version": "0",
  "net.ipv4.conf.eth0.forwarding": "1",
  "net.ipv4.conf.eth0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.eth0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.eth0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.eth0.log_martians": "0",
  "net.ipv4.conf.eth0.mc_forwarding": "0",
  "net.ipv4.conf.eth0.medium_id": "0",
  "net.ipv4.conf.eth0.promote_secondaries": "1",
  "net.ipv4.conf.eth0.proxy_arp": "0",
  "net.ipv4.conf.eth0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.eth0.route_localnet": "0",
  "net.ipv4.conf.eth0.rp_filter": "2",
  "net.ipv4.conf.eth0.secure_redirects": "1",
  "net.ipv4.conf.eth0.send_redirects": "1",
  "net.ipv4.conf.eth0.shared_media": "1",
  "net.ipv4.conf.eth0.src_valid_mark": "0",
  "net.ipv4.conf.eth0.tag": "0",
  "net.ipv4.conf.lo.accept_local": "0",
  "net.ipv4.conf.lo.accept_redirects": "1",
  "net.ipv4.conf.lo.accept_source_route": "1",
  "net.ipv4.conf.lo.arp_accept": "0",
  "net.ipv4.conf.lo.arp_announce": "0",
  "net.ipv4.conf.lo.arp_filter": "0",
  "net.ipv4.conf.lo.arp_ignore": "0",
  "net.ipv4.conf.lo.arp_notify": "0",
  "net.ipv4.conf.lo.bc_forwarding": "0",
  "net.ipv4.conf.lo.bootp_relay": "0",
  "net.ipv4.conf.lo.disable_policy": "1",
  "net.ipv4.conf.lo.disable_xfrm": "1",
  "net.ipv4.conf.lo.drop_gratuitous_arp": "0",
  "net.ipv4.conf.lo.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.lo.force_igmp_version": "0",
  "net.ipv4.conf.lo.forwarding": "1",
  "net.ipv4.conf.lo.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.lo.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.lo.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.lo.log_martians": "0",
  "net.ipv4.conf.lo.mc_forwarding": "0",
  "net.ipv4.conf.lo.medium_id": "0",
  "net.ipv4.conf.lo.promote_secondaries": "1",
  "net.ipv4.conf.lo.proxy_arp": "0",
  "net.ipv4.conf.lo.proxy_arp_pvlan": "0",
  "net.ipv4.conf.lo.route_localnet": "0",
  "net.ipv4.conf.lo.rp_filter": "0",
  "net.ipv4.conf.lo.secure_redirects": "1",
  "net.ipv4.conf.lo.send_redirects": "1",
  "net.ipv4.conf.lo.shared_media": "1",
  "net.ipv4.conf.lo.src_valid_mark": "0",
  "net.ipv4.conf.lo.tag": "0",
  "net.ipv4.conf.tun0.accept_local": "0",
  "net.ipv4.conf.tun0.accept_redirects": "1",
  "net.ipv4.conf.tun0.accept_source_route": "1",
  "net.ipv4.conf.tun0.arp_accept": "0",
  "net.ipv4.conf.tun0.arp_announce": "0",
  "net.ipv4.conf.tun0.arp_filter": "0",
  "net.ipv4.conf.tun0.arp_ignore": "0",
  "net.ipv4.conf.tun0.arp_notify": "0",
  "net.ipv4.conf.tun0.bc_forwarding": "0",
  "net.ipv4.conf.tun0.bootp_relay": "0",
  "net.ipv4.conf.tun0.disable_policy": "0",
  "net.ipv4.conf.tun0.disable_xfrm": "0",
  "net.ipv4.conf.tun0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.tun0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.tun0.force_igmp_version": "0",
  "net.ipv4.conf.tun0.forwarding": "1",
  "net.ipv4.conf.tun0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.tun0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.tun0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.tun0.log_martians": "0",
  "net.ipv4.conf.tun0.mc_forwarding": "0",
  "net.ipv4.conf.tun0.medium_id": "0",
  "net.ipv4.conf.tun0.promote_secondaries": "1",
  "net.ipv4.conf.tun0.proxy_arp": "0",
  "net.ipv4.conf.tun0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.tun0.route_localnet": "0",
  "net.ipv4.conf.tun0.rp_filter": "2",
  "net.ipv4.conf.tun0.secure_redirects": "1",
  "net.ipv4.conf.tun0.send_redirects": "1",
  "net.ipv4.conf.tun0.shared_media": "1",
  "net.ipv4.conf.tun0.src_valid_mark": "0",
  "net.ipv4.conf.tun0.tag": "0",
  "net.ipv4.conf.vboxnet0.accept_local": "0",
  "net.ipv4.conf.vboxnet0.accept_redirects": "1",
  "net.ipv4.conf.vboxnet0.accept_source_route": "1",
  "net.ipv4.conf.vboxnet0.arp_accept": "0",
  "net.ipv4.conf.vboxnet0.arp_announce": "0",
  "net.ipv4.conf.vboxnet0.arp_filter": "0",
  "net.ipv4.conf.vboxnet0.arp_ignore": "0",
  "net.ipv4.conf.vboxnet0.arp_notify": "0",
  "net.ipv4.conf.vboxnet0.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet0.bootp_relay": "0",
  "net.ipv4.conf.vboxnet0.disable_policy": "0",
  "net.ipv4.conf.vboxnet0.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet0.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet0.forwarding": "1",
  "net.ipv4.conf.vboxnet0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet0.log_martians": "0",
  "net.ipv4.conf.vboxnet0.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet0.medium_id": "0",
  "net.ipv4.conf.vboxnet0.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet0.proxy_arp": "0",
  "net.ipv4.conf.vboxnet0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet0.route_localnet": "0",
  "net.ipv4.conf.vboxnet0.rp_filter": "2",
  "net.ipv4.conf.vboxnet0.secure_redirects": "1",
  "net.ipv4.conf.vboxnet0.send_redirects": "1",
  "net.ipv4.conf.vboxnet0.shared_media": "1",
  "net.ipv4.conf.vboxnet0.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet0.tag": "0",
  "net.ipv4.conf.vboxnet1.accept_local": "0",
  "net.ipv4.conf.vboxnet1.accept_redirects": "1",
  "net.ipv4.conf.vboxnet1.accept_source_route": "1",
  "net.ipv4.conf.vboxnet1.arp_accept": "0",
  "net.ipv4.conf.vboxnet1.arp_announce": "0",
  "net.ipv4.conf.vboxnet1.arp_filter": "0",
  "net.ipv4.conf.vboxnet1.arp_ignore": "0",
  "net.ipv4.conf.vboxnet1.arp_notify": "0",
  "net.ipv4.conf.vboxnet1.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet1.bootp_relay": "0",
  "net.ipv4.conf.vboxnet1.disable_policy": "0",
  "net.ipv4.conf.vboxnet1.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet1.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet1.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet1.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet1.forwarding": "1",
  "net.ipv4.conf.vboxnet1.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet1.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet1.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet1.log_martians": "0",
  "net.ipv4.conf.vboxnet1.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet1.medium_id": "0",
  "net.ipv4.conf.vboxnet1.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet1.proxy_arp": "0",
  "net.ipv4.conf.vboxnet1.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet1.route_localnet": "0",
  "net.ipv4.conf.vboxnet1.rp_filter": "2",
  "net.ipv4.conf.vboxnet1.secure_redirects": "1",
  "net.ipv4.conf.vboxnet1.send_redirects": "1",
  "net.ipv4.conf.vboxnet1.shared_media": "1",
  "net.ipv4.conf.vboxnet1.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet1.tag": "0",
  "net.ipv4.conf.vboxnet10.accept_local": "0",
  "net.ipv4.conf.vboxnet10.accept_redirects": "1",
  "net.ipv4.conf.vboxnet10.accept_source_route": "1",
  "net.ipv4.conf.vboxnet10.arp_accept": "0",
  "net.ipv4.conf.vboxnet10.arp_announce": "0",
  "net.ipv4.conf.vboxnet10.arp_filter": "0",
  "net.ipv4.conf.vboxnet10.arp_ignore": "0",
  "net.ipv4.conf.vboxnet10.arp_notify": "0",
  "net.ipv4.conf.vboxnet10.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet10.bootp_relay": "0",
  "net.ipv4.conf.vboxnet10.disable_policy": "0",
  "net.ipv4.conf.vboxnet10.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet10.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet10.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet10.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet10.forwarding": "1",
  "net.ipv4.conf.vboxnet10.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet10.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet10.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet10.log_martians": "0",
  "net.ipv4.conf.vboxnet10.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet10.medium_id": "0",
  "net.ipv4.conf.vboxnet10.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet10.proxy_arp": "0",
  "net.ipv4.conf.vboxnet10.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet10.route_localnet": "0",
  "net.ipv4.conf.vboxnet10.rp_filter": "2",
  "net.ipv4.conf.vboxnet10.secure_redirects": "1",
  "net.ipv4.conf.vboxnet10.send_redirects": "1",
  "net.ipv4.conf.vboxnet10.shared_media": "1",
  "net.ipv4.conf.vboxnet10.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet10.tag": "0",
  "net.ipv4.conf.vboxnet11.accept_local": "0",
  "net.ipv4.conf.vboxnet11.accept_redirects": "1",
  "net.ipv4.conf.vboxnet11.accept_source_route": "1",
  "net.ipv4.conf.vboxnet11.arp_accept": "0",
  "net.ipv4.conf.vboxnet11.arp_announce": "0",
  "net.ipv4.conf.vboxnet11.arp_filter": "0",
  "net.ipv4.conf.vboxnet11.arp_ignore": "0",
  "net.ipv4.conf.vboxnet11.arp_notify": "0",
  "net.ipv4.conf.vboxnet11.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet11.bootp_relay": "0",
  "net.ipv4.conf.vboxnet11.disable_policy": "0",
  "net.ipv4.conf.vboxnet11.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet11.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet11.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet11.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet11.forwarding": "1",
  "net.ipv4.conf.vboxnet11.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet11.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet11.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet11.log_martians": "0",
  "net.ipv4.conf.vboxnet11.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet11.medium_id": "0",
  "net.ipv4.conf.vboxnet11.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet11.proxy_arp": "0",
  "net.ipv4.conf.vboxnet11.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet11.route_localnet": "0",
  "net.ipv4.conf.vboxnet11.rp_filter": "2",
  "net.ipv4.conf.vboxnet11.secure_redirects": "1",
  "net.ipv4.conf.vboxnet11.send_redirects": "1",
  "net.ipv4.conf.vboxnet11.shared_media": "1",
  "net.ipv4.conf.vboxnet11.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet11.tag": "0",
  "net.ipv4.conf.vboxnet12.accept_local": "0",
  "net.ipv4.conf.vboxnet12.accept_redirects": "1",
  "net.ipv4.conf.vboxnet12.accept_source_route": "1",
  "net.ipv4.conf.vboxnet12.arp_accept": "0",
  "net.ipv4.conf.vboxnet12.arp_announce": "0",
  "net.ipv4.conf.vboxnet12.arp_filter": "0",
  "net.ipv4.conf.vboxnet12.arp_ignore": "0",
  "net.ipv4.conf.vboxnet12.arp_notify": "0",
  "net.ipv4.conf.vboxnet12.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet12.bootp_relay": "0",
  "net.ipv4.conf.vboxnet12.disable_policy": "0",
  "net.ipv4.conf.vboxnet12.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet12.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet12.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet12.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet12.forwarding": "1",
  "net.ipv4.conf.vboxnet12.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet12.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet12.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet12.log_martians": "0",
  "net.ipv4.conf.vboxnet12.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet12.medium_id": "0",
  "net.ipv4.conf.vboxnet12.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet12.proxy_arp": "0",
  "net.ipv4.conf.vboxnet12.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet12.route_localnet": "0",
  "net.ipv4.conf.vboxnet12.rp_filter": "2",
  "net.ipv4.conf.vboxnet12.secure_redirects": "1",
  "net.ipv4.conf.vboxnet12.send_redirects": "1",
  "net.ipv4.conf.vboxnet12.shared_media": "1",
  "net.ipv4.conf.vboxnet12.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet12.tag": "0",
  "net.ipv4.conf.vboxnet13.accept_local": "0",
  "net.ipv4.conf.vboxnet13.accept_redirects": "1",
  "net.ipv4.conf.vboxnet13.accept_source_route": "1",
  "net.ipv4.conf.vboxnet13.arp_accept": "0",
  "net.ipv4.conf.vboxnet13.arp_announce": "0",
  "net.ipv4.conf.vboxnet13.arp_filter": "0",
  "net.ipv4.conf.vboxnet13.arp_ignore": "0",
  "net.ipv4.conf.vboxnet13.arp_notify": "0",
  "net.ipv4.conf.vboxnet13.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet13.bootp_relay": "0",
  "net.ipv4.conf.vboxnet13.disable_policy": "0",
  "net.ipv4.conf.vboxnet13.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet13.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet13.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet13.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet13.forwarding": "1",
  "net.ipv4.conf.vboxnet13.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet13.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet13.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet13.log_martians": "0",
  "net.ipv4.conf.vboxnet13.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet13.medium_id": "0",
  "net.ipv4.conf.vboxnet13.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet13.proxy_arp": "0",
  "net.ipv4.conf.vboxnet13.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet13.route_localnet": "0",
  "net.ipv4.conf.vboxnet13.rp_filter": "2",
  "net.ipv4.conf.vboxnet13.secure_redirects": "1",
  "net.ipv4.conf.vboxnet13.send_redirects": "1",
  "net.ipv4.conf.vboxnet13.shared_media": "1",
  "net.ipv4.conf.vboxnet13.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet13.tag": "0",
  "net.ipv4.conf.vboxnet2.accept_local": "0",
  "net.ipv4.conf.vboxnet2.accept_redirects": "1",
  "net.ipv4.conf.vboxnet2.accept_source_route": "1",
  "net.ipv4.conf.vboxnet2.arp_accept": "0",
  "net.ipv4.conf.vboxnet2.arp_announce": "0",
  "net.ipv4.conf.vboxnet2.arp_filter": "0",
  "net.ipv4.conf.vboxnet2.arp_ignore": "0",
  "net.ipv4.conf.vboxnet2.arp_notify": "0",
  "net.ipv4.conf.vboxnet2.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet2.bootp_relay": "0",
  "net.ipv4.conf.vboxnet2.disable_policy": "0",
  "net.ipv4.conf.vboxnet2.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet2.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet2.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet2.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet2.forwarding": "1",
  "net.ipv4.conf.vboxnet2.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet2.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet2.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet2.log_martians": "0",
  "net.ipv4.conf.vboxnet2.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet2.medium_id": "0",
  "net.ipv4.conf.vboxnet2.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet2.proxy_arp": "0",
  "net.ipv4.conf.vboxnet2.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet2.route_localnet": "0",
  "net.ipv4.conf.vboxnet2.rp_filter": "2",
  "net.ipv4.conf.vboxnet2.secure_redirects": "1",
  "net.ipv4.conf.vboxnet2.send_redirects": "1",
  "net.ipv4.conf.vboxnet2.shared_media": "1",
  "net.ipv4.conf.vboxnet2.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet2.tag": "0",
  "net.ipv4.conf.vboxnet3.accept_local": "0",
  "net.ipv4.conf.vboxnet3.accept_redirects": "1",
  "net.ipv4.conf.vboxnet3.accept_source_route": "1",
  "net.ipv4.conf.vboxnet3.arp_accept": "0",
  "net.ipv4.conf.vboxnet3.arp_announce": "0",
  "net.ipv4.conf.vboxnet3.arp_filter": "0",
  "net.ipv4.conf.vboxnet3.arp_ignore": "0",
  "net.ipv4.conf.vboxnet3.arp_notify": "0",
  "net.ipv4.conf.vboxnet3.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet3.bootp_relay": "0",
  "net.ipv4.conf.vboxnet3.disable_policy": "0",
  "net.ipv4.conf.vboxnet3.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet3.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet3.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet3.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet3.forwarding": "1",
  "net.ipv4.conf.vboxnet3.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet3.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet3.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet3.log_martians": "0",
  "net.ipv4.conf.vboxnet3.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet3.medium_id": "0",
  "net.ipv4.conf.vboxnet3.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet3.proxy_arp": "0",
  "net.ipv4.conf.vboxnet3.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet3.route_localnet": "0",
  "net.ipv4.conf.vboxnet3.rp_filter": "2",
  "net.ipv4.conf.vboxnet3.secure_redirects": "1",
  "net.ipv4.conf.vboxnet3.send_redirects": "1",
  "net.ipv4.conf.vboxnet3.shared_media": "1",
  "net.ipv4.conf.vboxnet3.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet3.tag": "0",
  "net.ipv4.conf.vboxnet4.accept_local": "0",
  "net.ipv4.conf.vboxnet4.accept_redirects": "1",
  "net.ipv4.conf.vboxnet4.accept_source_route": "1",
  "net.ipv4.conf.vboxnet4.arp_accept": "0",
  "net.ipv4.conf.vboxnet4.arp_announce": "0",
  "net.ipv4.conf.vboxnet4.arp_filter": "0",
  "net.ipv4.conf.vboxnet4.arp_ignore": "0",
  "net.ipv4.conf.vboxnet4.arp_notify": "0",
  "net.ipv4.conf.vboxnet4.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet4.bootp_relay": "0",
  "net.ipv4.conf.vboxnet4.disable_policy": "0",
  "net.ipv4.conf.vboxnet4.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet4.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet4.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet4.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet4.forwarding": "1",
  "net.ipv4.conf.vboxnet4.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet4.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet4.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet4.log_martians": "0",
  "net.ipv4.conf.vboxnet4.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet4.medium_id": "0",
  "net.ipv4.conf.vboxnet4.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet4.proxy_arp": "0",
  "net.ipv4.conf.vboxnet4.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet4.route_localnet": "0",
  "net.ipv4.conf.vboxnet4.rp_filter": "2",
  "net.ipv4.conf.vboxnet4.secure_redirects": "1",
  "net.ipv4.conf.vboxnet4.send_redirects": "1",
  "net.ipv4.conf.vboxnet4.shared_media": "1",
  "net.ipv4.conf.vboxnet4.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet4.tag": "0",
  "net.ipv4.conf.vboxnet5.accept_local": "0",
  "net.ipv4.conf.vboxnet5.accept_redirects": "1",
  "net.ipv4.conf.vboxnet5.accept_source_route": "1",
  "net.ipv4.conf.vboxnet5.arp_accept": "0",
  "net.ipv4.conf.vboxnet5.arp_announce": "0",
  "net.ipv4.conf.vboxnet5.arp_filter": "0",
  "net.ipv4.conf.vboxnet5.arp_ignore": "0",
  "net.ipv4.conf.vboxnet5.arp_notify": "0",
  "net.ipv4.conf.vboxnet5.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet5.bootp_relay": "0",
  "net.ipv4.conf.vboxnet5.disable_policy": "0",
  "net.ipv4.conf.vboxnet5.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet5.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet5.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet5.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet5.forwarding": "1",
  "net.ipv4.conf.vboxnet5.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet5.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet5.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet5.log_martians": "0",
  "net.ipv4.conf.vboxnet5.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet5.medium_id": "0",
  "net.ipv4.conf.vboxnet5.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet5.proxy_arp": "0",
  "net.ipv4.conf.vboxnet5.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet5.route_localnet": "0",
  "net.ipv4.conf.vboxnet5.rp_filter": "2",
  "net.ipv4.conf.vboxnet5.secure_redirects": "1",
  "net.ipv4.conf.vboxnet5.send_redirects": "1",
  "net.ipv4.conf.vboxnet5.shared_media": "1",
  "net.ipv4.conf.vboxnet5.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet5.tag": "0",
  "net.ipv4.conf.vboxnet6.accept_local": "0",
  "net.ipv4.conf.vboxnet6.accept_redirects": "1",
  "net.ipv4.conf.vboxnet6.accept_source_route": "1",
  "net.ipv4.conf.vboxnet6.arp_accept": "0",
  "net.ipv4.conf.vboxnet6.arp_announce": "0",
  "net.ipv4.conf.vboxnet6.arp_filter": "0",
  "net.ipv4.conf.vboxnet6.arp_ignore": "0",
  "net.ipv4.conf.vboxnet6.arp_notify": "0",
  "net.ipv4.conf.vboxnet6.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet6.bootp_relay": "0",
  "net.ipv4.conf.vboxnet6.disable_policy": "0",
  "net.ipv4.conf.vboxnet6.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet6.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet6.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet6.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet6.forwarding": "1",
  "net.ipv4.conf.vboxnet6.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet6.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet6.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet6.log_martians": "0",
  "net.ipv4.conf.vboxnet6.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet6.medium_id": "0",
  "net.ipv4.conf.vboxnet6.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet6.proxy_arp": "0",
  "net.ipv4.conf.vboxnet6.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet6.route_localnet": "0",
  "net.ipv4.conf.vboxnet6.rp_filter": "2",
  "net.ipv4.conf.vboxnet6.secure_redirects": "1",
  "net.ipv4.conf.vboxnet6.send_redirects": "1",
  "net.ipv4.conf.vboxnet6.shared_media": "1",
  "net.ipv4.conf.vboxnet6.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet6.tag": "0",
  "net.ipv4.conf.vboxnet7.accept_local": "0",
  "net.ipv4.conf.vboxnet7.accept_redirects": "1",
  "net.ipv4.conf.vboxnet7.accept_source_route": "1",
  "net.ipv4.conf.vboxnet7.arp_accept": "0",
  "net.ipv4.conf.vboxnet7.arp_announce": "0",
  "net.ipv4.conf.vboxnet7.arp_filter": "0",
  "net.ipv4.conf.vboxnet7.arp_ignore": "0",
  "net.ipv4.conf.vboxnet7.arp_notify": "0",
  "net.ipv4.conf.vboxnet7.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet7.bootp_relay": "0",
  "net.ipv4.conf.vboxnet7.disable_policy": "0",
  "net.ipv4.conf.vboxnet7.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet7.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet7.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet7.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet7.forwarding": "1",
  "net.ipv4.conf.vboxnet7.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet7.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet7.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet7.log_martians": "0",
  "net.ipv4.conf.vboxnet7.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet7.medium_id": "0",
  "net.ipv4.conf.vboxnet7.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet7.proxy_arp": "0",
  "net.ipv4.conf.vboxnet7.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet7.route_localnet": "0",
  "net.ipv4.conf.vboxnet7.rp_filter": "2",
  "net.ipv4.conf.vboxnet7.secure_redirects": "1",
  "net.ipv4.conf.vboxnet7.send_redirects": "1",
  "net.ipv4.conf.vboxnet7.shared_media": "1",
  "net.ipv4.conf.vboxnet7.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet7.tag": "0",
  "net.ipv4.conf.vboxnet8.accept_local": "0",
  "net.ipv4.conf.vboxnet8.accept_redirects": "1",
  "net.ipv4.conf.vboxnet8.accept_source_route": "1",
  "net.ipv4.conf.vboxnet8.arp_accept": "0",
  "net.ipv4.conf.vboxnet8.arp_announce": "0",
  "net.ipv4.conf.vboxnet8.arp_filter": "0",
  "net.ipv4.conf.vboxnet8.arp_ignore": "0",
  "net.ipv4.conf.vboxnet8.arp_notify": "0",
  "net.ipv4.conf.vboxnet8.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet8.bootp_relay": "0",
  "net.ipv4.conf.vboxnet8.disable_policy": "0",
  "net.ipv4.conf.vboxnet8.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet8.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet8.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet8.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet8.forwarding": "1",
  "net.ipv4.conf.vboxnet8.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet8.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet8.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet8.log_martians": "0",
  "net.ipv4.conf.vboxnet8.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet8.medium_id": "0",
  "net.ipv4.conf.vboxnet8.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet8.proxy_arp": "0",
  "net.ipv4.conf.vboxnet8.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet8.route_localnet": "0",
  "net.ipv4.conf.vboxnet8.rp_filter": "2",
  "net.ipv4.conf.vboxnet8.secure_redirects": "1",
  "net.ipv4.conf.vboxnet8.send_redirects": "1",
  "net.ipv4.conf.vboxnet8.shared_media": "1",
  "net.ipv4.conf.vboxnet8.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet8.tag": "0",
  "net.ipv4.conf.vboxnet9.accept_local": "0",
  "net.ipv4.conf.vboxnet9.accept_redirects": "1",
  "net.ipv4.conf.vboxnet9.accept_source_route": "1",
  "net.ipv4.conf.vboxnet9.arp_accept": "0",
  "net.ipv4.conf.vboxnet9.arp_announce": "0",
  "net.ipv4.conf.vboxnet9.arp_filter": "0",
  "net.ipv4.conf.vboxnet9.arp_ignore": "0",
  "net.ipv4.conf.vboxnet9.arp_notify": "0",
  "net.ipv4.conf.vboxnet9.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet9.bootp_relay": "0",
  "net.ipv4.conf.vboxnet9.disable_policy": "0",
  "net.ipv4.conf.vboxnet9.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet9.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet9.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet9.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet9.forwarding": "1",
  "net.ipv4.conf.vboxnet9.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet9.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet9.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet9.log_martians": "0",
  "net.ipv4.conf.vboxnet9.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet9.medium_id": "0",
  "net.ipv4.conf.vboxnet9.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet9.proxy_arp": "0",
  "net.ipv4.conf.vboxnet9.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet9.route_localnet": "0",
  "net.ipv4.conf.vboxnet9.rp_filter": "2",
  "net.ipv4.conf.vboxnet9.secure_redirects": "1",
  "net.ipv4.conf.vboxnet9.send_redirects": "1",
  "net.ipv4.conf.vboxnet9.shared_media": "1",
  "net.ipv4.conf.vboxnet9.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet9.tag": "0",
  "net.ipv4.conf.virbr0-nic.accept_local": "0",
  "net.ipv4.conf.virbr0-nic.accept_redirects": "1",
  "net.ipv4.conf.virbr0-nic.accept_source_route": "1",
  "net.ipv4.conf.virbr0-nic.arp_accept": "0",
  "net.ipv4.conf.virbr0-nic.arp_announce": "0",
  "net.ipv4.conf.virbr0-nic.arp_filter": "0",
  "net.ipv4.conf.virbr0-nic.arp_ignore": "0",
  "net.ipv4.conf.virbr0-nic.arp_notify": "0",
  "net.ipv4.conf.virbr0-nic.bc_forwarding": "0",
  "net.ipv4.conf.virbr0-nic.bootp_relay": "0",
  "net.ipv4.conf.virbr0-nic.disable_policy": "0",
  "net.ipv4.conf.virbr0-nic.disable_xfrm": "0",
  "net.ipv4.conf.virbr0-nic.drop_gratuitous_arp": "0",
  "net.ipv4.conf.virbr0-nic.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.virbr0-nic.force_igmp_version": "0",
  "net.ipv4.conf.virbr0-nic.forwarding": "1",
  "net.ipv4.conf.virbr0-nic.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.virbr0-nic.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.virbr0-nic.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.virbr0-nic.log_martians": "0",
  "net.ipv4.conf.virbr0-nic.mc_forwarding": "0",
  "net.ipv4.conf.virbr0-nic.medium_id": "0",
  "net.ipv4.conf.virbr0-nic.promote_secondaries": "1",
  "net.ipv4.conf.virbr0-nic.proxy_arp": "0",
  "net.ipv4.conf.virbr0-nic.proxy_arp_pvlan": "0",
  "net.ipv4.conf.virbr0-nic.route_localnet": "0",
  "net.ipv4.conf.virbr0-nic.rp_filter": "2",
  "net.ipv4.conf.virbr0-nic.secure_redirects": "1",
  "net.ipv4.conf.virbr0-nic.send_redirects": "1",
  "net.ipv4.conf.virbr0-nic.shared_media": "1",
  "net.ipv4.conf.virbr0-nic.src_valid_mark": "0",
  "net.ipv4.conf.virbr0-nic.tag": "0",
  "net.ipv4.conf.virbr0.accept_local": "0",
  "net.ipv4.conf.virbr0.accept_redirects": "1",
  "net.ipv4.conf.virbr0.accept_source_route": "1",
  "net.ipv4.conf.virbr0.arp_accept": "0",
  "net.ipv4.conf.virbr0.arp_announce": "0",
  "net.ipv4.conf.virbr0.arp_filter": "0",
  "net.ipv4.conf.virbr0.arp_ignore": "0",
  "net.ipv4.conf.virbr0.arp_notify": "0",
  "net.ipv4.conf.virbr0.bc_forwarding": "0",
  "net.ipv4.conf.virbr0.bootp_relay": "0",
  "net.ipv4.conf.virbr0.disable_policy": "0",
  "net.ipv4.conf.virbr0.disable_xfrm": "0",
  "net.ipv4.conf.virbr0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.virbr0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.virbr0.force_igmp_version": "0",
  "net.ipv4.conf.virbr0.forwarding": "1",
  "net.ipv4.conf.virbr0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.virbr0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.virbr0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.virbr0.log_martians": "0",
  "net.ipv4.conf.virbr0.mc_forwarding": "0",
  "net.ipv4.conf.virbr0.medium_id": "0",
  "net.ipv4.conf.virbr0.promote_secondaries": "1",
  "net.ipv4.conf.virbr0.proxy_arp": "0",
  "net.ipv4.conf.virbr0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.virbr0.route_localnet": "0",
  "net.ipv4.conf.virbr0.rp_filter": "2",
  "net.ipv4.conf.virbr0.secure_redirects": "1",
  "net.ipv4.conf.virbr0.send_redirects": "1",
  "net.ipv4.conf.virbr0.shared_media": "1",
  "net.ipv4.conf.virbr0.src_valid_mark": "0",
  "net.ipv4.conf.virbr0.tag": "0",
  "net.ipv4.conf.wlan0.accept_local": "0",
  "net.ipv4.conf.wlan0.accept_redirects": "1",
  "net.ipv4.conf.wlan0.accept_source_route": "1",
  "net.ipv4.conf.wlan0.arp_accept": "0",
  "net.ipv4.conf.wlan0.arp_announce": "0",
  "net.ipv4.conf.wlan0.arp_filter": "0",
  "net.ipv4.conf.wlan0.arp_ignore": "0",
  "net.ipv4.conf.wlan0.arp_notify": "0",
  "net.ipv4.conf.wlan0.bc_forwarding": "0",
  "net.ipv4.conf.wlan0.bootp_relay": "0",
  "net.ipv4.conf.wlan0.disable_policy": "0",
  "net.ipv4.conf.wlan0.disable_xfrm": "0",
  "net.ipv4.conf.wlan0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.wlan0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.wlan0.force_igmp_version": "0",
  "net.ipv4.conf.wlan0.forwarding": "1",
  "net.ipv4.conf.wlan0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.wlan0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.wlan0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.wlan0.log_martians": "0",
  "net.ipv4.conf.wlan0.mc_forwarding": "0",
  "net.ipv4.conf.wlan0.medium_id": "0",
  "net.ipv4.conf.wlan0.promote_secondaries": "1",
  "net.ipv4.conf.wlan0.proxy_arp": "0",
  "net.ipv4.conf.wlan0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.wlan0.route_localnet": "0",
  "net.ipv4.conf.wlan0.rp_filter": "2",
  "net.ipv4.conf.wlan0.secure_redirects": "1",
  "net.ipv4.conf.wlan0.send_redirects": "1",
  "net.ipv4.conf.wlan0.shared_media": "1",
  "net.ipv4.conf.wlan0.src_valid_mark": "0",
  "net.ipv4.conf.wlan0.tag": "0",
  "net.ipv4.fib_multipath_hash_policy": "0",
  "net.ipv4.fib_multipath_use_neigh": "0",
  "net.ipv4.fib_sync_mem": "524288",
  "net.ipv4.fwmark_reflect": "0",
  "net.ipv4.icmp_echo_ignore_all": "0",
  "net.ipv4.icmp_echo_ignore_broadcasts": "1",
  "net.ipv4.icmp_errors_use_inbound_ifaddr": "0",
  "net.ipv4.icmp_ignore_bogus_error_responses": "1",
  "net.ipv4.icmp_msgs_burst": "50",
  "net.ipv4.icmp_msgs_per_sec": "1000",
  "net.ipv4.icmp_ratelimit": "1000",
  "net.ipv4.icmp_ratemask": "6168",
  "net.ipv4.igmp_link_local_mcast_reports": "1",
  "net.ipv4.igmp_max_memberships": "20",
  "net.ipv4.igmp_max_msf": "10",
  "net.ipv4.igmp_qrv": "2",
  "net.ipv4.inet_peer_maxttl": "600",
  "net.ipv4.inet_peer_minttl": "120",
  "net.ipv4.inet_peer_threshold": "65664",
  "net.ipv4.ip_default_ttl": "64",
  "net.ipv4.ip_dynaddr": "0",
  "net.ipv4.ip_early_demux": "1",
  "net.ipv4.ip_forward": "1",
  "net.ipv4.ip_forward_update_priority": "1",
  "net.ipv4.ip_forward_use_pmtu": "0",
  "net.ipv4.ip_local_port_range": "32768\t60999",
  "net.ipv4.ip_local_reserved_ports": "",
  "net.ipv4.ip_no_pmtu_disc": "0",
  "net.ipv4.ip_nonlocal_bind": "0",
  "net.ipv4.ip_unprivileged_port_start": "1024",
  "net.ipv4.ipfrag_high_thresh": "4194304",
  "net.ipv4.ipfrag_low_thresh": "3145728",
  "net.ipv4.ipfrag_max_dist": "64",
  "net.ipv4.ipfrag_secret_interval": "0",
  "net.ipv4.ipfrag_time": "30",
  "net.ipv4.neigh.default.anycast_delay": "100",
  "net.ipv4.neigh.default.app_solicit": "0",
  "net.ipv4.neigh.default.base_reachable_time": "30",
  "net.ipv4.neigh.default.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.default.delay_first_probe_time": "5",
  "net.ipv4.neigh.default.gc_interval": "30",
  "net.ipv4.neigh.default.gc_stale_time": "60",
  "net.ipv4.neigh.default.gc_thresh1": "128",
  "net.ipv4.neigh.default.gc_thresh2": "512",
  "net.ipv4.neigh.default.gc_thresh3": "1024",
  "net.ipv4.neigh.default.locktime": "100",
  "net.ipv4.neigh.default.mcast_resolicit": "0",
  "net.ipv4.neigh.default.mcast_solicit": "3",
  "net.ipv4.neigh.default.proxy_delay": "80",
  "net.ipv4.neigh.default.proxy_qlen": "64",
  "net.ipv4.neigh.default.retrans_time": "100",
  "net.ipv4.neigh.default.retrans_time_ms": "1000",
  "net.ipv4.neigh.default.ucast_solicit": "3",
  "net.ipv4.neigh.default.unres_qlen": "101",
  "net.ipv4.neigh.default.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.docker0.anycast_delay": "100",
  "net.ipv4.neigh.docker0.app_solicit": "0",
  "net.ipv4.neigh.docker0.base_reachable_time": "30",
  "net.ipv4.neigh.docker0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.docker0.delay_first_probe_time": "5",
  "net.ipv4.neigh.docker0.gc_stale_time": "60",
  "net.ipv4.neigh.docker0.locktime": "100",
  "net.ipv4.neigh.docker0.mcast_resolicit": "0",
  "net.ipv4.neigh.docker0.mcast_solicit": "3",
  "net.ipv4.neigh.docker0.proxy_delay": "80",
  "net.ipv4.neigh.docker0.proxy_qlen": "64",
  "net.ipv4.neigh.docker0.retrans_time": "100",
  "net.ipv4.neigh.docker0.retrans_time_ms": "1000",
  "net.ipv4.neigh.docker0.ucast_solicit": "3",
  "net.ipv4.neigh.docker0.unres_qlen": "101",
  "net.ipv4.neigh.docker0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.eth0.anycast_delay": "100",
  "net.ipv4.neigh.eth0.app_solicit": "0",
  "net.ipv4.neigh.eth0.base_reachable_time": "30",
  "net.ipv4.neigh.eth0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.eth0.delay_first_probe_time": "5",
  "net.ipv4.neigh.eth0.gc_stale_time": "60",
  "net.ipv4.neigh.eth0.locktime": "100",
  "net.ipv4.neigh.eth0.mcast_resolicit": "0",
  "net.ipv4.neigh.eth0.mcast_solicit": "3",
  "net.ipv4.neigh.eth0.proxy_delay": "80",
  "net.ipv4.neigh.eth0.proxy_qlen": "64",
  "net.ipv4.neigh.eth0.retrans_time": "100",
  "net.ipv4.neigh.eth0.retrans_time_ms": "1000",
  "net.ipv4.neigh.eth0.ucast_solicit": "3",
  "net.ipv4.neigh.eth0.unres_qlen": "101",
  "net.ipv4.neigh.eth0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.lo.anycast_delay": "100",
  "net.ipv4.neigh.lo.app_solicit": "0",
  "net.ipv4.neigh.lo.base_reachable_time": "30",
  "net.ipv4.neigh.lo.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.lo.delay_first_probe_time": "5",
  "net.ipv4.neigh.lo.gc_stale_time": "60",
  "net.ipv4.neigh.lo.locktime": "100",
  "net.ipv4.neigh.lo.mcast_resolicit": "0",
  "net.ipv4.neigh.lo.mcast_solicit": "3",
  "net.ipv4.neigh.lo.proxy_delay": "80",
  "net.ipv4.neigh.lo.proxy_qlen": "64",
  "net.ipv4.neigh.lo.retrans_time": "100",
  "net.ipv4.neigh.lo.retrans_time_ms": "1000",
  "net.ipv4.neigh.lo.ucast_solicit": "3",
  "net.ipv4.neigh.lo.unres_qlen": "101",
  "net.ipv4.neigh.lo.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.tun0.anycast_delay": "100",
  "net.ipv4.neigh.tun0.app_solicit": "0",
  "net.ipv4.neigh.tun0.base_reachable_time": "30",
  "net.ipv4.neigh.tun0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.tun0.delay_first_probe_time": "5",
  "net.ipv4.neigh.tun0.gc_stale_time": "60",
  "net.ipv4.neigh.tun0.locktime": "100",
  "net.ipv4.neigh.tun0.mcast_resolicit": "0",
  "net.ipv4.neigh.tun0.mcast_solicit": "3",
  "net.ipv4.neigh.tun0.proxy_delay": "80",
  "net.ipv4.neigh.tun0.proxy_qlen": "64",
  "net.ipv4.neigh.tun0.retrans_time": "100",
  "net.ipv4.neigh.tun0.retrans_time_ms": "1000",
  "net.ipv4.neigh.tun0.ucast_solicit": "3",
  "net.ipv4.neigh.tun0.unres_qlen": "101",
  "net.ipv4.neigh.tun0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet0.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet0.app_solicit": "0",
  "net.ipv4.neigh.vboxnet0.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet0.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet0.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet0.locktime": "100",
  "net.ipv4.neigh.vboxnet0.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet0.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet0.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet0.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet0.retrans_time": "100",
  "net.ipv4.neigh.vboxnet0.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet0.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet0.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet1.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet1.app_solicit": "0",
  "net.ipv4.neigh.vboxnet1.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet1.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet1.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet1.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet1.locktime": "100",
  "net.ipv4.neigh.vboxnet1.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet1.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet1.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet1.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet1.retrans_time": "100",
  "net.ipv4.neigh.vboxnet1.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet1.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet1.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet1.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet10.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet10.app_solicit": "0",
  "net.ipv4.neigh.vboxnet10.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet10.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet10.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet10.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet10.locktime": "100",
  "net.ipv4.neigh.vboxnet10.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet10.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet10.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet10.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet10.retrans_time": "100",
  "net.ipv4.neigh.vboxnet10.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet10.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet10.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet10.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet11.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet11.app_solicit": "0",
  "net.ipv4.neigh.vboxnet11.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet11.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet11.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet11.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet11.locktime": "100",
  "net.ipv4.neigh.vboxnet11.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet11.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet11.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet11.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet11.retrans_time": "100",
  "net.ipv4.neigh.vboxnet11.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet11.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet11.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet11.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet12.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet12.app_solicit": "0",
  "net.ipv4.neigh.vboxnet12.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet12.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet12.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet12.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet12.locktime": "100",
  "net.ipv4.neigh.vboxnet12.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet12.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet12.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet12.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet12.retrans_time": "100",
  "net.ipv4.neigh.vboxnet12.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet12.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet12.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet12.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet13.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet13.app_solicit": "0",
  "net.ipv4.neigh.vboxnet13.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet13.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet13.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet13.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet13.locktime": "100",
  "net.ipv4.neigh.vboxnet13.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet13.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet13.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet13.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet13.retrans_time": "100",
  "net.ipv4.neigh.vboxnet13.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet13.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet13.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet13.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet2.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet2.app_solicit": "0",
  "net.ipv4.neigh.vboxnet2.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet2.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet2.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet2.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet2.locktime": "100",
  "net.ipv4.neigh.vboxnet2.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet2.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet2.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet2.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet2.retrans_time": "100",
  "net.ipv4.neigh.vboxnet2.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet2.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet2.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet2.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet3.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet3.app_solicit": "0",
  "net.ipv4.neigh.vboxnet3.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet3.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet3.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet3.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet3.locktime": "100",
  "net.ipv4.neigh.vboxnet3.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet3.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet3.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet3.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet3.retrans_time": "100",
  "net.ipv4.neigh.vboxnet3.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet3.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet3.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet3.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet4.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet4.app_solicit": "0",
  "net.ipv4.neigh.vboxnet4.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet4.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet4.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet4.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet4.locktime": "100",
  "net.ipv4.neigh.vboxnet4.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet4.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet4.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet4.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet4.retrans_time": "100",
  "net.ipv4.neigh.vboxnet4.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet4.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet4.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet4.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet5.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet5.app_solicit": "0",
  "net.ipv4.neigh.vboxnet5.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet5.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet5.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet5.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet5.locktime": "100",
  "net.ipv4.neigh.vboxnet5.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet5.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet5.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet5.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet5.retrans_time": "100",
  "net.ipv4.neigh.vboxnet5.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet5.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet5.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet5.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet6.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet6.app_solicit": "0",
  "net.ipv4.neigh.vboxnet6.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet6.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet6.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet6.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet6.locktime": "100",
  "net.ipv4.neigh.vboxnet6.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet6.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet6.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet6.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet6.retrans_time": "100",
  "net.ipv4.neigh.vboxnet6.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet6.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet6.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet6.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet7.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet7.app_solicit": "0",
  "net.ipv4.neigh.vboxnet7.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet7.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet7.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet7.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet7.locktime": "100",
  "net.ipv4.neigh.vboxnet7.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet7.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet7.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet7.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet7.retrans_time": "100",
  "net.ipv4.neigh.vboxnet7.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet7.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet7.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet7.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet8.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet8.app_solicit": "0",
  "net.ipv4.neigh.vboxnet8.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet8.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet8.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet8.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet8.locktime": "100",
  "net.ipv4.neigh.vboxnet8.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet8.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet8.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet8.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet8.retrans_time": "100",
  "net.ipv4.neigh.vboxnet8.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet8.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet8.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet8.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet9.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet9.app_solicit": "0",
  "net.ipv4.neigh.vboxnet9.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet9.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet9.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet9.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet9.locktime": "100",
  "net.ipv4.neigh.vboxnet9.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet9.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet9.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet9.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet9.retrans_time": "100",
  "net.ipv4.neigh.vboxnet9.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet9.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet9.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet9.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.virbr0-nic.anycast_delay": "100",
  "net.ipv4.neigh.virbr0-nic.app_solicit": "0",
  "net.ipv4.neigh.virbr0-nic.base_reachable_time": "30",
  "net.ipv4.neigh.virbr0-nic.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.virbr0-nic.delay_first_probe_time": "5",
  "net.ipv4.neigh.virbr0-nic.gc_stale_time": "60",
  "net.ipv4.neigh.virbr0-nic.locktime": "100",
  "net.ipv4.neigh.virbr0-nic.mcast_resolicit": "0",
  "net.ipv4.neigh.virbr0-nic.mcast_solicit": "3",
  "net.ipv4.neigh.virbr0-nic.proxy_delay": "80",
  "net.ipv4.neigh.virbr0-nic.proxy_qlen": "64",
  "net.ipv4.neigh.virbr0-nic.retrans_time": "100",
  "net.ipv4.neigh.virbr0-nic.retrans_time_ms": "1000",
  "net.ipv4.neigh.virbr0-nic.ucast_solicit": "3",
  "net.ipv4.neigh.virbr0-nic.unres_qlen": "101",
  "net.ipv4.neigh.virbr0-nic.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.virbr0.anycast_delay": "100",
  "net.ipv4.neigh.virbr0.app_solicit": "0",
  "net.ipv4.neigh.virbr0.base_reachable_time": "30",
  "net.ipv4.neigh.virbr0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.virbr0.delay_first_probe_time": "5",
  "net.ipv4.neigh.virbr0.gc_stale_time": "60",
  "net.ipv4.neigh.virbr0.locktime": "100",
  "net.ipv4.neigh.virbr0.mcast_resolicit": "0",
  "net.ipv4.neigh.virbr0.mcast_solicit": "3",
  "net.ipv4.neigh.virbr0.proxy_delay": "80",
  "net.ipv4.neigh.virbr0.proxy_qlen": "64",
  "net.ipv4.neigh.virbr0.retrans_time": "100",
  "net.ipv4.neigh.virbr0.retrans_time_ms": "1000",
  "net.ipv4.neigh.virbr0.ucast_solicit": "3",
  "net.ipv4.neigh.virbr0.unres_qlen": "101",
  "net.ipv4.neigh.virbr0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.wlan0.anycast_delay": "100",
  "net.ipv4.neigh.wlan0.app_solicit": "0",
  "net.ipv4.neigh.wlan0.base_reachable_time": "30",
  "net.ipv4.neigh.wlan0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.wlan0.delay_first_probe_time": "5",
  "net.ipv4.neigh.wlan0.gc_stale_time": "60",
  "net.ipv4.neigh.wlan0.locktime": "100",
  "net.ipv4.neigh.wlan0.mcast_resolicit": "0",
  "net.ipv4.neigh.wlan0.mcast_solicit": "3",
  "net.ipv4.neigh.wlan0.proxy_delay": "80",
  "net.ipv4.neigh.wlan0.proxy_qlen": "64",
  "net.ipv4.neigh.wlan0.retrans_time": "100",
  "net.ipv4.neigh.wlan0.retrans_time_ms": "1000",
  "net.ipv4.neigh.wlan0.ucast_solicit": "3",
  "net.ipv4.neigh.wlan0.unres_qlen": "101",
  "net.ipv4.neigh.wlan0.unres_qlen_bytes": "212992",
  "net.ipv4.ping_group_range": "0\t2147483647",
  "net.ipv4.raw_l3mdev_accept": "1",
  "net.ipv4.route.error_burst": "5000",
  "net.ipv4.route.error_cost": "1000",
  "net.ipv4.route.gc_elasticity": "8",
  "net.ipv4.route.gc_interval": "60",
  "net.ipv4.route.gc_min_interval": "0",
  "net.ipv4.route.gc_min_interval_ms": "500",
  "net.ipv4.route.gc_thresh": "-1",
  "net.ipv4.route.gc_timeout": "300",
  "net.ipv4.route.max_size": "2147483647",
  "net.ipv4.route.min_adv_mss": "256",
  "net.ipv4.route.min_pmtu": "552",
  "net.ipv4.route.mtu_expires": "600",
  "net.ipv4.route.redirect_load": "20",
  "net.ipv4.route.redirect_number": "9",
  "net.ipv4.route.redirect_silence": "20480",
  "net.ipv4.tcp_abort_on_overflow": "0",
  "net.ipv4.tcp_adv_win_scale": "1",
  "net.ipv4.tcp_allowed_congestion_control": "reno cubic",
  "net.ipv4.tcp_app_win": "31",
  "net.ipv4.tcp_autocorking": "1",
  "net.ipv4.tcp_available_congestion_control": "reno cubic",
  "net.ipv4.tcp_available_ulp": "",
  "net.ipv4.tcp_base_mss": "1024",
  "net.ipv4.tcp_challenge_ack_limit": "1000",
  "net.ipv4.tcp_comp_sack_delay_ns": "1000000",
  "net.ipv4.tcp_comp_sack_nr": "44",
  "net.ipv4.tcp_congestion_control": "cubic",
  "net.ipv4.tcp_dsack": "1",
  "net.ipv4.tcp_early_demux": "1",
  "net.ipv4.tcp_early_retrans": "3",
  "net.ipv4.tcp_ecn": "2",
  "net.ipv4.tcp_ecn_fallback": "1",
  "net.ipv4.tcp_fack": "0",
  "net.ipv4.tcp_fastopen": "1",
  "net.ipv4.tcp_fastopen_blackhole_timeout_sec": "3600",
  "net.ipv4.tcp_fin_timeout": "60",
  "net.ipv4.tcp_frto": "2",
  "net.ipv4.tcp_fwmark_accept": "0",
  "net.ipv4.tcp_invalid_ratelimit": "500",
  "net.ipv4.tcp_keepalive_intvl": "75",
  "net.ipv4.tcp_keepalive_probes": "9",
  "net.ipv4.tcp_keepalive_time": "7200",
  "net.ipv4.tcp_l3mdev_accept": "0",
  "net.ipv4.tcp_limit_output_bytes": "1048576",
  "net.ipv4.tcp_low_latency": "0",
  "net.ipv4.tcp_max_orphans": "131072",
  "net.ipv4.tcp_max_reordering": "300",
  "net.ipv4.tcp_max_syn_backlog": "2048",
  "net.ipv4.tcp_max_tw_buckets": "131072",
  "net.ipv4.tcp_mem": "381744\t508994\t763488",
  "net.ipv4.tcp_min_rtt_wlen": "300",
  "net.ipv4.tcp_min_snd_mss": "48",
  "net.ipv4.tcp_min_tso_segs": "2",
  "net.ipv4.tcp_moderate_rcvbuf": "1",
  "net.ipv4.tcp_mtu_probe_floor": "48",
  "net.ipv4.tcp_mtu_probing": "0",
  "net.ipv4.tcp_no_metrics_save": "0",
  "net.ipv4.tcp_notsent_lowat": "4294967295",
  "net.ipv4.tcp_orphan_retries": "0",
  "net.ipv4.tcp_pacing_ca_ratio": "120",
  "net.ipv4.tcp_pacing_ss_ratio": "200",
  "net.ipv4.tcp_probe_interval": "600",
  "net.ipv4.tcp_probe_threshold": "8",
  "net.ipv4.tcp_recovery": "1",
  "net.ipv4.tcp_reordering": "3",
  "net.ipv4.tcp_retrans_collapse": "1",
  "net.ipv4.tcp_retries1": "3",
  "net.ipv4.tcp_retries2": "15",
  "net.ipv4.tcp_rfc1337": "0",
  "net.ipv4.tcp_rmem": "4096\t131072\t6291456",
  "net.ipv4.tcp_rx_skb_cache": "0",
  "net.ipv4.tcp_sack": "1",
  "net.ipv4.tcp_slow_start_after_idle": "1",
  "net.ipv4.tcp_stdurg": "0",
  "net.ipv4.tcp_syn_retries": "6",
  "net.ipv4.tcp_synack_retries": "5",
  "net.ipv4.tcp_syncookies": "1",
  "net.ipv4.tcp_thin_linear_timeouts": "0",
  "net.ipv4.tcp_timestamps": "1",
  "net.ipv4.tcp_tso_win_divisor": "3",
  "net.ipv4.tcp_tw_reuse": "2",
  "net.ipv4.tcp_tx_skb_cache": "0",
  "net.ipv4.tcp_window_scaling": "1",
  "net.ipv4.tcp_wmem": "4096\t16384\t4194304",
  "net.ipv4.tcp_workaround_signed_windows": "0",
  "net.ipv4.udp_early_demux": "1",
  "net.ipv4.udp_l3mdev_accept": "0",
  "net.ipv4.udp_mem": "763491\t1017988\t1526982",
  "net.ipv4.udp_rmem_min": "4096",
  "net.ipv4.udp_wmem_min": "4096",
  "net.ipv4.xfrm4_gc_thresh": "32768",
  "net.ipv6.anycast_src_echo_reply": "0",
  "net.ipv6.auto_flowlabels": "1",
  "net.ipv6.bindv6only": "0",
  "net.ipv6.calipso_cache_bucket_size": "10",
  "net.ipv6.calipso_cache_enable": "1",
  "net.ipv6.conf.all.accept_dad": "0",
  "net.ipv6.conf.all.accept_ra": "1",
  "net.ipv6.conf.all.accept_ra_defrtr": "1",
  "net.ipv6.conf.all.accept_ra_from_local": "0",
  "net.ipv6.conf.all.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.all.accept_ra_mtu": "1",
  "net.ipv6.conf.all.accept_ra_pinfo": "1",
  "net.ipv6.conf.all.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.all.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.all.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.all.accept_redirects": "1",
  "net.ipv6.conf.all.accept_source_route": "0",
  "net.ipv6.conf.all.addr_gen_mode": "0",
  "net.ipv6.conf.all.autoconf": "1",
  "net.ipv6.conf.all.dad_transmits": "1",
  "net.ipv6.conf.all.disable_ipv6": "0",
  "net.ipv6.conf.all.disable_policy": "0",
  "net.ipv6.conf.all.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.all.drop_unsolicited_na": "0",
  "net.ipv6.conf.all.enhanced_dad": "1",
  "net.ipv6.conf.all.force_mld_version": "0",
  "net.ipv6.conf.all.force_tllao": "0",
  "net.ipv6.conf.all.forwarding": "0",
  "net.ipv6.conf.all.hop_limit": "64",
  "net.ipv6.conf.all.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.all.keep_addr_on_down": "0",
  "net.ipv6.conf.all.max_addresses": "16",
  "net.ipv6.conf.all.max_desync_factor": "600",
  "net.ipv6.conf.all.mc_forwarding": "0",
  "net.ipv6.conf.all.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.all.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.all.mtu": "1280",
  "net.ipv6.conf.all.ndisc_notify": "0",
  "net.ipv6.conf.all.ndisc_tclass": "0",
  "net.ipv6.conf.all.proxy_ndp": "0",
  "net.ipv6.conf.all.regen_max_retry": "3",
  "net.ipv6.conf.all.router_probe_interval": "60",
  "net.ipv6.conf.all.router_solicitation_delay": "1",
  "net.ipv6.conf.all.router_solicitation_interval": "4",
  "net.ipv6.conf.all.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.all.router_solicitations": "-1",
  "net.ipv6.conf.all.seg6_enabled": "0",
  "net.ipv6.conf.all.seg6_require_hmac": "0",
  "net.ipv6.conf.all.suppress_frag_ndisc": "1",
  "net.ipv6.conf.all.temp_prefered_lft": "86400",
  "net.ipv6.conf.all.temp_valid_lft": "604800",
  "net.ipv6.conf.all.use_oif_addrs_only": "0",
  "net.ipv6.conf.all.use_tempaddr": "2",
  "net.ipv6.conf.default.accept_dad": "1",
  "net.ipv6.conf.default.accept_ra": "1",
  "net.ipv6.conf.default.accept_ra_defrtr": "1",
  "net.ipv6.conf.default.accept_ra_from_local": "0",
  "net.ipv6.conf.default.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.default.accept_ra_mtu": "1",
  "net.ipv6.conf.default.accept_ra_pinfo": "1",
  "net.ipv6.conf.default.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.default.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.default.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.default.accept_redirects": "1",
  "net.ipv6.conf.default.accept_source_route": "0",
  "net.ipv6.conf.default.addr_gen_mode": "0",
  "net.ipv6.conf.default.autoconf": "1",
  "net.ipv6.conf.default.dad_transmits": "1",
  "net.ipv6.conf.default.disable_ipv6": "0",
  "net.ipv6.conf.default.disable_policy": "0",
  "net.ipv6.conf.default.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.default.drop_unsolicited_na": "0",
  "net.ipv6.conf.default.enhanced_dad": "1",
  "net.ipv6.conf.default.force_mld_version": "0",
  "net.ipv6.conf.default.force_tllao": "0",
  "net.ipv6.conf.default.forwarding": "0",
  "net.ipv6.conf.default.hop_limit": "64",
  "net.ipv6.conf.default.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.default.keep_addr_on_down": "0",
  "net.ipv6.conf.default.max_addresses": "16",
  "net.ipv6.conf.default.max_desync_factor": "600",
  "net.ipv6.conf.default.mc_forwarding": "0",
  "net.ipv6.conf.default.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.default.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.default.mtu": "1280",
  "net.ipv6.conf.default.ndisc_notify": "0",
  "net.ipv6.conf.default.ndisc_tclass": "0",
  "net.ipv6.conf.default.proxy_ndp": "0",
  "net.ipv6.conf.default.regen_max_retry": "3",
  "net.ipv6.conf.default.router_probe_interval": "60",
  "net.ipv6.conf.default.router_solicitation_delay": "1",
  "net.ipv6.conf.default.router_solicitation_interval": "4",
  "net.ipv6.conf.default.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.default.router_solicitations": "-1",
  "net.ipv6.conf.default.seg6_enabled": "0",
  "net.ipv6.conf.default.seg6_require_hmac": "0",
  "net.ipv6.conf.default.suppress_frag_ndisc": "1",
  "net.ipv6.conf.default.temp_prefered_lft": "86400",
  "net.ipv6.conf.default.temp_valid_lft": "604800",
  "net.ipv6.conf.default.use_oif_addrs_only": "0",
  "net.ipv6.conf.default.use_tempaddr": "2",
  "net.ipv6.conf.docker0.accept_dad": "1",
  "net.ipv6.conf.docker0.accept_ra": "1",
  "net.ipv6.conf.docker0.accept_ra_defrtr": "1",
  "net.ipv6.conf.docker0.accept_ra_from_local": "0",
  "net.ipv6.conf.docker0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.docker0.accept_ra_mtu": "1",
  "net.ipv6.conf.docker0.accept_ra_pinfo": "1",
  "net.ipv6.conf.docker0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.docker0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.docker0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.docker0.accept_redirects": "1",
  "net.ipv6.conf.docker0.accept_source_route": "0",
  "net.ipv6.conf.docker0.addr_gen_mode": "0",
  "net.ipv6.conf.docker0.autoconf": "1",
  "net.ipv6.conf.docker0.dad_transmits": "1",
  "net.ipv6.conf.docker0.disable_ipv6": "0",
  "net.ipv6.conf.docker0.disable_policy": "0",
  "net.ipv6.conf.docker0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.docker0.drop_unsolicited_na": "0",
  "net.ipv6.conf.docker0.enhanced_dad": "1",
  "net.ipv6.conf.docker0.force_mld_version": "0",
  "net.ipv6.conf.docker0.force_tllao": "0",
  "net.ipv6.conf.docker0.forwarding": "0",
  "net.ipv6.conf.docker0.hop_limit": "64",
  "net.ipv6.conf.docker0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.docker0.keep_addr_on_down": "0",
  "net.ipv6.conf.docker0.max_addresses": "16",
  "net.ipv6.conf.docker0.max_desync_factor": "600",
  "net.ipv6.conf.docker0.mc_forwarding": "0",
  "net.ipv6.conf.docker0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.docker0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.docker0.mtu": "1500",
  "net.ipv6.conf.docker0.ndisc_notify": "0",
  "net.ipv6.conf.docker0.ndisc_tclass": "0",
  "net.ipv6.conf.docker0.proxy_ndp": "0",
  "net.ipv6.conf.docker0.regen_max_retry": "3",
  "net.ipv6.conf.docker0.router_probe_interval": "60",
  "net.ipv6.conf.docker0.router_solicitation_delay": "1",
  "net.ipv6.conf.docker0.router_solicitation_interval": "4",
  "net.ipv6.conf.docker0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.docker0.router_solicitations": "-1",
  "net.ipv6.conf.docker0.seg6_enabled": "0",
  "net.ipv6.conf.docker0.seg6_require_hmac": "0",
  "net.ipv6.conf.docker0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.docker0.temp_prefered_lft": "86400",
  "net.ipv6.conf.docker0.temp_valid_lft": "604800",
  "net.ipv6.conf.docker0.use_oif_addrs_only": "0",
  "net.ipv6.conf.docker0.use_tempaddr": "2",
  "net.ipv6.conf.eth0.accept_dad": "1",
  "net.ipv6.conf.eth0.accept_ra": "0",
  "net.ipv6.conf.eth0.accept_ra_defrtr": "1",
  "net.ipv6.conf.eth0.accept_ra_from_local": "0",
  "net.ipv6.conf.eth0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.eth0.accept_ra_mtu": "1",
  "net.ipv6.conf.eth0.accept_ra_pinfo": "1",
  "net.ipv6.conf.eth0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.eth0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.eth0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.eth0.accept_redirects": "1",
  "net.ipv6.conf.eth0.accept_source_route": "0",
  "net.ipv6.conf.eth0.addr_gen_mode": "1",
  "net.ipv6.conf.eth0.autoconf": "1",
  "net.ipv6.conf.eth0.dad_transmits": "1",
  "net.ipv6.conf.eth0.disable_ipv6": "0",
  "net.ipv6.conf.eth0.disable_policy": "0",
  "net.ipv6.conf.eth0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.eth0.drop_unsolicited_na": "0",
  "net.ipv6.conf.eth0.enhanced_dad": "1",
  "net.ipv6.conf.eth0.force_mld_version": "0",
  "net.ipv6.conf.eth0.force_tllao": "0",
  "net.ipv6.conf.eth0.forwarding": "0",
  "net.ipv6.conf.eth0.hop_limit": "64",
  "net.ipv6.conf.eth0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.eth0.keep_addr_on_down": "0",
  "net.ipv6.conf.eth0.max_addresses": "16",
  "net.ipv6.conf.eth0.max_desync_factor": "600",
  "net.ipv6.conf.eth0.mc_forwarding": "0",
  "net.ipv6.conf.eth0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.eth0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.eth0.mtu": "1500",
  "net.ipv6.conf.eth0.ndisc_notify": "0",
  "net.ipv6.conf.eth0.ndisc_tclass": "0",
  "net.ipv6.conf.eth0.proxy_ndp": "0",
  "net.ipv6.conf.eth0.regen_max_retry": "3",
  "net.ipv6.conf.eth0.router_probe_interval": "60",
  "net.ipv6.conf.eth0.router_solicitation_delay": "1",
  "net.ipv6.conf.eth0.router_solicitation_interval": "4",
  "net.ipv6.conf.eth0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.eth0.router_solicitations": "-1",
  "net.ipv6.conf.eth0.seg6_enabled": "0",
  "net.ipv6.conf.eth0.seg6_require_hmac": "0",
  "net.ipv6.conf.eth0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.eth0.temp_prefered_lft": "86400",
  "net.ipv6.conf.eth0.temp_valid_lft": "604800",
  "net.ipv6.conf.eth0.use_oif_addrs_only": "0",
  "net.ipv6.conf.eth0.use_tempaddr": "0",
  "net.ipv6.conf.lo.accept_dad": "-1",
  "net.ipv6.conf.lo.accept_ra": "1",
  "net.ipv6.conf.lo.accept_ra_defrtr": "1",
  "net.ipv6.conf.lo.accept_ra_from_local": "0",
  "net.ipv6.conf.lo.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.lo.accept_ra_mtu": "1",
  "net.ipv6.conf.lo.accept_ra_pinfo": "1",
  "net.ipv6.conf.lo.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.lo.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.lo.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.lo.accept_redirects": "1",
  "net.ipv6.conf.lo.accept_source_route": "0",
  "net.ipv6.conf.lo.addr_gen_mode": "0",
  "net.ipv6.conf.lo.autoconf": "1",
  "net.ipv6.conf.lo.dad_transmits": "1",
  "net.ipv6.conf.lo.disable_ipv6": "0",
  "net.ipv6.conf.lo.disable_policy": "0",
  "net.ipv6.conf.lo.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.lo.drop_unsolicited_na": "0",
  "net.ipv6.conf.lo.enhanced_dad": "1",
  "net.ipv6.conf.lo.force_mld_version": "0",
  "net.ipv6.conf.lo.force_tllao": "0",
  "net.ipv6.conf.lo.forwarding": "0",
  "net.ipv6.conf.lo.hop_limit": "64",
  "net.ipv6.conf.lo.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.lo.keep_addr_on_down": "0",
  "net.ipv6.conf.lo.max_addresses": "16",
  "net.ipv6.conf.lo.max_desync_factor": "600",
  "net.ipv6.conf.lo.mc_forwarding": "0",
  "net.ipv6.conf.lo.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.lo.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.lo.mtu": "65536",
  "net.ipv6.conf.lo.ndisc_notify": "0",
  "net.ipv6.conf.lo.ndisc_tclass": "0",
  "net.ipv6.conf.lo.proxy_ndp": "0",
  "net.ipv6.conf.lo.regen_max_retry": "3",
  "net.ipv6.conf.lo.router_probe_interval": "60",
  "net.ipv6.conf.lo.router_solicitation_delay": "1",
  "net.ipv6.conf.lo.router_solicitation_interval": "4",
  "net.ipv6.conf.lo.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.lo.router_solicitations": "-1",
  "net.ipv6.conf.lo.seg6_enabled": "0",
  "net.ipv6.conf.lo.seg6_require_hmac": "0",
  "net.ipv6.conf.lo.suppress_frag_ndisc": "1",
  "net.ipv6.conf.lo.temp_prefered_lft": "86400",
  "net.ipv6.conf.lo.temp_valid_lft": "604800",
  "net.ipv6.conf.lo.use_oif_addrs_only": "0",
  "net.ipv6.conf.lo.use_tempaddr": "-1",
  "net.ipv6.conf.tun0.accept_dad": "-1",
  "net.ipv6.conf.tun0.accept_ra": "1",
  "net.ipv6.conf.tun0.accept_ra_defrtr": "1",
  "net.ipv6.conf.tun0.accept_ra_from_local": "0",
  "net.ipv6.conf.tun0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.tun0.accept_ra_mtu": "1",
  "net.ipv6.conf.tun0.accept_ra_pinfo": "1",
  "net.ipv6.conf.tun0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.tun0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.tun0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.tun0.accept_redirects": "1",
  "net.ipv6.conf.tun0.accept_source_route": "0",
  "net.ipv6.conf.tun0.addr_gen_mode": "3",
  "net.ipv6.conf.tun0.autoconf": "1",
  "net.ipv6.conf.tun0.dad_transmits": "1",
  "net.ipv6.conf.tun0.disable_ipv6": "0",
  "net.ipv6.conf.tun0.disable_policy": "0",
  "net.ipv6.conf.tun0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.tun0.drop_unsolicited_na": "0",
  "net.ipv6.conf.tun0.enhanced_dad": "1",
  "net.ipv6.conf.tun0.force_mld_version": "0",
  "net.ipv6.conf.tun0.force_tllao": "0",
  "net.ipv6.conf.tun0.forwarding": "0",
  "net.ipv6.conf.tun0.hop_limit": "64",
  "net.ipv6.conf.tun0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.tun0.keep_addr_on_down": "0",
  "net.ipv6.conf.tun0.max_addresses": "16",
  "net.ipv6.conf.tun0.max_desync_factor": "600",
  "net.ipv6.conf.tun0.mc_forwarding": "0",
  "net.ipv6.conf.tun0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.tun0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.tun0.mtu": "1500",
  "net.ipv6.conf.tun0.ndisc_notify": "0",
  "net.ipv6.conf.tun0.ndisc_tclass": "0",
  "net.ipv6.conf.tun0.proxy_ndp": "0",
  "net.ipv6.conf.tun0.regen_max_retry": "3",
  "net.ipv6.conf.tun0.router_probe_interval": "60",
  "net.ipv6.conf.tun0.router_solicitation_delay": "1",
  "net.ipv6.conf.tun0.router_solicitation_interval": "4",
  "net.ipv6.conf.tun0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.tun0.router_solicitations": "-1",
  "net.ipv6.conf.tun0.seg6_enabled": "0",
  "net.ipv6.conf.tun0.seg6_require_hmac": "0",
  "net.ipv6.conf.tun0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.tun0.temp_prefered_lft": "86400",
  "net.ipv6.conf.tun0.temp_valid_lft": "604800",
  "net.ipv6.conf.tun0.use_oif_addrs_only": "0",
  "net.ipv6.conf.tun0.use_tempaddr": "-1",
  "net.ipv6.conf.vboxnet0.accept_dad": "1",
  "net.ipv6.conf.vboxnet0.accept_ra": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet0.accept_redirects": "1",
  "net.ipv6.conf.vboxnet0.accept_source_route": "0",
  "net.ipv6.conf.vboxnet0.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet0.autoconf": "1",
  "net.ipv6.conf.vboxnet0.dad_transmits": "1",
  "net.ipv6.conf.vboxnet0.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet0.disable_policy": "0",
  "net.ipv6.conf.vboxnet0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet0.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet0.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet0.force_mld_version": "0",
  "net.ipv6.conf.vboxnet0.force_tllao": "0",
  "net.ipv6.conf.vboxnet0.forwarding": "0",
  "net.ipv6.conf.vboxnet0.hop_limit": "64",
  "net.ipv6.conf.vboxnet0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet0.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet0.max_addresses": "16",
  "net.ipv6.conf.vboxnet0.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet0.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet0.mtu": "1500",
  "net.ipv6.conf.vboxnet0.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet0.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet0.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet0.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet0.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet0.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet0.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet0.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet0.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet0.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet0.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet0.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet0.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet0.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet1.accept_dad": "1",
  "net.ipv6.conf.vboxnet1.accept_ra": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet1.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet1.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet1.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet1.accept_redirects": "1",
  "net.ipv6.conf.vboxnet1.accept_source_route": "0",
  "net.ipv6.conf.vboxnet1.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet1.autoconf": "1",
  "net.ipv6.conf.vboxnet1.dad_transmits": "1",
  "net.ipv6.conf.vboxnet1.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet1.disable_policy": "0",
  "net.ipv6.conf.vboxnet1.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet1.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet1.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet1.force_mld_version": "0",
  "net.ipv6.conf.vboxnet1.force_tllao": "0",
  "net.ipv6.conf.vboxnet1.forwarding": "0",
  "net.ipv6.conf.vboxnet1.hop_limit": "64",
  "net.ipv6.conf.vboxnet1.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet1.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet1.max_addresses": "16",
  "net.ipv6.conf.vboxnet1.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet1.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet1.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet1.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet1.mtu": "1500",
  "net.ipv6.conf.vboxnet1.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet1.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet1.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet1.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet1.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet1.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet1.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet1.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet1.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet1.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet1.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet1.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet1.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet1.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet1.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet1.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet10.accept_dad": "1",
  "net.ipv6.conf.vboxnet10.accept_ra": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet10.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet10.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet10.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet10.accept_redirects": "1",
  "net.ipv6.conf.vboxnet10.accept_source_route": "0",
  "net.ipv6.conf.vboxnet10.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet10.autoconf": "1",
  "net.ipv6.conf.vboxnet10.dad_transmits": "1",
  "net.ipv6.conf.vboxnet10.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet10.disable_policy": "0",
  "net.ipv6.conf.vboxnet10.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet10.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet10.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet10.force_mld_version": "0",
  "net.ipv6.conf.vboxnet10.force_tllao": "0",
  "net.ipv6.conf.vboxnet10.forwarding": "0",
  "net.ipv6.conf.vboxnet10.hop_limit": "64",
  "net.ipv6.conf.vboxnet10.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet10.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet10.max_addresses": "16",
  "net.ipv6.conf.vboxnet10.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet10.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet10.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet10.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet10.mtu": "1500",
  "net.ipv6.conf.vboxnet10.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet10.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet10.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet10.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet10.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet10.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet10.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet10.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet10.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet10.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet10.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet10.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet10.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet10.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet10.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet10.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet11.accept_dad": "1",
  "net.ipv6.conf.vboxnet11.accept_ra": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet11.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet11.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet11.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet11.accept_redirects": "1",
  "net.ipv6.conf.vboxnet11.accept_source_route": "0",
  "net.ipv6.conf.vboxnet11.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet11.autoconf": "1",
  "net.ipv6.conf.vboxnet11.dad_transmits": "1",
  "net.ipv6.conf.vboxnet11.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet11.disable_policy": "0",
  "net.ipv6.conf.vboxnet11.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet11.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet11.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet11.force_mld_version": "0",
  "net.ipv6.conf.vboxnet11.force_tllao": "0",
  "net.ipv6.conf.vboxnet11.forwarding": "0",
  "net.ipv6.conf.vboxnet11.hop_limit": "64",
  "net.ipv6.conf.vboxnet11.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet11.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet11.max_addresses": "16",
  "net.ipv6.conf.vboxnet11.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet11.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet11.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet11.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet11.mtu": "1500",
  "net.ipv6.conf.vboxnet11.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet11.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet11.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet11.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet11.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet11.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet11.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet11.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet11.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet11.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet11.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet11.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet11.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet11.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet11.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet11.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet12.accept_dad": "1",
  "net.ipv6.conf.vboxnet12.accept_ra": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet12.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet12.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet12.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet12.accept_redirects": "1",
  "net.ipv6.conf.vboxnet12.accept_source_route": "0",
  "net.ipv6.conf.vboxnet12.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet12.autoconf": "1",
  "net.ipv6.conf.vboxnet12.dad_transmits": "1",
  "net.ipv6.conf.vboxnet12.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet12.disable_policy": "0",
  "net.ipv6.conf.vboxnet12.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet12.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet12.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet12.force_mld_version": "0",
  "net.ipv6.conf.vboxnet12.force_tllao": "0",
  "net.ipv6.conf.vboxnet12.forwarding": "0",
  "net.ipv6.conf.vboxnet12.hop_limit": "64",
  "net.ipv6.conf.vboxnet12.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet12.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet12.max_addresses": "16",
  "net.ipv6.conf.vboxnet12.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet12.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet12.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet12.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet12.mtu": "1500",
  "net.ipv6.conf.vboxnet12.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet12.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet12.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet12.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet12.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet12.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet12.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet12.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet12.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet12.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet12.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet12.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet12.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet12.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet12.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet12.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet13.accept_dad": "1",
  "net.ipv6.conf.vboxnet13.accept_ra": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet13.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet13.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet13.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet13.accept_redirects": "1",
  "net.ipv6.conf.vboxnet13.accept_source_route": "0",
  "net.ipv6.conf.vboxnet13.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet13.autoconf": "1",
  "net.ipv6.conf.vboxnet13.dad_transmits": "1",
  "net.ipv6.conf.vboxnet13.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet13.disable_policy": "0",
  "net.ipv6.conf.vboxnet13.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet13.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet13.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet13.force_mld_version": "0",
  "net.ipv6.conf.vboxnet13.force_tllao": "0",
  "net.ipv6.conf.vboxnet13.forwarding": "0",
  "net.ipv6.conf.vboxnet13.hop_limit": "64",
  "net.ipv6.conf.vboxnet13.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet13.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet13.max_addresses": "16",
  "net.ipv6.conf.vboxnet13.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet13.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet13.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet13.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet13.mtu": "1500",
  "net.ipv6.conf.vboxnet13.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet13.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet13.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet13.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet13.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet13.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet13.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet13.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet13.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet13.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet13.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet13.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet13.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet13.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet13.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet13.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet2.accept_dad": "1",
  "net.ipv6.conf.vboxnet2.accept_ra": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet2.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet2.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet2.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet2.accept_redirects": "1",
  "net.ipv6.conf.vboxnet2.accept_source_route": "0",
  "net.ipv6.conf.vboxnet2.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet2.autoconf": "1",
  "net.ipv6.conf.vboxnet2.dad_transmits": "1",
  "net.ipv6.conf.vboxnet2.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet2.disable_policy": "0",
  "net.ipv6.conf.vboxnet2.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet2.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet2.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet2.force_mld_version": "0",
  "net.ipv6.conf.vboxnet2.force_tllao": "0",
  "net.ipv6.conf.vboxnet2.forwarding": "0",
  "net.ipv6.conf.vboxnet2.hop_limit": "64",
  "net.ipv6.conf.vboxnet2.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet2.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet2.max_addresses": "16",
  "net.ipv6.conf.vboxnet2.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet2.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet2.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet2.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet2.mtu": "1500",
  "net.ipv6.conf.vboxnet2.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet2.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet2.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet2.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet2.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet2.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet2.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet2.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet2.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet2.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet2.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet2.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet2.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet2.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet2.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet2.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet3.accept_dad": "1",
  "net.ipv6.conf.vboxnet3.accept_ra": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet3.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet3.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet3.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet3.accept_redirects": "1",
  "net.ipv6.conf.vboxnet3.accept_source_route": "0",
  "net.ipv6.conf.vboxnet3.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet3.autoconf": "1",
  "net.ipv6.conf.vboxnet3.dad_transmits": "1",
  "net.ipv6.conf.vboxnet3.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet3.disable_policy": "0",
  "net.ipv6.conf.vboxnet3.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet3.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet3.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet3.force_mld_version": "0",
  "net.ipv6.conf.vboxnet3.force_tllao": "0",
  "net.ipv6.conf.vboxnet3.forwarding": "0",
  "net.ipv6.conf.vboxnet3.hop_limit": "64",
  "net.ipv6.conf.vboxnet3.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet3.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet3.max_addresses": "16",
  "net.ipv6.conf.vboxnet3.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet3.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet3.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet3.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet3.mtu": "1500",
  "net.ipv6.conf.vboxnet3.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet3.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet3.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet3.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet3.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet3.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet3.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet3.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet3.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet3.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet3.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet3.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet3.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet3.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet3.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet3.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet4.accept_dad": "1",
  "net.ipv6.conf.vboxnet4.accept_ra": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet4.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet4.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet4.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet4.accept_redirects": "1",
  "net.ipv6.conf.vboxnet4.accept_source_route": "0",
  "net.ipv6.conf.vboxnet4.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet4.autoconf": "1",
  "net.ipv6.conf.vboxnet4.dad_transmits": "1",
  "net.ipv6.conf.vboxnet4.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet4.disable_policy": "0",
  "net.ipv6.conf.vboxnet4.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet4.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet4.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet4.force_mld_version": "0",
  "net.ipv6.conf.vboxnet4.force_tllao": "0",
  "net.ipv6.conf.vboxnet4.forwarding": "0",
  "net.ipv6.conf.vboxnet4.hop_limit": "64",
  "net.ipv6.conf.vboxnet4.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet4.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet4.max_addresses": "16",
  "net.ipv6.conf.vboxnet4.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet4.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet4.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet4.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet4.mtu": "1500",
  "net.ipv6.conf.vboxnet4.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet4.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet4.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet4.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet4.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet4.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet4.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet4.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet4.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet4.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet4.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet4.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet4.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet4.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet4.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet4.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet5.accept_dad": "1",
  "net.ipv6.conf.vboxnet5.accept_ra": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet5.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet5.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet5.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet5.accept_redirects": "1",
  "net.ipv6.conf.vboxnet5.accept_source_route": "0",
  "net.ipv6.conf.vboxnet5.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet5.autoconf": "1",
  "net.ipv6.conf.vboxnet5.dad_transmits": "1",
  "net.ipv6.conf.vboxnet5.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet5.disable_policy": "0",
  "net.ipv6.conf.vboxnet5.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet5.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet5.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet5.force_mld_version": "0",
  "net.ipv6.conf.vboxnet5.force_tllao": "0",
  "net.ipv6.conf.vboxnet5.forwarding": "0",
  "net.ipv6.conf.vboxnet5.hop_limit": "64",
  "net.ipv6.conf.vboxnet5.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet5.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet5.max_addresses": "16",
  "net.ipv6.conf.vboxnet5.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet5.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet5.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet5.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet5.mtu": "1500",
  "net.ipv6.conf.vboxnet5.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet5.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet5.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet5.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet5.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet5.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet5.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet5.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet5.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet5.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet5.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet5.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet5.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet5.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet5.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet5.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet6.accept_dad": "1",
  "net.ipv6.conf.vboxnet6.accept_ra": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet6.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet6.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet6.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet6.accept_redirects": "1",
  "net.ipv6.conf.vboxnet6.accept_source_route": "0",
  "net.ipv6.conf.vboxnet6.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet6.autoconf": "1",
  "net.ipv6.conf.vboxnet6.dad_transmits": "1",
  "net.ipv6.conf.vboxnet6.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet6.disable_policy": "0",
  "net.ipv6.conf.vboxnet6.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet6.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet6.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet6.force_mld_version": "0",
  "net.ipv6.conf.vboxnet6.force_tllao": "0",
  "net.ipv6.conf.vboxnet6.forwarding": "0",
  "net.ipv6.conf.vboxnet6.hop_limit": "64",
  "net.ipv6.conf.vboxnet6.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet6.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet6.max_addresses": "16",
  "net.ipv6.conf.vboxnet6.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet6.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet6.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet6.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet6.mtu": "1500",
  "net.ipv6.conf.vboxnet6.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet6.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet6.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet6.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet6.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet6.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet6.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet6.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet6.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet6.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet6.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet6.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet6.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet6.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet6.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet6.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet7.accept_dad": "1",
  "net.ipv6.conf.vboxnet7.accept_ra": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet7.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet7.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet7.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet7.accept_redirects": "1",
  "net.ipv6.conf.vboxnet7.accept_source_route": "0",
  "net.ipv6.conf.vboxnet7.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet7.autoconf": "1",
  "net.ipv6.conf.vboxnet7.dad_transmits": "1",
  "net.ipv6.conf.vboxnet7.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet7.disable_policy": "0",
  "net.ipv6.conf.vboxnet7.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet7.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet7.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet7.force_mld_version": "0",
  "net.ipv6.conf.vboxnet7.force_tllao": "0",
  "net.ipv6.conf.vboxnet7.forwarding": "0",
  "net.ipv6.conf.vboxnet7.hop_limit": "64",
  "net.ipv6.conf.vboxnet7.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet7.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet7.max_addresses": "16",
  "net.ipv6.conf.vboxnet7.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet7.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet7.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet7.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet7.mtu": "1500",
  "net.ipv6.conf.vboxnet7.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet7.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet7.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet7.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet7.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet7.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet7.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet7.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet7.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet7.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet7.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet7.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet7.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet7.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet7.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet7.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet8.accept_dad": "1",
  "net.ipv6.conf.vboxnet8.accept_ra": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet8.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet8.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet8.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet8.accept_redirects": "1",
  "net.ipv6.conf.vboxnet8.accept_source_route": "0",
  "net.ipv6.conf.vboxnet8.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet8.autoconf": "1",
  "net.ipv6.conf.vboxnet8.dad_transmits": "1",
  "net.ipv6.conf.vboxnet8.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet8.disable_policy": "0",
  "net.ipv6.conf.vboxnet8.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet8.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet8.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet8.force_mld_version": "0",
  "net.ipv6.conf.vboxnet8.force_tllao": "0",
  "net.ipv6.conf.vboxnet8.forwarding": "0",
  "net.ipv6.conf.vboxnet8.hop_limit": "64",
  "net.ipv6.conf.vboxnet8.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet8.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet8.max_addresses": "16",
  "net.ipv6.conf.vboxnet8.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet8.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet8.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet8.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet8.mtu": "1500",
  "net.ipv6.conf.vboxnet8.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet8.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet8.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet8.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet8.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet8.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet8.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet8.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet8.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet8.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet8.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet8.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet8.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet8.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet8.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet8.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet9.accept_dad": "1",
  "net.ipv6.conf.vboxnet9.accept_ra": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet9.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet9.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet9.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet9.accept_redirects": "1",
  "net.ipv6.conf.vboxnet9.accept_source_route": "0",
  "net.ipv6.conf.vboxnet9.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet9.autoconf": "1",
  "net.ipv6.conf.vboxnet9.dad_transmits": "1",
  "net.ipv6.conf.vboxnet9.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet9.disable_policy": "0",
  "net.ipv6.conf.vboxnet9.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet9.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet9.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet9.force_mld_version": "0",
  "net.ipv6.conf.vboxnet9.force_tllao": "0",
  "net.ipv6.conf.vboxnet9.forwarding": "0",
  "net.ipv6.conf.vboxnet9.hop_limit": "64",
  "net.ipv6.conf.vboxnet9.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet9.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet9.max_addresses": "16",
  "net.ipv6.conf.vboxnet9.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet9.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet9.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet9.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet9.mtu": "1500",
  "net.ipv6.conf.vboxnet9.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet9.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet9.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet9.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet9.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet9.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet9.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet9.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet9.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet9.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet9.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet9.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet9.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet9.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet9.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet9.use_tempaddr": "2",
  "net.ipv6.conf.virbr0-nic.accept_dad": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_defrtr": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_from_local": "0",
  "net.ipv6.conf.virbr0-nic.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_mtu": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_pinfo": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.virbr0-nic.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.virbr0-nic.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.virbr0-nic.accept_redirects": "1",
  "net.ipv6.conf.virbr0-nic.accept_source_route": "0",
  "net.ipv6.conf.virbr0-nic.addr_gen_mode": "0",
  "net.ipv6.conf.virbr0-nic.autoconf": "1",
  "net.ipv6.conf.virbr0-nic.dad_transmits": "1",
  "net.ipv6.conf.virbr0-nic.disable_ipv6": "0",
  "net.ipv6.conf.virbr0-nic.disable_policy": "0",
  "net.ipv6.conf.virbr0-nic.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.virbr0-nic.drop_unsolicited_na": "0",
  "net.ipv6.conf.virbr0-nic.enhanced_dad": "1",
  "net.ipv6.conf.virbr0-nic.force_mld_version": "0",
  "net.ipv6.conf.virbr0-nic.force_tllao": "0",
  "net.ipv6.conf.virbr0-nic.forwarding": "0",
  "net.ipv6.conf.virbr0-nic.hop_limit": "64",
  "net.ipv6.conf.virbr0-nic.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.virbr0-nic.keep_addr_on_down": "0",
  "net.ipv6.conf.virbr0-nic.max_addresses": "16",
  "net.ipv6.conf.virbr0-nic.max_desync_factor": "600",
  "net.ipv6.conf.virbr0-nic.mc_forwarding": "0",
  "net.ipv6.conf.virbr0-nic.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.virbr0-nic.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.virbr0-nic.mtu": "1500",
  "net.ipv6.conf.virbr0-nic.ndisc_notify": "0",
  "net.ipv6.conf.virbr0-nic.ndisc_tclass": "0",
  "net.ipv6.conf.virbr0-nic.proxy_ndp": "0",
  "net.ipv6.conf.virbr0-nic.regen_max_retry": "3",
  "net.ipv6.conf.virbr0-nic.router_probe_interval": "60",
  "net.ipv6.conf.virbr0-nic.router_solicitation_delay": "1",
  "net.ipv6.conf.virbr0-nic.router_solicitation_interval": "4",
  "net.ipv6.conf.virbr0-nic.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.virbr0-nic.router_solicitations": "-1",
  "net.ipv6.conf.virbr0-nic.seg6_enabled": "0",
  "net.ipv6.conf.virbr0-nic.seg6_require_hmac": "0",
  "net.ipv6.conf.virbr0-nic.suppress_frag_ndisc": "1",
  "net.ipv6.conf.virbr0-nic.temp_prefered_lft": "86400",
  "net.ipv6.conf.virbr0-nic.temp_valid_lft": "604800",
  "net.ipv6.conf.virbr0-nic.use_oif_addrs_only": "0",
  "net.ipv6.conf.virbr0-nic.use_tempaddr": "2",
  "net.ipv6.conf.virbr0.accept_dad": "1",
  "net.ipv6.conf.virbr0.accept_ra": "0",
  "net.ipv6.conf.virbr0.accept_ra_defrtr": "1",
  "net.ipv6.conf.virbr0.accept_ra_from_local": "0",
  "net.ipv6.conf.virbr0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.virbr0.accept_ra_mtu": "1",
  "net.ipv6.conf.virbr0.accept_ra_pinfo": "1",
  "net.ipv6.conf.virbr0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.virbr0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.virbr0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.virbr0.accept_redirects": "1",
  "net.ipv6.conf.virbr0.accept_source_route": "0",
  "net.ipv6.conf.virbr0.addr_gen_mode": "0",
  "net.ipv6.conf.virbr0.autoconf": "0",
  "net.ipv6.conf.virbr0.dad_transmits": "1",
  "net.ipv6.conf.virbr0.disable_ipv6": "1",
  "net.ipv6.conf.virbr0.disable_policy": "0",
  "net.ipv6.conf.virbr0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.virbr0.drop_unsolicited_na": "0",
  "net.ipv6.conf.virbr0.enhanced_dad": "1",
  "net.ipv6.conf.virbr0.force_mld_version": "0",
  "net.ipv6.conf.virbr0.force_tllao": "0",
  "net.ipv6.conf.virbr0.forwarding": "0",
  "net.ipv6.conf.virbr0.hop_limit": "64",
  "net.ipv6.conf.virbr0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.virbr0.keep_addr_on_down": "0",
  "net.ipv6.conf.virbr0.max_addresses": "16",
  "net.ipv6.conf.virbr0.max_desync_factor": "600",
  "net.ipv6.conf.virbr0.mc_forwarding": "0",
  "net.ipv6.conf.virbr0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.virbr0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.virbr0.mtu": "1500",
  "net.ipv6.conf.virbr0.ndisc_notify": "0",
  "net.ipv6.conf.virbr0.ndisc_tclass": "0",
  "net.ipv6.conf.virbr0.proxy_ndp": "0",
  "net.ipv6.conf.virbr0.regen_max_retry": "3",
  "net.ipv6.conf.virbr0.router_probe_interval": "60",
  "net.ipv6.conf.virbr0.router_solicitation_delay": "1",
  "net.ipv6.conf.virbr0.router_solicitation_interval": "4",
  "net.ipv6.conf.virbr0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.virbr0.router_solicitations": "-1",
  "net.ipv6.conf.virbr0.seg6_enabled": "0",
  "net.ipv6.conf.virbr0.seg6_require_hmac": "0",
  "net.ipv6.conf.virbr0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.virbr0.temp_prefered_lft": "86400",
  "net.ipv6.conf.virbr0.temp_valid_lft": "604800",
  "net.ipv6.conf.virbr0.use_oif_addrs_only": "0",
  "net.ipv6.conf.virbr0.use_tempaddr": "2",
  "net.ipv6.conf.wlan0.accept_dad": "1",
  "net.ipv6.conf.wlan0.accept_ra": "0",
  "net.ipv6.conf.wlan0.accept_ra_defrtr": "1",
  "net.ipv6.conf.wlan0.accept_ra_from_local": "0",
  "net.ipv6.conf.wlan0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.wlan0.accept_ra_mtu": "1",
  "net.ipv6.conf.wlan0.accept_ra_pinfo": "1",
  "net.ipv6.conf.wlan0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.wlan0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.wlan0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.wlan0.accept_redirects": "1",
  "net.ipv6.conf.wlan0.accept_source_route": "0",
  "net.ipv6.conf.wlan0.addr_gen_mode": "1",
  "net.ipv6.conf.wlan0.autoconf": "1",
  "net.ipv6.conf.wlan0.dad_transmits": "1",
  "net.ipv6.conf.wlan0.disable_ipv6": "0",
  "net.ipv6.conf.wlan0.disable_policy": "0",
  "net.ipv6.conf.wlan0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.wlan0.drop_unsolicited_na": "0",
  "net.ipv6.conf.wlan0.enhanced_dad": "1",
  "net.ipv6.conf.wlan0.force_mld_version": "0",
  "net.ipv6.conf.wlan0.force_tllao": "0",
  "net.ipv6.conf.wlan0.forwarding": "0",
  "net.ipv6.conf.wlan0.hop_limit": "64",
  "net.ipv6.conf.wlan0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.wlan0.keep_addr_on_down": "0",
  "net.ipv6.conf.wlan0.max_addresses": "16",
  "net.ipv6.conf.wlan0.max_desync_factor": "600",
  "net.ipv6.conf.wlan0.mc_forwarding": "0",
  "net.ipv6.conf.wlan0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.wlan0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.wlan0.mtu": "1500",
  "net.ipv6.conf.wlan0.ndisc_notify": "0",
  "net.ipv6.conf.wlan0.ndisc_tclass": "0",
  "net.ipv6.conf.wlan0.proxy_ndp": "0",
  "net.ipv6.conf.wlan0.regen_max_retry": "3",
  "net.ipv6.conf.wlan0.router_probe_interval": "60",
  "net.ipv6.conf.wlan0.router_solicitation_delay": "1",
  "net.ipv6.conf.wlan0.router_solicitation_interval": "4",
  "net.ipv6.conf.wlan0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.wlan0.router_solicitations": "-1",
  "net.ipv6.conf.wlan0.seg6_enabled": "0",
  "net.ipv6.conf.wlan0.seg6_require_hmac": "0",
  "net.ipv6.conf.wlan0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.wlan0.temp_prefered_lft": "86400",
  "net.ipv6.conf.wlan0.temp_valid_lft": "604800",
  "net.ipv6.conf.wlan0.use_oif_addrs_only": "0",
  "net.ipv6.conf.wlan0.use_tempaddr": "2",
  "net.ipv6.fib_multipath_hash_policy": "0",
  "net.ipv6.flowlabel_consistency": "1",
  "net.ipv6.flowlabel_reflect": "0",
  "net.ipv6.flowlabel_state_ranges": "0",
  "net.ipv6.fwmark_reflect": "0",
  "net.ipv6.icmp.echo_ignore_all": "0",
  "net.ipv6.icmp.echo_ignore_anycast": "0",
  "net.ipv6.icmp.echo_ignore_multicast": "0",
  "net.ipv6.icmp.ratelimit": "1000",
  "net.ipv6.icmp.ratemask": "0-1,3-127",
  "net.ipv6.idgen_delay": "1",
  "net.ipv6.idgen_retries": "3",
  "net.ipv6.ip6frag_high_thresh": "4194304",
  "net.ipv6.ip6frag_low_thresh": "3145728",
  "net.ipv6.ip6frag_secret_interval": "0",
  "net.ipv6.ip6frag_time": "60",
  "net.ipv6.ip_nonlocal_bind": "0",
  "net.ipv6.max_dst_opts_length": "2147483647",
  "net.ipv6.max_dst_opts_number": "8",
  "net.ipv6.max_hbh_length": "2147483647",
  "net.ipv6.max_hbh_opts_number": "8",
  "net.ipv6.mld_max_msf": "64",
  "net.ipv6.mld_qrv": "2",
  "net.ipv6.neigh.default.anycast_delay": "100",
  "net.ipv6.neigh.default.app_solicit": "0",
  "net.ipv6.neigh.default.base_reachable_time": "30",
  "net.ipv6.neigh.default.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.default.delay_first_probe_time": "5",
  "net.ipv6.neigh.default.gc_interval": "30",
  "net.ipv6.neigh.default.gc_stale_time": "60",
  "net.ipv6.neigh.default.gc_thresh1": "128",
  "net.ipv6.neigh.default.gc_thresh2": "512",
  "net.ipv6.neigh.default.gc_thresh3": "1024",
  "net.ipv6.neigh.default.locktime": "0",
  "net.ipv6.neigh.default.mcast_resolicit": "0",
  "net.ipv6.neigh.default.mcast_solicit": "3",
  "net.ipv6.neigh.default.proxy_delay": "80",
  "net.ipv6.neigh.default.proxy_qlen": "64",
  "net.ipv6.neigh.default.retrans_time": "1000",
  "net.ipv6.neigh.default.retrans_time_ms": "1000",
  "net.ipv6.neigh.default.ucast_solicit": "3",
  "net.ipv6.neigh.default.unres_qlen": "101",
  "net.ipv6.neigh.default.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.docker0.anycast_delay": "100",
  "net.ipv6.neigh.docker0.app_solicit": "0",
  "net.ipv6.neigh.docker0.base_reachable_time": "30",
  "net.ipv6.neigh.docker0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.docker0.delay_first_probe_time": "5",
  "net.ipv6.neigh.docker0.gc_stale_time": "60",
  "net.ipv6.neigh.docker0.locktime": "0",
  "net.ipv6.neigh.docker0.mcast_resolicit": "0",
  "net.ipv6.neigh.docker0.mcast_solicit": "3",
  "net.ipv6.neigh.docker0.proxy_delay": "80",
  "net.ipv6.neigh.docker0.proxy_qlen": "64",
  "net.ipv6.neigh.docker0.retrans_time": "1000",
  "net.ipv6.neigh.docker0.retrans_time_ms": "1000",
  "net.ipv6.neigh.docker0.ucast_solicit": "3",
  "net.ipv6.neigh.docker0.unres_qlen": "101",
  "net.ipv6.neigh.docker0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.eth0.anycast_delay": "100",
  "net.ipv6.neigh.eth0.app_solicit": "0",
  "net.ipv6.neigh.eth0.base_reachable_time": "30",
  "net.ipv6.neigh.eth0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.eth0.delay_first_probe_time": "5",
  "net.ipv6.neigh.eth0.gc_stale_time": "60",
  "net.ipv6.neigh.eth0.locktime": "0",
  "net.ipv6.neigh.eth0.mcast_resolicit": "0",
  "net.ipv6.neigh.eth0.mcast_solicit": "3",
  "net.ipv6.neigh.eth0.proxy_delay": "80",
  "net.ipv6.neigh.eth0.proxy_qlen": "64",
  "net.ipv6.neigh.eth0.retrans_time": "1000",
  "net.ipv6.neigh.eth0.retrans_time_ms": "1000",
  "net.ipv6.neigh.eth0.ucast_solicit": "3",
  "net.ipv6.neigh.eth0.unres_qlen": "101",
  "net.ipv6.neigh.eth0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.lo.anycast_delay": "100",
  "net.ipv6.neigh.lo.app_solicit": "0",
  "net.ipv6.neigh.lo.base_reachable_time": "30",
  "net.ipv6.neigh.lo.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.lo.delay_first_probe_time": "5",
  "net.ipv6.neigh.lo.gc_stale_time": "60",
  "net.ipv6.neigh.lo.locktime": "0",
  "net.ipv6.neigh.lo.mcast_resolicit": "0",
  "net.ipv6.neigh.lo.mcast_solicit": "3",
  "net.ipv6.neigh.lo.proxy_delay": "80",
  "net.ipv6.neigh.lo.proxy_qlen": "64",
  "net.ipv6.neigh.lo.retrans_time": "1000",
  "net.ipv6.neigh.lo.retrans_time_ms": "1000",
  "net.ipv6.neigh.lo.ucast_solicit": "3",
  "net.ipv6.neigh.lo.unres_qlen": "101",
  "net.ipv6.neigh.lo.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.tun0.anycast_delay": "100",
  "net.ipv6.neigh.tun0.app_solicit": "0",
  "net.ipv6.neigh.tun0.base_reachable_time": "30",
  "net.ipv6.neigh.tun0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.tun0.delay_first_probe_time": "5",
  "net.ipv6.neigh.tun0.gc_stale_time": "60",
  "net.ipv6.neigh.tun0.locktime": "0",
  "net.ipv6.neigh.tun0.mcast_resolicit": "0",
  "net.ipv6.neigh.tun0.mcast_solicit": "3",
  "net.ipv6.neigh.tun0.proxy_delay": "80",
  "net.ipv6.neigh.tun0.proxy_qlen": "64",
  "net.ipv6.neigh.tun0.retrans_time": "1000",
  "net.ipv6.neigh.tun0.retrans_time_ms": "1000",
  "net.ipv6.neigh.tun0.ucast_solicit": "3",
  "net.ipv6.neigh.tun0.unres_qlen": "101",
  "net.ipv6.neigh.tun0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet0.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet0.app_solicit": "0",
  "net.ipv6.neigh.vboxnet0.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet0.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet0.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet0.locktime": "0",
  "net.ipv6.neigh.vboxnet0.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet0.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet0.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet0.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet0.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet0.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet0.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet0.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet1.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet1.app_solicit": "0",
  "net.ipv6.neigh.vboxnet1.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet1.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet1.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet1.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet1.locktime": "0",
  "net.ipv6.neigh.vboxnet1.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet1.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet1.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet1.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet1.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet1.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet1.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet1.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet1.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet10.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet10.app_solicit": "0",
  "net.ipv6.neigh.vboxnet10.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet10.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet10.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet10.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet10.locktime": "0",
  "net.ipv6.neigh.vboxnet10.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet10.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet10.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet10.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet10.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet10.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet10.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet10.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet10.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet11.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet11.app_solicit": "0",
  "net.ipv6.neigh.vboxnet11.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet11.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet11.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet11.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet11.locktime": "0",
  "net.ipv6.neigh.vboxnet11.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet11.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet11.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet11.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet11.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet11.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet11.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet11.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet11.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet12.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet12.app_solicit": "0",
  "net.ipv6.neigh.vboxnet12.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet12.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet12.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet12.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet12.locktime": "0",
  "net.ipv6.neigh.vboxnet12.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet12.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet12.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet12.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet12.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet12.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet12.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet12.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet12.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet13.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet13.app_solicit": "0",
  "net.ipv6.neigh.vboxnet13.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet13.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet13.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet13.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet13.locktime": "0",
  "net.ipv6.neigh.vboxnet13.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet13.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet13.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet13.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet13.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet13.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet13.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet13.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet13.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet2.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet2.app_solicit": "0",
  "net.ipv6.neigh.vboxnet2.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet2.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet2.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet2.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet2.locktime": "0",
  "net.ipv6.neigh.vboxnet2.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet2.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet2.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet2.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet2.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet2.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet2.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet2.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet2.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet3.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet3.app_solicit": "0",
  "net.ipv6.neigh.vboxnet3.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet3.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet3.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet3.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet3.locktime": "0",
  "net.ipv6.neigh.vboxnet3.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet3.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet3.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet3.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet3.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet3.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet3.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet3.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet3.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet4.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet4.app_solicit": "0",
  "net.ipv6.neigh.vboxnet4.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet4.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet4.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet4.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet4.locktime": "0",
  "net.ipv6.neigh.vboxnet4.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet4.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet4.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet4.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet4.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet4.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet4.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet4.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet4.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet5.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet5.app_solicit": "0",
  "net.ipv6.neigh.vboxnet5.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet5.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet5.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet5.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet5.locktime": "0",
  "net.ipv6.neigh.vboxnet5.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet5.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet5.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet5.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet5.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet5.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet5.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet5.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet5.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet6.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet6.app_solicit": "0",
  "net.ipv6.neigh.vboxnet6.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet6.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet6.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet6.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet6.locktime": "0",
  "net.ipv6.neigh.vboxnet6.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet6.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet6.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet6.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet6.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet6.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet6.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet6.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet6.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet7.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet7.app_solicit": "0",
  "net.ipv6.neigh.vboxnet7.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet7.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet7.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet7.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet7.locktime": "0",
  "net.ipv6.neigh.vboxnet7.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet7.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet7.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet7.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet7.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet7.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet7.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet7.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet7.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet8.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet8.app_solicit": "0",
  "net.ipv6.neigh.vboxnet8.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet8.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet8.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet8.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet8.locktime": "0",
  "net.ipv6.neigh.vboxnet8.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet8.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet8.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet8.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet8.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet8.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet8.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet8.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet8.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet9.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet9.app_solicit": "0",
  "net.ipv6.neigh.vboxnet9.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet9.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet9.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet9.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet9.locktime": "0",
  "net.ipv6.neigh.vboxnet9.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet9.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet9.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet9.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet9.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet9.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet9.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet9.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet9.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.virbr0-nic.anycast_delay": "100",
  "net.ipv6.neigh.virbr0-nic.app_solicit": "0",
  "net.ipv6.neigh.virbr0-nic.base_reachable_time": "30",
  "net.ipv6.neigh.virbr0-nic.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.virbr0-nic.delay_first_probe_time": "5",
  "net.ipv6.neigh.virbr0-nic.gc_stale_time": "60",
  "net.ipv6.neigh.virbr0-nic.locktime": "0",
  "net.ipv6.neigh.virbr0-nic.mcast_resolicit": "0",
  "net.ipv6.neigh.virbr0-nic.mcast_solicit": "3",
  "net.ipv6.neigh.virbr0-nic.proxy_delay": "80",
  "net.ipv6.neigh.virbr0-nic.proxy_qlen": "64",
  "net.ipv6.neigh.virbr0-nic.retrans_time": "1000",
  "net.ipv6.neigh.virbr0-nic.retrans_time_ms": "1000",
  "net.ipv6.neigh.virbr0-nic.ucast_solicit": "3",
  "net.ipv6.neigh.virbr0-nic.unres_qlen": "101",
  "net.ipv6.neigh.virbr0-nic.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.virbr0.anycast_delay": "100",
  "net.ipv6.neigh.virbr0.app_solicit": "0",
  "net.ipv6.neigh.virbr0.base_reachable_time": "30",
  "net.ipv6.neigh.virbr0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.virbr0.delay_first_probe_time": "5",
  "net.ipv6.neigh.virbr0.gc_stale_time": "60",
  "net.ipv6.neigh.virbr0.locktime": "0",
  "net.ipv6.neigh.virbr0.mcast_resolicit": "0",
  "net.ipv6.neigh.virbr0.mcast_solicit": "3",
  "net.ipv6.neigh.virbr0.proxy_delay": "80",
  "net.ipv6.neigh.virbr0.proxy_qlen": "64",
  "net.ipv6.neigh.virbr0.retrans_time": "1000",
  "net.ipv6.neigh.virbr0.retrans_time_ms": "1000",
  "net.ipv6.neigh.virbr0.ucast_solicit": "3",
  "net.ipv6.neigh.virbr0.unres_qlen": "101",
  "net.ipv6.neigh.virbr0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.wlan0.anycast_delay": "100",
  "net.ipv6.neigh.wlan0.app_solicit": "0",
  "net.ipv6.neigh.wlan0.base_reachable_time": "30",
  "net.ipv6.neigh.wlan0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.wlan0.delay_first_probe_time": "5",
  "net.ipv6.neigh.wlan0.gc_stale_time": "60",
  "net.ipv6.neigh.wlan0.locktime": "0",
  "net.ipv6.neigh.wlan0.mcast_resolicit": "0",
  "net.ipv6.neigh.wlan0.mcast_solicit": "3",
  "net.ipv6.neigh.wlan0.proxy_delay": "80",
  "net.ipv6.neigh.wlan0.proxy_qlen": "64",
  "net.ipv6.neigh.wlan0.retrans_time": "1000",
  "net.ipv6.neigh.wlan0.retrans_time_ms": "1000",
  "net.ipv6.neigh.wlan0.ucast_solicit": "3",
  "net.ipv6.neigh.wlan0.unres_qlen": "101",
  "net.ipv6.neigh.wlan0.unres_qlen_bytes": "212992",
  "net.ipv6.route.gc_elasticity": "9",
  "net.ipv6.route.gc_interval": "30",
  "net.ipv6.route.gc_min_interval": "0",
  "net.ipv6.route.gc_min_interval_ms": "500",
  "net.ipv6.route.gc_thresh": "1024",
  "net.ipv6.route.gc_timeout": "60",
  "net.ipv6.route.max_size": "4096",
  "net.ipv6.route.min_adv_mss": "1220",
  "net.ipv6.route.mtu_expires": "600",
  "net.ipv6.route.skip_notify_on_dev_down": "0",
  "net.ipv6.seg6_flowlabel": "0",
  "net.ipv6.xfrm6_gc_thresh": "32768",
  "net.netfilter.nf_conntrack_acct": "0",
  "net.netfilter.nf_conntrack_buckets": "65536",
  "net.netfilter.nf_conntrack_checksum": "1",
  "net.netfilter.nf_conntrack_count": "228",
  "net.netfilter.nf_conntrack_dccp_loose": "1",
  "net.netfilter.nf_conntrack_dccp_timeout_closereq": "64",
  "net.netfilter.nf_conntrack_dccp_timeout_closing": "64",
  "net.netfilter.nf_conntrack_dccp_timeout_open": "43200",
  "net.netfilter.nf_conntrack_dccp_timeout_partopen": "480",
  "net.netfilter.nf_conntrack_dccp_timeout_request": "240",
  "net.netfilter.nf_conntrack_dccp_timeout_respond": "480",
  "net.netfilter.nf_conntrack_dccp_timeout_timewait": "240",
  "net.netfilter.nf_conntrack_events": "1",
  "net.netfilter.nf_conntrack_expect_max": "1024",
  "net.netfilter.nf_conntrack_frag6_high_thresh": "4194304",
  "net.netfilter.nf_conntrack_frag6_low_thresh": "3145728",
  "net.netfilter.nf_conntrack_frag6_timeout": "60",
  "net.netfilter.nf_conntrack_generic_timeout": "600",
  "net.netfilter.nf_conntrack_gre_timeout": "30",
  "net.netfilter.nf_conntrack_gre_timeout_stream": "180",
  "net.netfilter.nf_conntrack_helper": "0",
  "net.netfilter.nf_conntrack_icmp_timeout": "30",
  "net.netfilter.nf_conntrack_icmpv6_timeout": "30",
  "net.netfilter.nf_conntrack_log_invalid": "0",
  "net.netfilter.nf_conntrack_max": "262144",
  "net.netfilter.nf_conntrack_sctp_timeout_closed": "10",
  "net.netfilter.nf_conntrack_sctp_timeout_cookie_echoed": "3",
  "net.netfilter.nf_conntrack_sctp_timeout_cookie_wait": "3",
  "net.netfilter.nf_conntrack_sctp_timeout_established": "432000",
  "net.netfilter.nf_conntrack_sctp_timeout_heartbeat_acked": "210",
  "net.netfilter.nf_conntrack_sctp_timeout_heartbeat_sent": "30",
  "net.netfilter.nf_conntrack_sctp_timeout_shutdown_ack_sent": "3",
  "net.netfilter.nf_conntrack_sctp_timeout_shutdown_recd": "0",
  "net.netfilter.nf_conntrack_sctp_timeout_shutdown_sent": "0",
  "net.netfilter.nf_conntrack_tcp_be_liberal": "0",
  "net.netfilter.nf_conntrack_tcp_loose": "1",
  "net.netfilter.nf_conntrack_tcp_max_retrans": "3",
  "net.netfilter.nf_conntrack_tcp_timeout_close": "10",
  "net.netfilter.nf_conntrack_tcp_timeout_close_wait": "60",
  "net.netfilter.nf_conntrack_tcp_timeout_established": "432000",
  "net.netfilter.nf_conntrack_tcp_timeout_fin_wait": "120",
  "net.netfilter.nf_conntrack_tcp_timeout_last_ack": "30",
  "net.netfilter.nf_conntrack_tcp_timeout_max_retrans": "300",
  "net.netfilter.nf_conntrack_tcp_timeout_syn_recv": "60",
  "net.netfilter.nf_conntrack_tcp_timeout_syn_sent": "120",
  "net.netfilter.nf_conntrack_tcp_timeout_time_wait": "120",
  "net.netfilter.nf_conntrack_tcp_timeout_unacknowledged": "300",
  "net.netfilter.nf_conntrack_timestamp": "0",
  "net.netfilter.nf_conntrack_udp_timeout": "30",
  "net.netfilter.nf_conntrack_udp_timeout_stream": "120",
  "net.netfilter.nf_log.0": "NONE",
  "net.netfilter.nf_log.1": "NONE",
  "net.netfilter.nf_log.10": "NONE",
  "net.netfilter.nf_log.11": "NONE",
  "net.netfilter.nf_log.12": "NONE",
  "net.netfilter.nf_log.2": "NONE",
  "net.netfilter.nf_log.3": "NONE",
  "net.netfilter.nf_log.4": "NONE",
  "net.netfilter.nf_log.5": "NONE",
  "net.netfilter.nf_log.6": "NONE",
  "net.netfilter.nf_log.7": "NONE",
  "net.netfilter.nf_log.8": "NONE",
  "net.netfilter.nf_log.9": "NONE",
  "net.netfilter.nf_log_all_netns": "0",
  "net.nf_conntrack_max": "262144",
  "net.unix.max_dgram_qlen": "512",
  "sunrpc.max_resvport": "1023",
  "sunrpc.min_resvport": "665",
  "sunrpc.nfs_debug": "0x0000",
  "sunrpc.nfsd_debug": "0x0000",
  "sunrpc.nlm_debug": "0x0000",
  "sunrpc.rpc_debug": "0x0000",
  "sunrpc.tcp_fin_timeout": "15",
  "sunrpc.tcp_max_slot_table_entries": "65536",
  "sunrpc.tcp_slot_table_entries": "2",
  "sunrpc.transports": "tcp 1048576\nudp 32768",
  "sunrpc.udp_slot_table_entries": "16",
  "user.max_cgroup_namespaces": "127767",
  "user.max_inotify_instances": "128",
  "user.max_inotify_watches": "98304",
  "user.max_ipc_namespaces": "127767",
  "user.max_mnt_namespaces": "127767",
  "user.max_net_namespaces": "127767",
  "user.max_pid_namespaces": "127767",
  "user.max_user_namespaces": "127767",
  "user.max_uts_namespaces": "127767",
  "vm.admin_reserve_kbytes": "8192",
  "vm.block_dump": "0",
  "vm.compact_unevictable_allowed": "1",
  "vm.dirty_background_bytes": "0",
  "vm.dirty_background_ratio": "10",
  "vm.dirty_bytes": "0",
  "vm.dirty_expire_centisecs": "1500",
  "vm.dirty_ratio": "20",
  "vm.dirty_writeback_centisecs": "1500",
  "vm.dirtytime_expire_seconds": "43200",
  "vm.extfrag_threshold": "500",
  "vm.hugetlb_shm_group": "0",
  "vm.laptop_mode": "0",
  "vm.legacy_va_layout": "0",
  "vm.lowmem_reserve_ratio": "256\t256\t32\t0\t0",
  "vm.max_map_count": "65530",
  "vm.memory_failure_early_kill": "0",
  "vm.memory_failure_recovery": "1",
  "vm.min_free_kbytes": "67584",
  "vm.min_slab_ratio": "5",
  "vm.min_unmapped_ratio": "1",
  "vm.mmap_min_addr": "65536",
  "vm.nr_hugepages": "0",
  "vm.nr_hugepages_mempolicy": "0",
  "vm.nr_overcommit_hugepages": "0",
  "vm.numa_stat": "1",
  "vm.numa_zonelist_order": "Node",
  "vm.oom_dump_tasks": "1",
  "vm.oom_kill_allocating_task": "0",
  "vm.overcommit_kbytes": "0",
  "vm.overcommit_memory": "0",
  "vm.overcommit_ratio": "50",
  "vm.page-cluster": "3",
  "vm.panic_on_oom": "0",
  "vm.percpu_pagelist_fraction": "0",
  "vm.stat_interval": "1",
  "vm.swappiness": "60",
  "vm.unprivileged_userfaultfd": "1",
  "vm.user_reserve_kbytes": "131072",
  "vm.vfs_cache_pressure": "100",
  "vm.watermark_boost_factor": "0",
  "vm.watermark_scale_factor": "10",
  "vm.zone_reclaim_mode": "0"
}
R: {
  "abi.vsyscall32": "1",
  "debug.exception-trace": "1",
  "debug.kprobes-optimization": "1",
  "dev.cdrom.autoclose": "1",
  "dev.cdrom.autoeject": "0",
  "dev.cdrom.check_media": "0",
  "dev.cdrom.debug": "0",
  "dev.cdrom.info": "CD-ROM information, Id: cdrom.c 3.20 2003/12/17\n\ndrive name:\t\ndrive speed:\t\ndrive # of slots:\nCan close tray:\t\nCan open tray:\t\nCan lock tray:\t\nCan change speed:\nCan select disk:\nCan read multisession:\nCan read MCN:\t\nReports media changed:\nCan play audio:\t\nCan write CD-R:\t\nCan write CD-RW:\nCan read DVD:\t\nCan write DVD-R:\nCan write DVD-RAM:\nCan read MRW:\t\nCan write MRW:\t\nCan write RAM:\t",
  "dev.cdrom.lock": "0",
  "dev.hpet.max-user-freq": "64",
  "dev.i915.oa_max_sample_rate": "100000",
  "dev.i915.perf_stream_paranoid": "1",
  "dev.mac_hid.mouse_button2_keycode": "97",
  "dev.mac_hid.mouse_button3_keycode": "100",
  "dev.mac_hid.mouse_button_emulation": "0",
  "dev.parport.default.spintime": "500",
  "dev.parport.default.timeslice": "200",
  "dev.raid.speed_limit_max": "200000",
  "dev.raid.speed_limit_min": "1000",
  "dev.scsi.logging_level": "0",
  "dev.tty.ldisc_autoload": "1",
  "fs.aio-max-nr": "65536",
  "fs.aio-nr": "3301",
  "fs.binfmt_misc.cli": "enabled\ninterpreter /usr/lib/binfmt-support/run-detectors\nflags: \noffset 0\nmagic 4d5a",
  "fs.binfmt_misc.jar": "enabled\ninterpreter /usr/bin/jexec\nflags: \noffset 0\nmagic 504b0304",
  "fs.binfmt_misc.python2.7": "enabled\ninterpreter /usr/bin/python2.7\nflags: \noffset 0\nmagic 03f30d0a",
  "fs.binfmt_misc.python3.8": "enabled\ninterpreter /usr/bin/python3.8\nflags: \noffset 0\nmagic 550d0d0a",
  "fs.binfmt_misc.sbcl": "enabled\ninterpreter /usr/lib/sbcl/sbcl-run\nflags: \noffset 0\nmagic 23204641534c0a",
  "fs.binfmt_misc.status": "enabled",
  "fs.dentry-state": "311039\t222685\t45\t0\t42660\t0",
  "fs.dir-notify-enable": "1",
  "fs.epoll.max_user_watches": "6698721",
  "fs.file-max": "9223372036854775807",
  "fs.file-nr": "46048\t0\t9223372036854775807",
  "fs.inode-nr": "507779\t238746",
  "fs.inode-state": "507779\t238746\t0\t0\t0\t0\t0",
  "fs.inotify.max_queued_events": "16384",
  "fs.inotify.max_user_instances": "128",
  "fs.inotify.max_user_watches": "98304",
  "fs.lease-break-time": "45",
  "fs.leases-enable": "1",
  "fs.mount-max": "100000",
  "fs.mqueue.msg_default": "10",
  "fs.mqueue.msg_max": "10",
  "fs.mqueue.msgsize_default": "8192",
  "fs.mqueue.msgsize_max": "8192",
  "fs.mqueue.queues_max": "256",
  "fs.nfs.idmap_cache_timeout": "600",
  "fs.nfs.nfs_callback_tcpport": "0",
  "fs.nfs.nfs_congestion_kb": "183104",
  "fs.nfs.nfs_mountpoint_timeout": "500",
  "fs.nfs.nlm_grace_period": "0",
  "fs.nfs.nlm_tcpport": "0",
  "fs.nfs.nlm_timeout": "10",
  "fs.nfs.nlm_udpport": "0",
  "fs.nfs.nsm_local_state": "3",
  "fs.nfs.nsm_use_hostnames": "0",
  "fs.nr_open": "1048576",
  "fs.overflowgid": "65534",
  "fs.overflowuid": "65534",
  "fs.pipe-max-size": "1048576",
  "fs.pipe-user-pages-hard": "0",
  "fs.pipe-user-pages-soft": "16384",
  "fs.quota.allocated_dquots": "0",
  "fs.quota.cache_hits": "0",
  "fs.quota.drops": "0",
  "fs.quota.free_dquots": "0",
  "fs.quota.lookups": "0",
  "fs.quota.reads": "0",
  "fs.quota.syncs": "26",
  "fs.quota.writes": "0",
  "fs.suid_dumpable": "2",
  "fs.verity.require_signatures": "0",
  "fscache.object_max_active": "8",
  "fscache.operation_max_active": "4",
  "kernel.acct": "4\t2\t30",
  "kernel.acpi_video_flags": "0",
  "kernel.auto_msgmni": "0",
  "kernel.bootloader_type": "6",
  "kernel.bootloader_version": "38",
  "kernel.bpf_stats_enabled": "0",
  "kernel.cap_last_cap": "37",
  "kernel.core_pattern": "|/usr/share/apport/apport %p %s %c %d %P %E",
  "kernel.core_pipe_limit": "0",
  "kernel.core_uses_pid": "0",
  "kernel.ctrl-alt-del": "0",
  "kernel.dmesg_restrict": "0",
  "kernel.domainname": "(none)",
  "kernel.firmware_config.force_sysfs_fallback": "0",
  "kernel.firmware_config.ignore_sysfs_fallback": "0",
  "kernel.ftrace_dump_on_oops": "0",
  "kernel.ftrace_enabled": "1",
  "kernel.hardlockup_all_cpu_backtrace": "0",
  "kernel.hardlockup_panic": "0",
  "kernel.hostname": "nickanderson-ThinkPad-W550s",
  "kernel.hotplug": "",
  "kernel.hung_task_check_count": "4194304",
  "kernel.hung_task_check_interval_secs": "0",
  "kernel.hung_task_panic": "0",
  "kernel.hung_task_timeout_secs": "120",
  "kernel.hung_task_warnings": "8",
  "kernel.io_delay_type": "1",
  "kernel.kexec_load_disabled": "0",
  "kernel.keys.gc_delay": "300",
  "kernel.keys.maxbytes": "20000",
  "kernel.keys.maxkeys": "200",
  "kernel.keys.persistent_keyring_expiry": "259200",
  "kernel.keys.root_maxbytes": "25000000",
  "kernel.keys.root_maxkeys": "1000000",
  "kernel.kptr_restrict": "1",
  "kernel.latencytop": "0",
  "kernel.max_lock_depth": "1024",
  "kernel.modprobe": "/sbin/modprobe",
  "kernel.modules_disabled": "0",
  "kernel.msg_next_id": "-1",
  "kernel.msgmax": "8192",
  "kernel.msgmnb": "16384",
  "kernel.msgmni": "32000",
  "kernel.ngroups_max": "65536",
  "kernel.nmi_watchdog": "0",
  "kernel.ns_last_pid": "1116085",
  "kernel.numa_balancing": "0",
  "kernel.numa_balancing_scan_delay_ms": "1000",
  "kernel.numa_balancing_scan_period_max_ms": "60000",
  "kernel.numa_balancing_scan_period_min_ms": "1000",
  "kernel.numa_balancing_scan_size_mb": "256",
  "kernel.osrelease": "5.4.0-42-lowlatency",
  "kernel.ostype": "Linux",
  "kernel.overflowgid": "65534",
  "kernel.overflowuid": "65534",
  "kernel.panic": "0",
  "kernel.panic_on_io_nmi": "0",
  "kernel.panic_on_oops": "0",
  "kernel.panic_on_rcu_stall": "0",
  "kernel.panic_on_unrecovered_nmi": "0",
  "kernel.panic_on_warn": "0",
  "kernel.panic_print": "0",
  "kernel.perf_cpu_time_max_percent": "25",
  "kernel.perf_event_max_contexts_per_stack": "8",
  "kernel.perf_event_max_sample_rate": "100000",
  "kernel.perf_event_max_stack": "127",
  "kernel.perf_event_mlock_kb": "516",
  "kernel.perf_event_paranoid": "3",
  "kernel.pid_max": "4194304",
  "kernel.poweroff_cmd": "/sbin/poweroff",
  "kernel.print-fatal-signals": "0",
  "kernel.printk": "4\t4\t1\t7",
  "kernel.printk_delay": "0",
  "kernel.printk_devkmsg": "on",
  "kernel.printk_ratelimit": "5",
  "kernel.printk_ratelimit_burst": "10",
  "kernel.pty.max": "4096",
  "kernel.pty.nr": "8",
  "kernel.pty.reserve": "1024",
  "kernel.random.boot_id": "fdf58181-01bd-4d59-a45d-c56bca7eceef",
  "kernel.random.entropy_avail": "3936",
  "kernel.random.poolsize": "4096",
  "kernel.random.read_wakeup_threshold": "64",
  "kernel.random.urandom_min_reseed_secs": "60",
  "kernel.random.uuid": "60b05007-da43-49f2-a083-c0c5e4ea2bc4",
  "kernel.random.write_wakeup_threshold": "1024",
  "kernel.randomize_va_space": "2",
  "kernel.real-root-dev": "0",
  "kernel.sched_autogroup_enabled": "1",
  "kernel.sched_cfs_bandwidth_slice_us": "5000",
  "kernel.sched_child_runs_first": "0",
  "kernel.sched_domain.cpu0.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu0.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu0.domain0.flags": "4783",
  "kernel.sched_domain.cpu0.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu0.domain0.max_interval": "4",
  "kernel.sched_domain.cpu0.domain0.max_newidle_lb_cost": "20749",
  "kernel.sched_domain.cpu0.domain0.min_interval": "2",
  "kernel.sched_domain.cpu0.domain0.name": "SMT",
  "kernel.sched_domain.cpu0.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu0.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu0.domain1.flags": "4655",
  "kernel.sched_domain.cpu0.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu0.domain1.max_interval": "8",
  "kernel.sched_domain.cpu0.domain1.max_newidle_lb_cost": "18161",
  "kernel.sched_domain.cpu0.domain1.min_interval": "4",
  "kernel.sched_domain.cpu0.domain1.name": "MC",
  "kernel.sched_domain.cpu1.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu1.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu1.domain0.flags": "4783",
  "kernel.sched_domain.cpu1.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu1.domain0.max_interval": "4",
  "kernel.sched_domain.cpu1.domain0.max_newidle_lb_cost": "28133",
  "kernel.sched_domain.cpu1.domain0.min_interval": "2",
  "kernel.sched_domain.cpu1.domain0.name": "SMT",
  "kernel.sched_domain.cpu1.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu1.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu1.domain1.flags": "4655",
  "kernel.sched_domain.cpu1.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu1.domain1.max_interval": "8",
  "kernel.sched_domain.cpu1.domain1.max_newidle_lb_cost": "24027",
  "kernel.sched_domain.cpu1.domain1.min_interval": "4",
  "kernel.sched_domain.cpu1.domain1.name": "MC",
  "kernel.sched_domain.cpu2.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu2.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu2.domain0.flags": "4783",
  "kernel.sched_domain.cpu2.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu2.domain0.max_interval": "4",
  "kernel.sched_domain.cpu2.domain0.max_newidle_lb_cost": "25333",
  "kernel.sched_domain.cpu2.domain0.min_interval": "2",
  "kernel.sched_domain.cpu2.domain0.name": "SMT",
  "kernel.sched_domain.cpu2.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu2.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu2.domain1.flags": "4655",
  "kernel.sched_domain.cpu2.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu2.domain1.max_interval": "8",
  "kernel.sched_domain.cpu2.domain1.max_newidle_lb_cost": "20159",
  "kernel.sched_domain.cpu2.domain1.min_interval": "4",
  "kernel.sched_domain.cpu2.domain1.name": "MC",
  "kernel.sched_domain.cpu3.domain0.busy_factor": "32",
  "kernel.sched_domain.cpu3.domain0.cache_nice_tries": "0",
  "kernel.sched_domain.cpu3.domain0.flags": "4783",
  "kernel.sched_domain.cpu3.domain0.imbalance_pct": "110",
  "kernel.sched_domain.cpu3.domain0.max_interval": "4",
  "kernel.sched_domain.cpu3.domain0.max_newidle_lb_cost": "20325",
  "kernel.sched_domain.cpu3.domain0.min_interval": "2",
  "kernel.sched_domain.cpu3.domain0.name": "SMT",
  "kernel.sched_domain.cpu3.domain1.busy_factor": "32",
  "kernel.sched_domain.cpu3.domain1.cache_nice_tries": "1",
  "kernel.sched_domain.cpu3.domain1.flags": "4655",
  "kernel.sched_domain.cpu3.domain1.imbalance_pct": "117",
  "kernel.sched_domain.cpu3.domain1.max_interval": "8",
  "kernel.sched_domain.cpu3.domain1.max_newidle_lb_cost": "20639",
  "kernel.sched_domain.cpu3.domain1.min_interval": "4",
  "kernel.sched_domain.cpu3.domain1.name": "MC",
  "kernel.sched_latency_ns": "18000000",
  "kernel.sched_migration_cost_ns": "500000",
  "kernel.sched_min_granularity_ns": "2250000",
  "kernel.sched_nr_migrate": "32",
  "kernel.sched_rr_timeslice_ms": "100",
  "kernel.sched_rt_period_us": "1000000",
  "kernel.sched_rt_runtime_us": "950000",
  "kernel.sched_schedstats": "0",
  "kernel.sched_tunable_scaling": "1",
  "kernel.sched_util_clamp_max": "1024",
  "kernel.sched_util_clamp_min": "1024",
  "kernel.sched_wakeup_granularity_ns": "3000000",
  "kernel.seccomp.actions_avail": "kill_process kill_thread trap errno user_notif trace log allow",
  "kernel.seccomp.actions_logged": "kill_process kill_thread trap errno user_notif trace log",
  "kernel.sem": "32000\t1024000000\t500\t32000",
  "kernel.sem_next_id": "-1",
  "kernel.sg-big-buff": "32768",
  "kernel.shm_next_id": "-1",
  "kernel.shm_rmid_forced": "0",
  "kernel.shmall": "18446744073692774399",
  "kernel.shmmax": "18446744073692774399",
  "kernel.shmmni": "4096",
  "kernel.soft_watchdog": "1",
  "kernel.softlockup_all_cpu_backtrace": "0",
  "kernel.softlockup_panic": "0",
  "kernel.stack_tracer_enabled": "0",
  "kernel.sysctl_writes_strict": "1",
  "kernel.sysrq": "176",
  "kernel.tainted": "5632",
  "kernel.threads-max": "255535",
  "kernel.timer_migration": "1",
  "kernel.traceoff_on_warning": "0",
  "kernel.tracepoint_printk": "0",
  "kernel.unknown_nmi_panic": "0",
  "kernel.unprivileged_bpf_disabled": "0",
  "kernel.unprivileged_userns_clone": "1",
  "kernel.version": "#46-Ubuntu SMP PREEMPT Fri Jul 10 01:43:58 UTC 2020",
  "kernel.watchdog": "1",
  "kernel.watchdog_cpumask": "0-7",
  "kernel.watchdog_thresh": "10",
  "kernel.yama.ptrace_scope": "1",
  "net.bridge.bridge-nf-call-arptables": "1",
  "net.bridge.bridge-nf-call-ip6tables": "1",
  "net.bridge.bridge-nf-call-iptables": "1",
  "net.bridge.bridge-nf-filter-pppoe-tagged": "0",
  "net.bridge.bridge-nf-filter-vlan-tagged": "0",
  "net.bridge.bridge-nf-pass-vlan-input-dev": "0",
  "net.core.bpf_jit_enable": "1",
  "net.core.busy_poll": "0",
  "net.core.busy_read": "0",
  "net.core.default_qdisc": "fq_codel",
  "net.core.dev_weight": "64",
  "net.core.dev_weight_rx_bias": "1",
  "net.core.dev_weight_tx_bias": "1",
  "net.core.devconf_inherit_init_net": "0",
  "net.core.fb_tunnels_only_for_init_net": "0",
  "net.core.flow_limit_cpu_bitmap": "00",
  "net.core.flow_limit_table_len": "4096",
  "net.core.gro_normal_batch": "8",
  "net.core.high_order_alloc_disable": "0",
  "net.core.max_skb_frags": "17",
  "net.core.message_burst": "10",
  "net.core.message_cost": "5",
  "net.core.netdev_budget": "300",
  "net.core.netdev_budget_usecs": "2000",
  "net.core.netdev_max_backlog": "1000",
  "net.core.netdev_rss_key": "de:cd:e7:76:dc:fb:d8:5b:ab:b6:d5:97:d1:14:ce:ac:14:23:a7:c9:07:b3:4a:e9:82:f2:a3:7d:ae:37:21:8f:0b:90:09:47:6b:9d:d6:b2:7b:40:f1:62:fd:a4:b4:a2:cb:29:72:f0",
  "net.core.netdev_tstamp_prequeue": "1",
  "net.core.optmem_max": "20480",
  "net.core.rmem_default": "212992",
  "net.core.rmem_max": "212992",
  "net.core.rps_sock_flow_entries": "0",
  "net.core.somaxconn": "4096",
  "net.core.tstamp_allow_data": "1",
  "net.core.warnings": "0",
  "net.core.wmem_default": "212992",
  "net.core.wmem_max": "212992",
  "net.core.xfrm_acq_expires": "30",
  "net.core.xfrm_aevent_etime": "10",
  "net.core.xfrm_aevent_rseqth": "2",
  "net.core.xfrm_larval_drop": "1",
  "net.ipv4.cipso_cache_bucket_size": "10",
  "net.ipv4.cipso_cache_enable": "1",
  "net.ipv4.cipso_rbm_optfmt": "0",
  "net.ipv4.cipso_rbm_strictvalid": "1",
  "net.ipv4.conf.all.accept_local": "0",
  "net.ipv4.conf.all.accept_redirects": "0",
  "net.ipv4.conf.all.accept_source_route": "0",
  "net.ipv4.conf.all.arp_accept": "0",
  "net.ipv4.conf.all.arp_announce": "0",
  "net.ipv4.conf.all.arp_filter": "0",
  "net.ipv4.conf.all.arp_ignore": "0",
  "net.ipv4.conf.all.arp_notify": "0",
  "net.ipv4.conf.all.bc_forwarding": "0",
  "net.ipv4.conf.all.bootp_relay": "0",
  "net.ipv4.conf.all.disable_policy": "0",
  "net.ipv4.conf.all.disable_xfrm": "0",
  "net.ipv4.conf.all.drop_gratuitous_arp": "0",
  "net.ipv4.conf.all.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.all.force_igmp_version": "0",
  "net.ipv4.conf.all.forwarding": "1",
  "net.ipv4.conf.all.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.all.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.all.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.all.log_martians": "0",
  "net.ipv4.conf.all.mc_forwarding": "0",
  "net.ipv4.conf.all.medium_id": "0",
  "net.ipv4.conf.all.promote_secondaries": "0",
  "net.ipv4.conf.all.proxy_arp": "0",
  "net.ipv4.conf.all.proxy_arp_pvlan": "0",
  "net.ipv4.conf.all.route_localnet": "0",
  "net.ipv4.conf.all.rp_filter": "2",
  "net.ipv4.conf.all.secure_redirects": "1",
  "net.ipv4.conf.all.send_redirects": "1",
  "net.ipv4.conf.all.shared_media": "1",
  "net.ipv4.conf.all.src_valid_mark": "0",
  "net.ipv4.conf.all.tag": "0",
  "net.ipv4.conf.default.accept_local": "0",
  "net.ipv4.conf.default.accept_redirects": "1",
  "net.ipv4.conf.default.accept_source_route": "1",
  "net.ipv4.conf.default.arp_accept": "0",
  "net.ipv4.conf.default.arp_announce": "0",
  "net.ipv4.conf.default.arp_filter": "0",
  "net.ipv4.conf.default.arp_ignore": "0",
  "net.ipv4.conf.default.arp_notify": "0",
  "net.ipv4.conf.default.bc_forwarding": "0",
  "net.ipv4.conf.default.bootp_relay": "0",
  "net.ipv4.conf.default.disable_policy": "0",
  "net.ipv4.conf.default.disable_xfrm": "0",
  "net.ipv4.conf.default.drop_gratuitous_arp": "0",
  "net.ipv4.conf.default.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.default.force_igmp_version": "0",
  "net.ipv4.conf.default.forwarding": "1",
  "net.ipv4.conf.default.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.default.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.default.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.default.log_martians": "0",
  "net.ipv4.conf.default.mc_forwarding": "0",
  "net.ipv4.conf.default.medium_id": "0",
  "net.ipv4.conf.default.promote_secondaries": "1",
  "net.ipv4.conf.default.proxy_arp": "0",
  "net.ipv4.conf.default.proxy_arp_pvlan": "0",
  "net.ipv4.conf.default.route_localnet": "0",
  "net.ipv4.conf.default.rp_filter": "2",
  "net.ipv4.conf.default.secure_redirects": "1",
  "net.ipv4.conf.default.send_redirects": "1",
  "net.ipv4.conf.default.shared_media": "1",
  "net.ipv4.conf.default.src_valid_mark": "0",
  "net.ipv4.conf.default.tag": "0",
  "net.ipv4.conf.docker0.accept_local": "0",
  "net.ipv4.conf.docker0.accept_redirects": "1",
  "net.ipv4.conf.docker0.accept_source_route": "1",
  "net.ipv4.conf.docker0.arp_accept": "0",
  "net.ipv4.conf.docker0.arp_announce": "0",
  "net.ipv4.conf.docker0.arp_filter": "0",
  "net.ipv4.conf.docker0.arp_ignore": "0",
  "net.ipv4.conf.docker0.arp_notify": "0",
  "net.ipv4.conf.docker0.bc_forwarding": "0",
  "net.ipv4.conf.docker0.bootp_relay": "0",
  "net.ipv4.conf.docker0.disable_policy": "0",
  "net.ipv4.conf.docker0.disable_xfrm": "0",
  "net.ipv4.conf.docker0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.docker0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.docker0.force_igmp_version": "0",
  "net.ipv4.conf.docker0.forwarding": "1",
  "net.ipv4.conf.docker0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.docker0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.docker0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.docker0.log_martians": "0",
  "net.ipv4.conf.docker0.mc_forwarding": "0",
  "net.ipv4.conf.docker0.medium_id": "0",
  "net.ipv4.conf.docker0.promote_secondaries": "1",
  "net.ipv4.conf.docker0.proxy_arp": "0",
  "net.ipv4.conf.docker0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.docker0.route_localnet": "0",
  "net.ipv4.conf.docker0.rp_filter": "2",
  "net.ipv4.conf.docker0.secure_redirects": "1",
  "net.ipv4.conf.docker0.send_redirects": "1",
  "net.ipv4.conf.docker0.shared_media": "1",
  "net.ipv4.conf.docker0.src_valid_mark": "0",
  "net.ipv4.conf.docker0.tag": "0",
  "net.ipv4.conf.eth0.accept_local": "0",
  "net.ipv4.conf.eth0.accept_redirects": "1",
  "net.ipv4.conf.eth0.accept_source_route": "1",
  "net.ipv4.conf.eth0.arp_accept": "0",
  "net.ipv4.conf.eth0.arp_announce": "0",
  "net.ipv4.conf.eth0.arp_filter": "0",
  "net.ipv4.conf.eth0.arp_ignore": "0",
  "net.ipv4.conf.eth0.arp_notify": "0",
  "net.ipv4.conf.eth0.bc_forwarding": "0",
  "net.ipv4.conf.eth0.bootp_relay": "0",
  "net.ipv4.conf.eth0.disable_policy": "0",
  "net.ipv4.conf.eth0.disable_xfrm": "0",
  "net.ipv4.conf.eth0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.eth0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.eth0.force_igmp_version": "0",
  "net.ipv4.conf.eth0.forwarding": "1",
  "net.ipv4.conf.eth0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.eth0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.eth0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.eth0.log_martians": "0",
  "net.ipv4.conf.eth0.mc_forwarding": "0",
  "net.ipv4.conf.eth0.medium_id": "0",
  "net.ipv4.conf.eth0.promote_secondaries": "1",
  "net.ipv4.conf.eth0.proxy_arp": "0",
  "net.ipv4.conf.eth0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.eth0.route_localnet": "0",
  "net.ipv4.conf.eth0.rp_filter": "2",
  "net.ipv4.conf.eth0.secure_redirects": "1",
  "net.ipv4.conf.eth0.send_redirects": "1",
  "net.ipv4.conf.eth0.shared_media": "1",
  "net.ipv4.conf.eth0.src_valid_mark": "0",
  "net.ipv4.conf.eth0.tag": "0",
  "net.ipv4.conf.lo.accept_local": "0",
  "net.ipv4.conf.lo.accept_redirects": "1",
  "net.ipv4.conf.lo.accept_source_route": "1",
  "net.ipv4.conf.lo.arp_accept": "0",
  "net.ipv4.conf.lo.arp_announce": "0",
  "net.ipv4.conf.lo.arp_filter": "0",
  "net.ipv4.conf.lo.arp_ignore": "0",
  "net.ipv4.conf.lo.arp_notify": "0",
  "net.ipv4.conf.lo.bc_forwarding": "0",
  "net.ipv4.conf.lo.bootp_relay": "0",
  "net.ipv4.conf.lo.disable_policy": "1",
  "net.ipv4.conf.lo.disable_xfrm": "1",
  "net.ipv4.conf.lo.drop_gratuitous_arp": "0",
  "net.ipv4.conf.lo.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.lo.force_igmp_version": "0",
  "net.ipv4.conf.lo.forwarding": "1",
  "net.ipv4.conf.lo.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.lo.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.lo.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.lo.log_martians": "0",
  "net.ipv4.conf.lo.mc_forwarding": "0",
  "net.ipv4.conf.lo.medium_id": "0",
  "net.ipv4.conf.lo.promote_secondaries": "1",
  "net.ipv4.conf.lo.proxy_arp": "0",
  "net.ipv4.conf.lo.proxy_arp_pvlan": "0",
  "net.ipv4.conf.lo.route_localnet": "0",
  "net.ipv4.conf.lo.rp_filter": "0",
  "net.ipv4.conf.lo.secure_redirects": "1",
  "net.ipv4.conf.lo.send_redirects": "1",
  "net.ipv4.conf.lo.shared_media": "1",
  "net.ipv4.conf.lo.src_valid_mark": "0",
  "net.ipv4.conf.lo.tag": "0",
  "net.ipv4.conf.tun0.accept_local": "0",
  "net.ipv4.conf.tun0.accept_redirects": "1",
  "net.ipv4.conf.tun0.accept_source_route": "1",
  "net.ipv4.conf.tun0.arp_accept": "0",
  "net.ipv4.conf.tun0.arp_announce": "0",
  "net.ipv4.conf.tun0.arp_filter": "0",
  "net.ipv4.conf.tun0.arp_ignore": "0",
  "net.ipv4.conf.tun0.arp_notify": "0",
  "net.ipv4.conf.tun0.bc_forwarding": "0",
  "net.ipv4.conf.tun0.bootp_relay": "0",
  "net.ipv4.conf.tun0.disable_policy": "0",
  "net.ipv4.conf.tun0.disable_xfrm": "0",
  "net.ipv4.conf.tun0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.tun0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.tun0.force_igmp_version": "0",
  "net.ipv4.conf.tun0.forwarding": "1",
  "net.ipv4.conf.tun0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.tun0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.tun0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.tun0.log_martians": "0",
  "net.ipv4.conf.tun0.mc_forwarding": "0",
  "net.ipv4.conf.tun0.medium_id": "0",
  "net.ipv4.conf.tun0.promote_secondaries": "1",
  "net.ipv4.conf.tun0.proxy_arp": "0",
  "net.ipv4.conf.tun0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.tun0.route_localnet": "0",
  "net.ipv4.conf.tun0.rp_filter": "2",
  "net.ipv4.conf.tun0.secure_redirects": "1",
  "net.ipv4.conf.tun0.send_redirects": "1",
  "net.ipv4.conf.tun0.shared_media": "1",
  "net.ipv4.conf.tun0.src_valid_mark": "0",
  "net.ipv4.conf.tun0.tag": "0",
  "net.ipv4.conf.vboxnet0.accept_local": "0",
  "net.ipv4.conf.vboxnet0.accept_redirects": "1",
  "net.ipv4.conf.vboxnet0.accept_source_route": "1",
  "net.ipv4.conf.vboxnet0.arp_accept": "0",
  "net.ipv4.conf.vboxnet0.arp_announce": "0",
  "net.ipv4.conf.vboxnet0.arp_filter": "0",
  "net.ipv4.conf.vboxnet0.arp_ignore": "0",
  "net.ipv4.conf.vboxnet0.arp_notify": "0",
  "net.ipv4.conf.vboxnet0.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet0.bootp_relay": "0",
  "net.ipv4.conf.vboxnet0.disable_policy": "0",
  "net.ipv4.conf.vboxnet0.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet0.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet0.forwarding": "1",
  "net.ipv4.conf.vboxnet0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet0.log_martians": "0",
  "net.ipv4.conf.vboxnet0.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet0.medium_id": "0",
  "net.ipv4.conf.vboxnet0.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet0.proxy_arp": "0",
  "net.ipv4.conf.vboxnet0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet0.route_localnet": "0",
  "net.ipv4.conf.vboxnet0.rp_filter": "2",
  "net.ipv4.conf.vboxnet0.secure_redirects": "1",
  "net.ipv4.conf.vboxnet0.send_redirects": "1",
  "net.ipv4.conf.vboxnet0.shared_media": "1",
  "net.ipv4.conf.vboxnet0.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet0.tag": "0",
  "net.ipv4.conf.vboxnet1.accept_local": "0",
  "net.ipv4.conf.vboxnet1.accept_redirects": "1",
  "net.ipv4.conf.vboxnet1.accept_source_route": "1",
  "net.ipv4.conf.vboxnet1.arp_accept": "0",
  "net.ipv4.conf.vboxnet1.arp_announce": "0",
  "net.ipv4.conf.vboxnet1.arp_filter": "0",
  "net.ipv4.conf.vboxnet1.arp_ignore": "0",
  "net.ipv4.conf.vboxnet1.arp_notify": "0",
  "net.ipv4.conf.vboxnet1.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet1.bootp_relay": "0",
  "net.ipv4.conf.vboxnet1.disable_policy": "0",
  "net.ipv4.conf.vboxnet1.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet1.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet1.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet1.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet1.forwarding": "1",
  "net.ipv4.conf.vboxnet1.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet1.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet1.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet1.log_martians": "0",
  "net.ipv4.conf.vboxnet1.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet1.medium_id": "0",
  "net.ipv4.conf.vboxnet1.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet1.proxy_arp": "0",
  "net.ipv4.conf.vboxnet1.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet1.route_localnet": "0",
  "net.ipv4.conf.vboxnet1.rp_filter": "2",
  "net.ipv4.conf.vboxnet1.secure_redirects": "1",
  "net.ipv4.conf.vboxnet1.send_redirects": "1",
  "net.ipv4.conf.vboxnet1.shared_media": "1",
  "net.ipv4.conf.vboxnet1.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet1.tag": "0",
  "net.ipv4.conf.vboxnet10.accept_local": "0",
  "net.ipv4.conf.vboxnet10.accept_redirects": "1",
  "net.ipv4.conf.vboxnet10.accept_source_route": "1",
  "net.ipv4.conf.vboxnet10.arp_accept": "0",
  "net.ipv4.conf.vboxnet10.arp_announce": "0",
  "net.ipv4.conf.vboxnet10.arp_filter": "0",
  "net.ipv4.conf.vboxnet10.arp_ignore": "0",
  "net.ipv4.conf.vboxnet10.arp_notify": "0",
  "net.ipv4.conf.vboxnet10.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet10.bootp_relay": "0",
  "net.ipv4.conf.vboxnet10.disable_policy": "0",
  "net.ipv4.conf.vboxnet10.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet10.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet10.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet10.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet10.forwarding": "1",
  "net.ipv4.conf.vboxnet10.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet10.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet10.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet10.log_martians": "0",
  "net.ipv4.conf.vboxnet10.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet10.medium_id": "0",
  "net.ipv4.conf.vboxnet10.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet10.proxy_arp": "0",
  "net.ipv4.conf.vboxnet10.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet10.route_localnet": "0",
  "net.ipv4.conf.vboxnet10.rp_filter": "2",
  "net.ipv4.conf.vboxnet10.secure_redirects": "1",
  "net.ipv4.conf.vboxnet10.send_redirects": "1",
  "net.ipv4.conf.vboxnet10.shared_media": "1",
  "net.ipv4.conf.vboxnet10.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet10.tag": "0",
  "net.ipv4.conf.vboxnet11.accept_local": "0",
  "net.ipv4.conf.vboxnet11.accept_redirects": "1",
  "net.ipv4.conf.vboxnet11.accept_source_route": "1",
  "net.ipv4.conf.vboxnet11.arp_accept": "0",
  "net.ipv4.conf.vboxnet11.arp_announce": "0",
  "net.ipv4.conf.vboxnet11.arp_filter": "0",
  "net.ipv4.conf.vboxnet11.arp_ignore": "0",
  "net.ipv4.conf.vboxnet11.arp_notify": "0",
  "net.ipv4.conf.vboxnet11.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet11.bootp_relay": "0",
  "net.ipv4.conf.vboxnet11.disable_policy": "0",
  "net.ipv4.conf.vboxnet11.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet11.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet11.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet11.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet11.forwarding": "1",
  "net.ipv4.conf.vboxnet11.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet11.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet11.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet11.log_martians": "0",
  "net.ipv4.conf.vboxnet11.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet11.medium_id": "0",
  "net.ipv4.conf.vboxnet11.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet11.proxy_arp": "0",
  "net.ipv4.conf.vboxnet11.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet11.route_localnet": "0",
  "net.ipv4.conf.vboxnet11.rp_filter": "2",
  "net.ipv4.conf.vboxnet11.secure_redirects": "1",
  "net.ipv4.conf.vboxnet11.send_redirects": "1",
  "net.ipv4.conf.vboxnet11.shared_media": "1",
  "net.ipv4.conf.vboxnet11.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet11.tag": "0",
  "net.ipv4.conf.vboxnet12.accept_local": "0",
  "net.ipv4.conf.vboxnet12.accept_redirects": "1",
  "net.ipv4.conf.vboxnet12.accept_source_route": "1",
  "net.ipv4.conf.vboxnet12.arp_accept": "0",
  "net.ipv4.conf.vboxnet12.arp_announce": "0",
  "net.ipv4.conf.vboxnet12.arp_filter": "0",
  "net.ipv4.conf.vboxnet12.arp_ignore": "0",
  "net.ipv4.conf.vboxnet12.arp_notify": "0",
  "net.ipv4.conf.vboxnet12.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet12.bootp_relay": "0",
  "net.ipv4.conf.vboxnet12.disable_policy": "0",
  "net.ipv4.conf.vboxnet12.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet12.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet12.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet12.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet12.forwarding": "1",
  "net.ipv4.conf.vboxnet12.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet12.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet12.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet12.log_martians": "0",
  "net.ipv4.conf.vboxnet12.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet12.medium_id": "0",
  "net.ipv4.conf.vboxnet12.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet12.proxy_arp": "0",
  "net.ipv4.conf.vboxnet12.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet12.route_localnet": "0",
  "net.ipv4.conf.vboxnet12.rp_filter": "2",
  "net.ipv4.conf.vboxnet12.secure_redirects": "1",
  "net.ipv4.conf.vboxnet12.send_redirects": "1",
  "net.ipv4.conf.vboxnet12.shared_media": "1",
  "net.ipv4.conf.vboxnet12.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet12.tag": "0",
  "net.ipv4.conf.vboxnet13.accept_local": "0",
  "net.ipv4.conf.vboxnet13.accept_redirects": "1",
  "net.ipv4.conf.vboxnet13.accept_source_route": "1",
  "net.ipv4.conf.vboxnet13.arp_accept": "0",
  "net.ipv4.conf.vboxnet13.arp_announce": "0",
  "net.ipv4.conf.vboxnet13.arp_filter": "0",
  "net.ipv4.conf.vboxnet13.arp_ignore": "0",
  "net.ipv4.conf.vboxnet13.arp_notify": "0",
  "net.ipv4.conf.vboxnet13.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet13.bootp_relay": "0",
  "net.ipv4.conf.vboxnet13.disable_policy": "0",
  "net.ipv4.conf.vboxnet13.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet13.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet13.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet13.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet13.forwarding": "1",
  "net.ipv4.conf.vboxnet13.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet13.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet13.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet13.log_martians": "0",
  "net.ipv4.conf.vboxnet13.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet13.medium_id": "0",
  "net.ipv4.conf.vboxnet13.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet13.proxy_arp": "0",
  "net.ipv4.conf.vboxnet13.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet13.route_localnet": "0",
  "net.ipv4.conf.vboxnet13.rp_filter": "2",
  "net.ipv4.conf.vboxnet13.secure_redirects": "1",
  "net.ipv4.conf.vboxnet13.send_redirects": "1",
  "net.ipv4.conf.vboxnet13.shared_media": "1",
  "net.ipv4.conf.vboxnet13.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet13.tag": "0",
  "net.ipv4.conf.vboxnet2.accept_local": "0",
  "net.ipv4.conf.vboxnet2.accept_redirects": "1",
  "net.ipv4.conf.vboxnet2.accept_source_route": "1",
  "net.ipv4.conf.vboxnet2.arp_accept": "0",
  "net.ipv4.conf.vboxnet2.arp_announce": "0",
  "net.ipv4.conf.vboxnet2.arp_filter": "0",
  "net.ipv4.conf.vboxnet2.arp_ignore": "0",
  "net.ipv4.conf.vboxnet2.arp_notify": "0",
  "net.ipv4.conf.vboxnet2.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet2.bootp_relay": "0",
  "net.ipv4.conf.vboxnet2.disable_policy": "0",
  "net.ipv4.conf.vboxnet2.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet2.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet2.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet2.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet2.forwarding": "1",
  "net.ipv4.conf.vboxnet2.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet2.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet2.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet2.log_martians": "0",
  "net.ipv4.conf.vboxnet2.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet2.medium_id": "0",
  "net.ipv4.conf.vboxnet2.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet2.proxy_arp": "0",
  "net.ipv4.conf.vboxnet2.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet2.route_localnet": "0",
  "net.ipv4.conf.vboxnet2.rp_filter": "2",
  "net.ipv4.conf.vboxnet2.secure_redirects": "1",
  "net.ipv4.conf.vboxnet2.send_redirects": "1",
  "net.ipv4.conf.vboxnet2.shared_media": "1",
  "net.ipv4.conf.vboxnet2.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet2.tag": "0",
  "net.ipv4.conf.vboxnet3.accept_local": "0",
  "net.ipv4.conf.vboxnet3.accept_redirects": "1",
  "net.ipv4.conf.vboxnet3.accept_source_route": "1",
  "net.ipv4.conf.vboxnet3.arp_accept": "0",
  "net.ipv4.conf.vboxnet3.arp_announce": "0",
  "net.ipv4.conf.vboxnet3.arp_filter": "0",
  "net.ipv4.conf.vboxnet3.arp_ignore": "0",
  "net.ipv4.conf.vboxnet3.arp_notify": "0",
  "net.ipv4.conf.vboxnet3.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet3.bootp_relay": "0",
  "net.ipv4.conf.vboxnet3.disable_policy": "0",
  "net.ipv4.conf.vboxnet3.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet3.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet3.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet3.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet3.forwarding": "1",
  "net.ipv4.conf.vboxnet3.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet3.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet3.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet3.log_martians": "0",
  "net.ipv4.conf.vboxnet3.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet3.medium_id": "0",
  "net.ipv4.conf.vboxnet3.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet3.proxy_arp": "0",
  "net.ipv4.conf.vboxnet3.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet3.route_localnet": "0",
  "net.ipv4.conf.vboxnet3.rp_filter": "2",
  "net.ipv4.conf.vboxnet3.secure_redirects": "1",
  "net.ipv4.conf.vboxnet3.send_redirects": "1",
  "net.ipv4.conf.vboxnet3.shared_media": "1",
  "net.ipv4.conf.vboxnet3.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet3.tag": "0",
  "net.ipv4.conf.vboxnet4.accept_local": "0",
  "net.ipv4.conf.vboxnet4.accept_redirects": "1",
  "net.ipv4.conf.vboxnet4.accept_source_route": "1",
  "net.ipv4.conf.vboxnet4.arp_accept": "0",
  "net.ipv4.conf.vboxnet4.arp_announce": "0",
  "net.ipv4.conf.vboxnet4.arp_filter": "0",
  "net.ipv4.conf.vboxnet4.arp_ignore": "0",
  "net.ipv4.conf.vboxnet4.arp_notify": "0",
  "net.ipv4.conf.vboxnet4.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet4.bootp_relay": "0",
  "net.ipv4.conf.vboxnet4.disable_policy": "0",
  "net.ipv4.conf.vboxnet4.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet4.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet4.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet4.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet4.forwarding": "1",
  "net.ipv4.conf.vboxnet4.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet4.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet4.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet4.log_martians": "0",
  "net.ipv4.conf.vboxnet4.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet4.medium_id": "0",
  "net.ipv4.conf.vboxnet4.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet4.proxy_arp": "0",
  "net.ipv4.conf.vboxnet4.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet4.route_localnet": "0",
  "net.ipv4.conf.vboxnet4.rp_filter": "2",
  "net.ipv4.conf.vboxnet4.secure_redirects": "1",
  "net.ipv4.conf.vboxnet4.send_redirects": "1",
  "net.ipv4.conf.vboxnet4.shared_media": "1",
  "net.ipv4.conf.vboxnet4.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet4.tag": "0",
  "net.ipv4.conf.vboxnet5.accept_local": "0",
  "net.ipv4.conf.vboxnet5.accept_redirects": "1",
  "net.ipv4.conf.vboxnet5.accept_source_route": "1",
  "net.ipv4.conf.vboxnet5.arp_accept": "0",
  "net.ipv4.conf.vboxnet5.arp_announce": "0",
  "net.ipv4.conf.vboxnet5.arp_filter": "0",
  "net.ipv4.conf.vboxnet5.arp_ignore": "0",
  "net.ipv4.conf.vboxnet5.arp_notify": "0",
  "net.ipv4.conf.vboxnet5.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet5.bootp_relay": "0",
  "net.ipv4.conf.vboxnet5.disable_policy": "0",
  "net.ipv4.conf.vboxnet5.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet5.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet5.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet5.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet5.forwarding": "1",
  "net.ipv4.conf.vboxnet5.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet5.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet5.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet5.log_martians": "0",
  "net.ipv4.conf.vboxnet5.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet5.medium_id": "0",
  "net.ipv4.conf.vboxnet5.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet5.proxy_arp": "0",
  "net.ipv4.conf.vboxnet5.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet5.route_localnet": "0",
  "net.ipv4.conf.vboxnet5.rp_filter": "2",
  "net.ipv4.conf.vboxnet5.secure_redirects": "1",
  "net.ipv4.conf.vboxnet5.send_redirects": "1",
  "net.ipv4.conf.vboxnet5.shared_media": "1",
  "net.ipv4.conf.vboxnet5.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet5.tag": "0",
  "net.ipv4.conf.vboxnet6.accept_local": "0",
  "net.ipv4.conf.vboxnet6.accept_redirects": "1",
  "net.ipv4.conf.vboxnet6.accept_source_route": "1",
  "net.ipv4.conf.vboxnet6.arp_accept": "0",
  "net.ipv4.conf.vboxnet6.arp_announce": "0",
  "net.ipv4.conf.vboxnet6.arp_filter": "0",
  "net.ipv4.conf.vboxnet6.arp_ignore": "0",
  "net.ipv4.conf.vboxnet6.arp_notify": "0",
  "net.ipv4.conf.vboxnet6.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet6.bootp_relay": "0",
  "net.ipv4.conf.vboxnet6.disable_policy": "0",
  "net.ipv4.conf.vboxnet6.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet6.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet6.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet6.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet6.forwarding": "1",
  "net.ipv4.conf.vboxnet6.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet6.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet6.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet6.log_martians": "0",
  "net.ipv4.conf.vboxnet6.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet6.medium_id": "0",
  "net.ipv4.conf.vboxnet6.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet6.proxy_arp": "0",
  "net.ipv4.conf.vboxnet6.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet6.route_localnet": "0",
  "net.ipv4.conf.vboxnet6.rp_filter": "2",
  "net.ipv4.conf.vboxnet6.secure_redirects": "1",
  "net.ipv4.conf.vboxnet6.send_redirects": "1",
  "net.ipv4.conf.vboxnet6.shared_media": "1",
  "net.ipv4.conf.vboxnet6.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet6.tag": "0",
  "net.ipv4.conf.vboxnet7.accept_local": "0",
  "net.ipv4.conf.vboxnet7.accept_redirects": "1",
  "net.ipv4.conf.vboxnet7.accept_source_route": "1",
  "net.ipv4.conf.vboxnet7.arp_accept": "0",
  "net.ipv4.conf.vboxnet7.arp_announce": "0",
  "net.ipv4.conf.vboxnet7.arp_filter": "0",
  "net.ipv4.conf.vboxnet7.arp_ignore": "0",
  "net.ipv4.conf.vboxnet7.arp_notify": "0",
  "net.ipv4.conf.vboxnet7.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet7.bootp_relay": "0",
  "net.ipv4.conf.vboxnet7.disable_policy": "0",
  "net.ipv4.conf.vboxnet7.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet7.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet7.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet7.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet7.forwarding": "1",
  "net.ipv4.conf.vboxnet7.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet7.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet7.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet7.log_martians": "0",
  "net.ipv4.conf.vboxnet7.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet7.medium_id": "0",
  "net.ipv4.conf.vboxnet7.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet7.proxy_arp": "0",
  "net.ipv4.conf.vboxnet7.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet7.route_localnet": "0",
  "net.ipv4.conf.vboxnet7.rp_filter": "2",
  "net.ipv4.conf.vboxnet7.secure_redirects": "1",
  "net.ipv4.conf.vboxnet7.send_redirects": "1",
  "net.ipv4.conf.vboxnet7.shared_media": "1",
  "net.ipv4.conf.vboxnet7.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet7.tag": "0",
  "net.ipv4.conf.vboxnet8.accept_local": "0",
  "net.ipv4.conf.vboxnet8.accept_redirects": "1",
  "net.ipv4.conf.vboxnet8.accept_source_route": "1",
  "net.ipv4.conf.vboxnet8.arp_accept": "0",
  "net.ipv4.conf.vboxnet8.arp_announce": "0",
  "net.ipv4.conf.vboxnet8.arp_filter": "0",
  "net.ipv4.conf.vboxnet8.arp_ignore": "0",
  "net.ipv4.conf.vboxnet8.arp_notify": "0",
  "net.ipv4.conf.vboxnet8.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet8.bootp_relay": "0",
  "net.ipv4.conf.vboxnet8.disable_policy": "0",
  "net.ipv4.conf.vboxnet8.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet8.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet8.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet8.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet8.forwarding": "1",
  "net.ipv4.conf.vboxnet8.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet8.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet8.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet8.log_martians": "0",
  "net.ipv4.conf.vboxnet8.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet8.medium_id": "0",
  "net.ipv4.conf.vboxnet8.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet8.proxy_arp": "0",
  "net.ipv4.conf.vboxnet8.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet8.route_localnet": "0",
  "net.ipv4.conf.vboxnet8.rp_filter": "2",
  "net.ipv4.conf.vboxnet8.secure_redirects": "1",
  "net.ipv4.conf.vboxnet8.send_redirects": "1",
  "net.ipv4.conf.vboxnet8.shared_media": "1",
  "net.ipv4.conf.vboxnet8.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet8.tag": "0",
  "net.ipv4.conf.vboxnet9.accept_local": "0",
  "net.ipv4.conf.vboxnet9.accept_redirects": "1",
  "net.ipv4.conf.vboxnet9.accept_source_route": "1",
  "net.ipv4.conf.vboxnet9.arp_accept": "0",
  "net.ipv4.conf.vboxnet9.arp_announce": "0",
  "net.ipv4.conf.vboxnet9.arp_filter": "0",
  "net.ipv4.conf.vboxnet9.arp_ignore": "0",
  "net.ipv4.conf.vboxnet9.arp_notify": "0",
  "net.ipv4.conf.vboxnet9.bc_forwarding": "0",
  "net.ipv4.conf.vboxnet9.bootp_relay": "0",
  "net.ipv4.conf.vboxnet9.disable_policy": "0",
  "net.ipv4.conf.vboxnet9.disable_xfrm": "0",
  "net.ipv4.conf.vboxnet9.drop_gratuitous_arp": "0",
  "net.ipv4.conf.vboxnet9.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.vboxnet9.force_igmp_version": "0",
  "net.ipv4.conf.vboxnet9.forwarding": "1",
  "net.ipv4.conf.vboxnet9.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.vboxnet9.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.vboxnet9.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.vboxnet9.log_martians": "0",
  "net.ipv4.conf.vboxnet9.mc_forwarding": "0",
  "net.ipv4.conf.vboxnet9.medium_id": "0",
  "net.ipv4.conf.vboxnet9.promote_secondaries": "1",
  "net.ipv4.conf.vboxnet9.proxy_arp": "0",
  "net.ipv4.conf.vboxnet9.proxy_arp_pvlan": "0",
  "net.ipv4.conf.vboxnet9.route_localnet": "0",
  "net.ipv4.conf.vboxnet9.rp_filter": "2",
  "net.ipv4.conf.vboxnet9.secure_redirects": "1",
  "net.ipv4.conf.vboxnet9.send_redirects": "1",
  "net.ipv4.conf.vboxnet9.shared_media": "1",
  "net.ipv4.conf.vboxnet9.src_valid_mark": "0",
  "net.ipv4.conf.vboxnet9.tag": "0",
  "net.ipv4.conf.virbr0-nic.accept_local": "0",
  "net.ipv4.conf.virbr0-nic.accept_redirects": "1",
  "net.ipv4.conf.virbr0-nic.accept_source_route": "1",
  "net.ipv4.conf.virbr0-nic.arp_accept": "0",
  "net.ipv4.conf.virbr0-nic.arp_announce": "0",
  "net.ipv4.conf.virbr0-nic.arp_filter": "0",
  "net.ipv4.conf.virbr0-nic.arp_ignore": "0",
  "net.ipv4.conf.virbr0-nic.arp_notify": "0",
  "net.ipv4.conf.virbr0-nic.bc_forwarding": "0",
  "net.ipv4.conf.virbr0-nic.bootp_relay": "0",
  "net.ipv4.conf.virbr0-nic.disable_policy": "0",
  "net.ipv4.conf.virbr0-nic.disable_xfrm": "0",
  "net.ipv4.conf.virbr0-nic.drop_gratuitous_arp": "0",
  "net.ipv4.conf.virbr0-nic.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.virbr0-nic.force_igmp_version": "0",
  "net.ipv4.conf.virbr0-nic.forwarding": "1",
  "net.ipv4.conf.virbr0-nic.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.virbr0-nic.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.virbr0-nic.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.virbr0-nic.log_martians": "0",
  "net.ipv4.conf.virbr0-nic.mc_forwarding": "0",
  "net.ipv4.conf.virbr0-nic.medium_id": "0",
  "net.ipv4.conf.virbr0-nic.promote_secondaries": "1",
  "net.ipv4.conf.virbr0-nic.proxy_arp": "0",
  "net.ipv4.conf.virbr0-nic.proxy_arp_pvlan": "0",
  "net.ipv4.conf.virbr0-nic.route_localnet": "0",
  "net.ipv4.conf.virbr0-nic.rp_filter": "2",
  "net.ipv4.conf.virbr0-nic.secure_redirects": "1",
  "net.ipv4.conf.virbr0-nic.send_redirects": "1",
  "net.ipv4.conf.virbr0-nic.shared_media": "1",
  "net.ipv4.conf.virbr0-nic.src_valid_mark": "0",
  "net.ipv4.conf.virbr0-nic.tag": "0",
  "net.ipv4.conf.virbr0.accept_local": "0",
  "net.ipv4.conf.virbr0.accept_redirects": "1",
  "net.ipv4.conf.virbr0.accept_source_route": "1",
  "net.ipv4.conf.virbr0.arp_accept": "0",
  "net.ipv4.conf.virbr0.arp_announce": "0",
  "net.ipv4.conf.virbr0.arp_filter": "0",
  "net.ipv4.conf.virbr0.arp_ignore": "0",
  "net.ipv4.conf.virbr0.arp_notify": "0",
  "net.ipv4.conf.virbr0.bc_forwarding": "0",
  "net.ipv4.conf.virbr0.bootp_relay": "0",
  "net.ipv4.conf.virbr0.disable_policy": "0",
  "net.ipv4.conf.virbr0.disable_xfrm": "0",
  "net.ipv4.conf.virbr0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.virbr0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.virbr0.force_igmp_version": "0",
  "net.ipv4.conf.virbr0.forwarding": "1",
  "net.ipv4.conf.virbr0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.virbr0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.virbr0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.virbr0.log_martians": "0",
  "net.ipv4.conf.virbr0.mc_forwarding": "0",
  "net.ipv4.conf.virbr0.medium_id": "0",
  "net.ipv4.conf.virbr0.promote_secondaries": "1",
  "net.ipv4.conf.virbr0.proxy_arp": "0",
  "net.ipv4.conf.virbr0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.virbr0.route_localnet": "0",
  "net.ipv4.conf.virbr0.rp_filter": "2",
  "net.ipv4.conf.virbr0.secure_redirects": "1",
  "net.ipv4.conf.virbr0.send_redirects": "1",
  "net.ipv4.conf.virbr0.shared_media": "1",
  "net.ipv4.conf.virbr0.src_valid_mark": "0",
  "net.ipv4.conf.virbr0.tag": "0",
  "net.ipv4.conf.wlan0.accept_local": "0",
  "net.ipv4.conf.wlan0.accept_redirects": "1",
  "net.ipv4.conf.wlan0.accept_source_route": "1",
  "net.ipv4.conf.wlan0.arp_accept": "0",
  "net.ipv4.conf.wlan0.arp_announce": "0",
  "net.ipv4.conf.wlan0.arp_filter": "0",
  "net.ipv4.conf.wlan0.arp_ignore": "0",
  "net.ipv4.conf.wlan0.arp_notify": "0",
  "net.ipv4.conf.wlan0.bc_forwarding": "0",
  "net.ipv4.conf.wlan0.bootp_relay": "0",
  "net.ipv4.conf.wlan0.disable_policy": "0",
  "net.ipv4.conf.wlan0.disable_xfrm": "0",
  "net.ipv4.conf.wlan0.drop_gratuitous_arp": "0",
  "net.ipv4.conf.wlan0.drop_unicast_in_l2_multicast": "0",
  "net.ipv4.conf.wlan0.force_igmp_version": "0",
  "net.ipv4.conf.wlan0.forwarding": "1",
  "net.ipv4.conf.wlan0.igmpv2_unsolicited_report_interval": "10000",
  "net.ipv4.conf.wlan0.igmpv3_unsolicited_report_interval": "1000",
  "net.ipv4.conf.wlan0.ignore_routes_with_linkdown": "0",
  "net.ipv4.conf.wlan0.log_martians": "0",
  "net.ipv4.conf.wlan0.mc_forwarding": "0",
  "net.ipv4.conf.wlan0.medium_id": "0",
  "net.ipv4.conf.wlan0.promote_secondaries": "1",
  "net.ipv4.conf.wlan0.proxy_arp": "0",
  "net.ipv4.conf.wlan0.proxy_arp_pvlan": "0",
  "net.ipv4.conf.wlan0.route_localnet": "0",
  "net.ipv4.conf.wlan0.rp_filter": "2",
  "net.ipv4.conf.wlan0.secure_redirects": "1",
  "net.ipv4.conf.wlan0.send_redirects": "1",
  "net.ipv4.conf.wlan0.shared_media": "1",
  "net.ipv4.conf.wlan0.src_valid_mark": "0",
  "net.ipv4.conf.wlan0.tag": "0",
  "net.ipv4.fib_multipath_hash_policy": "0",
  "net.ipv4.fib_multipath_use_neigh": "0",
  "net.ipv4.fib_sync_mem": "524288",
  "net.ipv4.fwmark_reflect": "0",
  "net.ipv4.icmp_echo_ignore_all": "0",
  "net.ipv4.icmp_echo_ignore_broadcasts": "1",
  "net.ipv4.icmp_errors_use_inbound_ifaddr": "0",
  "net.ipv4.icmp_ignore_bogus_error_responses": "1",
  "net.ipv4.icmp_msgs_burst": "50",
  "net.ipv4.icmp_msgs_per_sec": "1000",
  "net.ipv4.icmp_ratelimit": "1000",
  "net.ipv4.icmp_ratemask": "6168",
  "net.ipv4.igmp_link_local_mcast_reports": "1",
  "net.ipv4.igmp_max_memberships": "20",
  "net.ipv4.igmp_max_msf": "10",
  "net.ipv4.igmp_qrv": "2",
  "net.ipv4.inet_peer_maxttl": "600",
  "net.ipv4.inet_peer_minttl": "120",
  "net.ipv4.inet_peer_threshold": "65664",
  "net.ipv4.ip_default_ttl": "64",
  "net.ipv4.ip_dynaddr": "0",
  "net.ipv4.ip_early_demux": "1",
  "net.ipv4.ip_forward": "1",
  "net.ipv4.ip_forward_update_priority": "1",
  "net.ipv4.ip_forward_use_pmtu": "0",
  "net.ipv4.ip_local_port_range": "32768\t60999",
  "net.ipv4.ip_local_reserved_ports": "",
  "net.ipv4.ip_no_pmtu_disc": "0",
  "net.ipv4.ip_nonlocal_bind": "0",
  "net.ipv4.ip_unprivileged_port_start": "1024",
  "net.ipv4.ipfrag_high_thresh": "4194304",
  "net.ipv4.ipfrag_low_thresh": "3145728",
  "net.ipv4.ipfrag_max_dist": "64",
  "net.ipv4.ipfrag_secret_interval": "0",
  "net.ipv4.ipfrag_time": "30",
  "net.ipv4.neigh.default.anycast_delay": "100",
  "net.ipv4.neigh.default.app_solicit": "0",
  "net.ipv4.neigh.default.base_reachable_time": "30",
  "net.ipv4.neigh.default.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.default.delay_first_probe_time": "5",
  "net.ipv4.neigh.default.gc_interval": "30",
  "net.ipv4.neigh.default.gc_stale_time": "60",
  "net.ipv4.neigh.default.gc_thresh1": "128",
  "net.ipv4.neigh.default.gc_thresh2": "512",
  "net.ipv4.neigh.default.gc_thresh3": "1024",
  "net.ipv4.neigh.default.locktime": "100",
  "net.ipv4.neigh.default.mcast_resolicit": "0",
  "net.ipv4.neigh.default.mcast_solicit": "3",
  "net.ipv4.neigh.default.proxy_delay": "80",
  "net.ipv4.neigh.default.proxy_qlen": "64",
  "net.ipv4.neigh.default.retrans_time": "100",
  "net.ipv4.neigh.default.retrans_time_ms": "1000",
  "net.ipv4.neigh.default.ucast_solicit": "3",
  "net.ipv4.neigh.default.unres_qlen": "101",
  "net.ipv4.neigh.default.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.docker0.anycast_delay": "100",
  "net.ipv4.neigh.docker0.app_solicit": "0",
  "net.ipv4.neigh.docker0.base_reachable_time": "30",
  "net.ipv4.neigh.docker0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.docker0.delay_first_probe_time": "5",
  "net.ipv4.neigh.docker0.gc_stale_time": "60",
  "net.ipv4.neigh.docker0.locktime": "100",
  "net.ipv4.neigh.docker0.mcast_resolicit": "0",
  "net.ipv4.neigh.docker0.mcast_solicit": "3",
  "net.ipv4.neigh.docker0.proxy_delay": "80",
  "net.ipv4.neigh.docker0.proxy_qlen": "64",
  "net.ipv4.neigh.docker0.retrans_time": "100",
  "net.ipv4.neigh.docker0.retrans_time_ms": "1000",
  "net.ipv4.neigh.docker0.ucast_solicit": "3",
  "net.ipv4.neigh.docker0.unres_qlen": "101",
  "net.ipv4.neigh.docker0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.eth0.anycast_delay": "100",
  "net.ipv4.neigh.eth0.app_solicit": "0",
  "net.ipv4.neigh.eth0.base_reachable_time": "30",
  "net.ipv4.neigh.eth0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.eth0.delay_first_probe_time": "5",
  "net.ipv4.neigh.eth0.gc_stale_time": "60",
  "net.ipv4.neigh.eth0.locktime": "100",
  "net.ipv4.neigh.eth0.mcast_resolicit": "0",
  "net.ipv4.neigh.eth0.mcast_solicit": "3",
  "net.ipv4.neigh.eth0.proxy_delay": "80",
  "net.ipv4.neigh.eth0.proxy_qlen": "64",
  "net.ipv4.neigh.eth0.retrans_time": "100",
  "net.ipv4.neigh.eth0.retrans_time_ms": "1000",
  "net.ipv4.neigh.eth0.ucast_solicit": "3",
  "net.ipv4.neigh.eth0.unres_qlen": "101",
  "net.ipv4.neigh.eth0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.lo.anycast_delay": "100",
  "net.ipv4.neigh.lo.app_solicit": "0",
  "net.ipv4.neigh.lo.base_reachable_time": "30",
  "net.ipv4.neigh.lo.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.lo.delay_first_probe_time": "5",
  "net.ipv4.neigh.lo.gc_stale_time": "60",
  "net.ipv4.neigh.lo.locktime": "100",
  "net.ipv4.neigh.lo.mcast_resolicit": "0",
  "net.ipv4.neigh.lo.mcast_solicit": "3",
  "net.ipv4.neigh.lo.proxy_delay": "80",
  "net.ipv4.neigh.lo.proxy_qlen": "64",
  "net.ipv4.neigh.lo.retrans_time": "100",
  "net.ipv4.neigh.lo.retrans_time_ms": "1000",
  "net.ipv4.neigh.lo.ucast_solicit": "3",
  "net.ipv4.neigh.lo.unres_qlen": "101",
  "net.ipv4.neigh.lo.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.tun0.anycast_delay": "100",
  "net.ipv4.neigh.tun0.app_solicit": "0",
  "net.ipv4.neigh.tun0.base_reachable_time": "30",
  "net.ipv4.neigh.tun0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.tun0.delay_first_probe_time": "5",
  "net.ipv4.neigh.tun0.gc_stale_time": "60",
  "net.ipv4.neigh.tun0.locktime": "100",
  "net.ipv4.neigh.tun0.mcast_resolicit": "0",
  "net.ipv4.neigh.tun0.mcast_solicit": "3",
  "net.ipv4.neigh.tun0.proxy_delay": "80",
  "net.ipv4.neigh.tun0.proxy_qlen": "64",
  "net.ipv4.neigh.tun0.retrans_time": "100",
  "net.ipv4.neigh.tun0.retrans_time_ms": "1000",
  "net.ipv4.neigh.tun0.ucast_solicit": "3",
  "net.ipv4.neigh.tun0.unres_qlen": "101",
  "net.ipv4.neigh.tun0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet0.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet0.app_solicit": "0",
  "net.ipv4.neigh.vboxnet0.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet0.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet0.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet0.locktime": "100",
  "net.ipv4.neigh.vboxnet0.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet0.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet0.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet0.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet0.retrans_time": "100",
  "net.ipv4.neigh.vboxnet0.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet0.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet0.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet1.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet1.app_solicit": "0",
  "net.ipv4.neigh.vboxnet1.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet1.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet1.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet1.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet1.locktime": "100",
  "net.ipv4.neigh.vboxnet1.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet1.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet1.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet1.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet1.retrans_time": "100",
  "net.ipv4.neigh.vboxnet1.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet1.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet1.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet1.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet10.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet10.app_solicit": "0",
  "net.ipv4.neigh.vboxnet10.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet10.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet10.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet10.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet10.locktime": "100",
  "net.ipv4.neigh.vboxnet10.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet10.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet10.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet10.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet10.retrans_time": "100",
  "net.ipv4.neigh.vboxnet10.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet10.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet10.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet10.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet11.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet11.app_solicit": "0",
  "net.ipv4.neigh.vboxnet11.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet11.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet11.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet11.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet11.locktime": "100",
  "net.ipv4.neigh.vboxnet11.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet11.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet11.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet11.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet11.retrans_time": "100",
  "net.ipv4.neigh.vboxnet11.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet11.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet11.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet11.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet12.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet12.app_solicit": "0",
  "net.ipv4.neigh.vboxnet12.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet12.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet12.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet12.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet12.locktime": "100",
  "net.ipv4.neigh.vboxnet12.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet12.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet12.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet12.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet12.retrans_time": "100",
  "net.ipv4.neigh.vboxnet12.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet12.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet12.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet12.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet13.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet13.app_solicit": "0",
  "net.ipv4.neigh.vboxnet13.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet13.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet13.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet13.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet13.locktime": "100",
  "net.ipv4.neigh.vboxnet13.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet13.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet13.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet13.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet13.retrans_time": "100",
  "net.ipv4.neigh.vboxnet13.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet13.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet13.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet13.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet2.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet2.app_solicit": "0",
  "net.ipv4.neigh.vboxnet2.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet2.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet2.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet2.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet2.locktime": "100",
  "net.ipv4.neigh.vboxnet2.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet2.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet2.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet2.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet2.retrans_time": "100",
  "net.ipv4.neigh.vboxnet2.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet2.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet2.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet2.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet3.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet3.app_solicit": "0",
  "net.ipv4.neigh.vboxnet3.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet3.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet3.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet3.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet3.locktime": "100",
  "net.ipv4.neigh.vboxnet3.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet3.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet3.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet3.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet3.retrans_time": "100",
  "net.ipv4.neigh.vboxnet3.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet3.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet3.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet3.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet4.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet4.app_solicit": "0",
  "net.ipv4.neigh.vboxnet4.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet4.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet4.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet4.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet4.locktime": "100",
  "net.ipv4.neigh.vboxnet4.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet4.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet4.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet4.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet4.retrans_time": "100",
  "net.ipv4.neigh.vboxnet4.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet4.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet4.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet4.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet5.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet5.app_solicit": "0",
  "net.ipv4.neigh.vboxnet5.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet5.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet5.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet5.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet5.locktime": "100",
  "net.ipv4.neigh.vboxnet5.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet5.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet5.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet5.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet5.retrans_time": "100",
  "net.ipv4.neigh.vboxnet5.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet5.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet5.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet5.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet6.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet6.app_solicit": "0",
  "net.ipv4.neigh.vboxnet6.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet6.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet6.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet6.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet6.locktime": "100",
  "net.ipv4.neigh.vboxnet6.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet6.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet6.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet6.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet6.retrans_time": "100",
  "net.ipv4.neigh.vboxnet6.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet6.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet6.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet6.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet7.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet7.app_solicit": "0",
  "net.ipv4.neigh.vboxnet7.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet7.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet7.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet7.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet7.locktime": "100",
  "net.ipv4.neigh.vboxnet7.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet7.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet7.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet7.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet7.retrans_time": "100",
  "net.ipv4.neigh.vboxnet7.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet7.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet7.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet7.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet8.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet8.app_solicit": "0",
  "net.ipv4.neigh.vboxnet8.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet8.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet8.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet8.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet8.locktime": "100",
  "net.ipv4.neigh.vboxnet8.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet8.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet8.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet8.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet8.retrans_time": "100",
  "net.ipv4.neigh.vboxnet8.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet8.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet8.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet8.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.vboxnet9.anycast_delay": "100",
  "net.ipv4.neigh.vboxnet9.app_solicit": "0",
  "net.ipv4.neigh.vboxnet9.base_reachable_time": "30",
  "net.ipv4.neigh.vboxnet9.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.vboxnet9.delay_first_probe_time": "5",
  "net.ipv4.neigh.vboxnet9.gc_stale_time": "60",
  "net.ipv4.neigh.vboxnet9.locktime": "100",
  "net.ipv4.neigh.vboxnet9.mcast_resolicit": "0",
  "net.ipv4.neigh.vboxnet9.mcast_solicit": "3",
  "net.ipv4.neigh.vboxnet9.proxy_delay": "80",
  "net.ipv4.neigh.vboxnet9.proxy_qlen": "64",
  "net.ipv4.neigh.vboxnet9.retrans_time": "100",
  "net.ipv4.neigh.vboxnet9.retrans_time_ms": "1000",
  "net.ipv4.neigh.vboxnet9.ucast_solicit": "3",
  "net.ipv4.neigh.vboxnet9.unres_qlen": "101",
  "net.ipv4.neigh.vboxnet9.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.virbr0-nic.anycast_delay": "100",
  "net.ipv4.neigh.virbr0-nic.app_solicit": "0",
  "net.ipv4.neigh.virbr0-nic.base_reachable_time": "30",
  "net.ipv4.neigh.virbr0-nic.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.virbr0-nic.delay_first_probe_time": "5",
  "net.ipv4.neigh.virbr0-nic.gc_stale_time": "60",
  "net.ipv4.neigh.virbr0-nic.locktime": "100",
  "net.ipv4.neigh.virbr0-nic.mcast_resolicit": "0",
  "net.ipv4.neigh.virbr0-nic.mcast_solicit": "3",
  "net.ipv4.neigh.virbr0-nic.proxy_delay": "80",
  "net.ipv4.neigh.virbr0-nic.proxy_qlen": "64",
  "net.ipv4.neigh.virbr0-nic.retrans_time": "100",
  "net.ipv4.neigh.virbr0-nic.retrans_time_ms": "1000",
  "net.ipv4.neigh.virbr0-nic.ucast_solicit": "3",
  "net.ipv4.neigh.virbr0-nic.unres_qlen": "101",
  "net.ipv4.neigh.virbr0-nic.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.virbr0.anycast_delay": "100",
  "net.ipv4.neigh.virbr0.app_solicit": "0",
  "net.ipv4.neigh.virbr0.base_reachable_time": "30",
  "net.ipv4.neigh.virbr0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.virbr0.delay_first_probe_time": "5",
  "net.ipv4.neigh.virbr0.gc_stale_time": "60",
  "net.ipv4.neigh.virbr0.locktime": "100",
  "net.ipv4.neigh.virbr0.mcast_resolicit": "0",
  "net.ipv4.neigh.virbr0.mcast_solicit": "3",
  "net.ipv4.neigh.virbr0.proxy_delay": "80",
  "net.ipv4.neigh.virbr0.proxy_qlen": "64",
  "net.ipv4.neigh.virbr0.retrans_time": "100",
  "net.ipv4.neigh.virbr0.retrans_time_ms": "1000",
  "net.ipv4.neigh.virbr0.ucast_solicit": "3",
  "net.ipv4.neigh.virbr0.unres_qlen": "101",
  "net.ipv4.neigh.virbr0.unres_qlen_bytes": "212992",
  "net.ipv4.neigh.wlan0.anycast_delay": "100",
  "net.ipv4.neigh.wlan0.app_solicit": "0",
  "net.ipv4.neigh.wlan0.base_reachable_time": "30",
  "net.ipv4.neigh.wlan0.base_reachable_time_ms": "30000",
  "net.ipv4.neigh.wlan0.delay_first_probe_time": "5",
  "net.ipv4.neigh.wlan0.gc_stale_time": "60",
  "net.ipv4.neigh.wlan0.locktime": "100",
  "net.ipv4.neigh.wlan0.mcast_resolicit": "0",
  "net.ipv4.neigh.wlan0.mcast_solicit": "3",
  "net.ipv4.neigh.wlan0.proxy_delay": "80",
  "net.ipv4.neigh.wlan0.proxy_qlen": "64",
  "net.ipv4.neigh.wlan0.retrans_time": "100",
  "net.ipv4.neigh.wlan0.retrans_time_ms": "1000",
  "net.ipv4.neigh.wlan0.ucast_solicit": "3",
  "net.ipv4.neigh.wlan0.unres_qlen": "101",
  "net.ipv4.neigh.wlan0.unres_qlen_bytes": "212992",
  "net.ipv4.ping_group_range": "0\t2147483647",
  "net.ipv4.raw_l3mdev_accept": "1",
  "net.ipv4.route.error_burst": "5000",
  "net.ipv4.route.error_cost": "1000",
  "net.ipv4.route.gc_elasticity": "8",
  "net.ipv4.route.gc_interval": "60",
  "net.ipv4.route.gc_min_interval": "0",
  "net.ipv4.route.gc_min_interval_ms": "500",
  "net.ipv4.route.gc_thresh": "-1",
  "net.ipv4.route.gc_timeout": "300",
  "net.ipv4.route.max_size": "2147483647",
  "net.ipv4.route.min_adv_mss": "256",
  "net.ipv4.route.min_pmtu": "552",
  "net.ipv4.route.mtu_expires": "600",
  "net.ipv4.route.redirect_load": "20",
  "net.ipv4.route.redirect_number": "9",
  "net.ipv4.route.redirect_silence": "20480",
  "net.ipv4.tcp_abort_on_overflow": "0",
  "net.ipv4.tcp_adv_win_scale": "1",
  "net.ipv4.tcp_allowed_congestion_control": "reno cubic",
  "net.ipv4.tcp_app_win": "31",
  "net.ipv4.tcp_autocorking": "1",
  "net.ipv4.tcp_available_congestion_control": "reno cubic",
  "net.ipv4.tcp_available_ulp": "",
  "net.ipv4.tcp_base_mss": "1024",
  "net.ipv4.tcp_challenge_ack_limit": "1000",
  "net.ipv4.tcp_comp_sack_delay_ns": "1000000",
  "net.ipv4.tcp_comp_sack_nr": "44",
  "net.ipv4.tcp_congestion_control": "cubic",
  "net.ipv4.tcp_dsack": "1",
  "net.ipv4.tcp_early_demux": "1",
  "net.ipv4.tcp_early_retrans": "3",
  "net.ipv4.tcp_ecn": "2",
  "net.ipv4.tcp_ecn_fallback": "1",
  "net.ipv4.tcp_fack": "0",
  "net.ipv4.tcp_fastopen": "1",
  "net.ipv4.tcp_fastopen_blackhole_timeout_sec": "3600",
  "net.ipv4.tcp_fin_timeout": "60",
  "net.ipv4.tcp_frto": "2",
  "net.ipv4.tcp_fwmark_accept": "0",
  "net.ipv4.tcp_invalid_ratelimit": "500",
  "net.ipv4.tcp_keepalive_intvl": "75",
  "net.ipv4.tcp_keepalive_probes": "9",
  "net.ipv4.tcp_keepalive_time": "7200",
  "net.ipv4.tcp_l3mdev_accept": "0",
  "net.ipv4.tcp_limit_output_bytes": "1048576",
  "net.ipv4.tcp_low_latency": "0",
  "net.ipv4.tcp_max_orphans": "131072",
  "net.ipv4.tcp_max_reordering": "300",
  "net.ipv4.tcp_max_syn_backlog": "2048",
  "net.ipv4.tcp_max_tw_buckets": "131072",
  "net.ipv4.tcp_mem": "381744\t508994\t763488",
  "net.ipv4.tcp_min_rtt_wlen": "300",
  "net.ipv4.tcp_min_snd_mss": "48",
  "net.ipv4.tcp_min_tso_segs": "2",
  "net.ipv4.tcp_moderate_rcvbuf": "1",
  "net.ipv4.tcp_mtu_probe_floor": "48",
  "net.ipv4.tcp_mtu_probing": "0",
  "net.ipv4.tcp_no_metrics_save": "0",
  "net.ipv4.tcp_notsent_lowat": "4294967295",
  "net.ipv4.tcp_orphan_retries": "0",
  "net.ipv4.tcp_pacing_ca_ratio": "120",
  "net.ipv4.tcp_pacing_ss_ratio": "200",
  "net.ipv4.tcp_probe_interval": "600",
  "net.ipv4.tcp_probe_threshold": "8",
  "net.ipv4.tcp_recovery": "1",
  "net.ipv4.tcp_reordering": "3",
  "net.ipv4.tcp_retrans_collapse": "1",
  "net.ipv4.tcp_retries1": "3",
  "net.ipv4.tcp_retries2": "15",
  "net.ipv4.tcp_rfc1337": "0",
  "net.ipv4.tcp_rmem": "4096\t131072\t6291456",
  "net.ipv4.tcp_rx_skb_cache": "0",
  "net.ipv4.tcp_sack": "1",
  "net.ipv4.tcp_slow_start_after_idle": "1",
  "net.ipv4.tcp_stdurg": "0",
  "net.ipv4.tcp_syn_retries": "6",
  "net.ipv4.tcp_synack_retries": "5",
  "net.ipv4.tcp_syncookies": "1",
  "net.ipv4.tcp_thin_linear_timeouts": "0",
  "net.ipv4.tcp_timestamps": "1",
  "net.ipv4.tcp_tso_win_divisor": "3",
  "net.ipv4.tcp_tw_reuse": "2",
  "net.ipv4.tcp_tx_skb_cache": "0",
  "net.ipv4.tcp_window_scaling": "1",
  "net.ipv4.tcp_wmem": "4096\t16384\t4194304",
  "net.ipv4.tcp_workaround_signed_windows": "0",
  "net.ipv4.udp_early_demux": "1",
  "net.ipv4.udp_l3mdev_accept": "0",
  "net.ipv4.udp_mem": "763491\t1017988\t1526982",
  "net.ipv4.udp_rmem_min": "4096",
  "net.ipv4.udp_wmem_min": "4096",
  "net.ipv4.xfrm4_gc_thresh": "32768",
  "net.ipv6.anycast_src_echo_reply": "0",
  "net.ipv6.auto_flowlabels": "1",
  "net.ipv6.bindv6only": "0",
  "net.ipv6.calipso_cache_bucket_size": "10",
  "net.ipv6.calipso_cache_enable": "1",
  "net.ipv6.conf.all.accept_dad": "0",
  "net.ipv6.conf.all.accept_ra": "1",
  "net.ipv6.conf.all.accept_ra_defrtr": "1",
  "net.ipv6.conf.all.accept_ra_from_local": "0",
  "net.ipv6.conf.all.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.all.accept_ra_mtu": "1",
  "net.ipv6.conf.all.accept_ra_pinfo": "1",
  "net.ipv6.conf.all.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.all.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.all.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.all.accept_redirects": "1",
  "net.ipv6.conf.all.accept_source_route": "0",
  "net.ipv6.conf.all.addr_gen_mode": "0",
  "net.ipv6.conf.all.autoconf": "1",
  "net.ipv6.conf.all.dad_transmits": "1",
  "net.ipv6.conf.all.disable_ipv6": "0",
  "net.ipv6.conf.all.disable_policy": "0",
  "net.ipv6.conf.all.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.all.drop_unsolicited_na": "0",
  "net.ipv6.conf.all.enhanced_dad": "1",
  "net.ipv6.conf.all.force_mld_version": "0",
  "net.ipv6.conf.all.force_tllao": "0",
  "net.ipv6.conf.all.forwarding": "0",
  "net.ipv6.conf.all.hop_limit": "64",
  "net.ipv6.conf.all.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.all.keep_addr_on_down": "0",
  "net.ipv6.conf.all.max_addresses": "16",
  "net.ipv6.conf.all.max_desync_factor": "600",
  "net.ipv6.conf.all.mc_forwarding": "0",
  "net.ipv6.conf.all.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.all.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.all.mtu": "1280",
  "net.ipv6.conf.all.ndisc_notify": "0",
  "net.ipv6.conf.all.ndisc_tclass": "0",
  "net.ipv6.conf.all.proxy_ndp": "0",
  "net.ipv6.conf.all.regen_max_retry": "3",
  "net.ipv6.conf.all.router_probe_interval": "60",
  "net.ipv6.conf.all.router_solicitation_delay": "1",
  "net.ipv6.conf.all.router_solicitation_interval": "4",
  "net.ipv6.conf.all.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.all.router_solicitations": "-1",
  "net.ipv6.conf.all.seg6_enabled": "0",
  "net.ipv6.conf.all.seg6_require_hmac": "0",
  "net.ipv6.conf.all.suppress_frag_ndisc": "1",
  "net.ipv6.conf.all.temp_prefered_lft": "86400",
  "net.ipv6.conf.all.temp_valid_lft": "604800",
  "net.ipv6.conf.all.use_oif_addrs_only": "0",
  "net.ipv6.conf.all.use_tempaddr": "2",
  "net.ipv6.conf.default.accept_dad": "1",
  "net.ipv6.conf.default.accept_ra": "1",
  "net.ipv6.conf.default.accept_ra_defrtr": "1",
  "net.ipv6.conf.default.accept_ra_from_local": "0",
  "net.ipv6.conf.default.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.default.accept_ra_mtu": "1",
  "net.ipv6.conf.default.accept_ra_pinfo": "1",
  "net.ipv6.conf.default.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.default.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.default.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.default.accept_redirects": "1",
  "net.ipv6.conf.default.accept_source_route": "0",
  "net.ipv6.conf.default.addr_gen_mode": "0",
  "net.ipv6.conf.default.autoconf": "1",
  "net.ipv6.conf.default.dad_transmits": "1",
  "net.ipv6.conf.default.disable_ipv6": "0",
  "net.ipv6.conf.default.disable_policy": "0",
  "net.ipv6.conf.default.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.default.drop_unsolicited_na": "0",
  "net.ipv6.conf.default.enhanced_dad": "1",
  "net.ipv6.conf.default.force_mld_version": "0",
  "net.ipv6.conf.default.force_tllao": "0",
  "net.ipv6.conf.default.forwarding": "0",
  "net.ipv6.conf.default.hop_limit": "64",
  "net.ipv6.conf.default.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.default.keep_addr_on_down": "0",
  "net.ipv6.conf.default.max_addresses": "16",
  "net.ipv6.conf.default.max_desync_factor": "600",
  "net.ipv6.conf.default.mc_forwarding": "0",
  "net.ipv6.conf.default.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.default.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.default.mtu": "1280",
  "net.ipv6.conf.default.ndisc_notify": "0",
  "net.ipv6.conf.default.ndisc_tclass": "0",
  "net.ipv6.conf.default.proxy_ndp": "0",
  "net.ipv6.conf.default.regen_max_retry": "3",
  "net.ipv6.conf.default.router_probe_interval": "60",
  "net.ipv6.conf.default.router_solicitation_delay": "1",
  "net.ipv6.conf.default.router_solicitation_interval": "4",
  "net.ipv6.conf.default.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.default.router_solicitations": "-1",
  "net.ipv6.conf.default.seg6_enabled": "0",
  "net.ipv6.conf.default.seg6_require_hmac": "0",
  "net.ipv6.conf.default.suppress_frag_ndisc": "1",
  "net.ipv6.conf.default.temp_prefered_lft": "86400",
  "net.ipv6.conf.default.temp_valid_lft": "604800",
  "net.ipv6.conf.default.use_oif_addrs_only": "0",
  "net.ipv6.conf.default.use_tempaddr": "2",
  "net.ipv6.conf.docker0.accept_dad": "1",
  "net.ipv6.conf.docker0.accept_ra": "1",
  "net.ipv6.conf.docker0.accept_ra_defrtr": "1",
  "net.ipv6.conf.docker0.accept_ra_from_local": "0",
  "net.ipv6.conf.docker0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.docker0.accept_ra_mtu": "1",
  "net.ipv6.conf.docker0.accept_ra_pinfo": "1",
  "net.ipv6.conf.docker0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.docker0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.docker0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.docker0.accept_redirects": "1",
  "net.ipv6.conf.docker0.accept_source_route": "0",
  "net.ipv6.conf.docker0.addr_gen_mode": "0",
  "net.ipv6.conf.docker0.autoconf": "1",
  "net.ipv6.conf.docker0.dad_transmits": "1",
  "net.ipv6.conf.docker0.disable_ipv6": "0",
  "net.ipv6.conf.docker0.disable_policy": "0",
  "net.ipv6.conf.docker0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.docker0.drop_unsolicited_na": "0",
  "net.ipv6.conf.docker0.enhanced_dad": "1",
  "net.ipv6.conf.docker0.force_mld_version": "0",
  "net.ipv6.conf.docker0.force_tllao": "0",
  "net.ipv6.conf.docker0.forwarding": "0",
  "net.ipv6.conf.docker0.hop_limit": "64",
  "net.ipv6.conf.docker0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.docker0.keep_addr_on_down": "0",
  "net.ipv6.conf.docker0.max_addresses": "16",
  "net.ipv6.conf.docker0.max_desync_factor": "600",
  "net.ipv6.conf.docker0.mc_forwarding": "0",
  "net.ipv6.conf.docker0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.docker0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.docker0.mtu": "1500",
  "net.ipv6.conf.docker0.ndisc_notify": "0",
  "net.ipv6.conf.docker0.ndisc_tclass": "0",
  "net.ipv6.conf.docker0.proxy_ndp": "0",
  "net.ipv6.conf.docker0.regen_max_retry": "3",
  "net.ipv6.conf.docker0.router_probe_interval": "60",
  "net.ipv6.conf.docker0.router_solicitation_delay": "1",
  "net.ipv6.conf.docker0.router_solicitation_interval": "4",
  "net.ipv6.conf.docker0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.docker0.router_solicitations": "-1",
  "net.ipv6.conf.docker0.seg6_enabled": "0",
  "net.ipv6.conf.docker0.seg6_require_hmac": "0",
  "net.ipv6.conf.docker0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.docker0.temp_prefered_lft": "86400",
  "net.ipv6.conf.docker0.temp_valid_lft": "604800",
  "net.ipv6.conf.docker0.use_oif_addrs_only": "0",
  "net.ipv6.conf.docker0.use_tempaddr": "2",
  "net.ipv6.conf.eth0.accept_dad": "1",
  "net.ipv6.conf.eth0.accept_ra": "0",
  "net.ipv6.conf.eth0.accept_ra_defrtr": "1",
  "net.ipv6.conf.eth0.accept_ra_from_local": "0",
  "net.ipv6.conf.eth0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.eth0.accept_ra_mtu": "1",
  "net.ipv6.conf.eth0.accept_ra_pinfo": "1",
  "net.ipv6.conf.eth0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.eth0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.eth0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.eth0.accept_redirects": "1",
  "net.ipv6.conf.eth0.accept_source_route": "0",
  "net.ipv6.conf.eth0.addr_gen_mode": "1",
  "net.ipv6.conf.eth0.autoconf": "1",
  "net.ipv6.conf.eth0.dad_transmits": "1",
  "net.ipv6.conf.eth0.disable_ipv6": "0",
  "net.ipv6.conf.eth0.disable_policy": "0",
  "net.ipv6.conf.eth0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.eth0.drop_unsolicited_na": "0",
  "net.ipv6.conf.eth0.enhanced_dad": "1",
  "net.ipv6.conf.eth0.force_mld_version": "0",
  "net.ipv6.conf.eth0.force_tllao": "0",
  "net.ipv6.conf.eth0.forwarding": "0",
  "net.ipv6.conf.eth0.hop_limit": "64",
  "net.ipv6.conf.eth0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.eth0.keep_addr_on_down": "0",
  "net.ipv6.conf.eth0.max_addresses": "16",
  "net.ipv6.conf.eth0.max_desync_factor": "600",
  "net.ipv6.conf.eth0.mc_forwarding": "0",
  "net.ipv6.conf.eth0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.eth0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.eth0.mtu": "1500",
  "net.ipv6.conf.eth0.ndisc_notify": "0",
  "net.ipv6.conf.eth0.ndisc_tclass": "0",
  "net.ipv6.conf.eth0.proxy_ndp": "0",
  "net.ipv6.conf.eth0.regen_max_retry": "3",
  "net.ipv6.conf.eth0.router_probe_interval": "60",
  "net.ipv6.conf.eth0.router_solicitation_delay": "1",
  "net.ipv6.conf.eth0.router_solicitation_interval": "4",
  "net.ipv6.conf.eth0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.eth0.router_solicitations": "-1",
  "net.ipv6.conf.eth0.seg6_enabled": "0",
  "net.ipv6.conf.eth0.seg6_require_hmac": "0",
  "net.ipv6.conf.eth0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.eth0.temp_prefered_lft": "86400",
  "net.ipv6.conf.eth0.temp_valid_lft": "604800",
  "net.ipv6.conf.eth0.use_oif_addrs_only": "0",
  "net.ipv6.conf.eth0.use_tempaddr": "0",
  "net.ipv6.conf.lo.accept_dad": "-1",
  "net.ipv6.conf.lo.accept_ra": "1",
  "net.ipv6.conf.lo.accept_ra_defrtr": "1",
  "net.ipv6.conf.lo.accept_ra_from_local": "0",
  "net.ipv6.conf.lo.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.lo.accept_ra_mtu": "1",
  "net.ipv6.conf.lo.accept_ra_pinfo": "1",
  "net.ipv6.conf.lo.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.lo.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.lo.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.lo.accept_redirects": "1",
  "net.ipv6.conf.lo.accept_source_route": "0",
  "net.ipv6.conf.lo.addr_gen_mode": "0",
  "net.ipv6.conf.lo.autoconf": "1",
  "net.ipv6.conf.lo.dad_transmits": "1",
  "net.ipv6.conf.lo.disable_ipv6": "0",
  "net.ipv6.conf.lo.disable_policy": "0",
  "net.ipv6.conf.lo.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.lo.drop_unsolicited_na": "0",
  "net.ipv6.conf.lo.enhanced_dad": "1",
  "net.ipv6.conf.lo.force_mld_version": "0",
  "net.ipv6.conf.lo.force_tllao": "0",
  "net.ipv6.conf.lo.forwarding": "0",
  "net.ipv6.conf.lo.hop_limit": "64",
  "net.ipv6.conf.lo.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.lo.keep_addr_on_down": "0",
  "net.ipv6.conf.lo.max_addresses": "16",
  "net.ipv6.conf.lo.max_desync_factor": "600",
  "net.ipv6.conf.lo.mc_forwarding": "0",
  "net.ipv6.conf.lo.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.lo.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.lo.mtu": "65536",
  "net.ipv6.conf.lo.ndisc_notify": "0",
  "net.ipv6.conf.lo.ndisc_tclass": "0",
  "net.ipv6.conf.lo.proxy_ndp": "0",
  "net.ipv6.conf.lo.regen_max_retry": "3",
  "net.ipv6.conf.lo.router_probe_interval": "60",
  "net.ipv6.conf.lo.router_solicitation_delay": "1",
  "net.ipv6.conf.lo.router_solicitation_interval": "4",
  "net.ipv6.conf.lo.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.lo.router_solicitations": "-1",
  "net.ipv6.conf.lo.seg6_enabled": "0",
  "net.ipv6.conf.lo.seg6_require_hmac": "0",
  "net.ipv6.conf.lo.suppress_frag_ndisc": "1",
  "net.ipv6.conf.lo.temp_prefered_lft": "86400",
  "net.ipv6.conf.lo.temp_valid_lft": "604800",
  "net.ipv6.conf.lo.use_oif_addrs_only": "0",
  "net.ipv6.conf.lo.use_tempaddr": "-1",
  "net.ipv6.conf.tun0.accept_dad": "-1",
  "net.ipv6.conf.tun0.accept_ra": "1",
  "net.ipv6.conf.tun0.accept_ra_defrtr": "1",
  "net.ipv6.conf.tun0.accept_ra_from_local": "0",
  "net.ipv6.conf.tun0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.tun0.accept_ra_mtu": "1",
  "net.ipv6.conf.tun0.accept_ra_pinfo": "1",
  "net.ipv6.conf.tun0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.tun0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.tun0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.tun0.accept_redirects": "1",
  "net.ipv6.conf.tun0.accept_source_route": "0",
  "net.ipv6.conf.tun0.addr_gen_mode": "3",
  "net.ipv6.conf.tun0.autoconf": "1",
  "net.ipv6.conf.tun0.dad_transmits": "1",
  "net.ipv6.conf.tun0.disable_ipv6": "0",
  "net.ipv6.conf.tun0.disable_policy": "0",
  "net.ipv6.conf.tun0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.tun0.drop_unsolicited_na": "0",
  "net.ipv6.conf.tun0.enhanced_dad": "1",
  "net.ipv6.conf.tun0.force_mld_version": "0",
  "net.ipv6.conf.tun0.force_tllao": "0",
  "net.ipv6.conf.tun0.forwarding": "0",
  "net.ipv6.conf.tun0.hop_limit": "64",
  "net.ipv6.conf.tun0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.tun0.keep_addr_on_down": "0",
  "net.ipv6.conf.tun0.max_addresses": "16",
  "net.ipv6.conf.tun0.max_desync_factor": "600",
  "net.ipv6.conf.tun0.mc_forwarding": "0",
  "net.ipv6.conf.tun0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.tun0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.tun0.mtu": "1500",
  "net.ipv6.conf.tun0.ndisc_notify": "0",
  "net.ipv6.conf.tun0.ndisc_tclass": "0",
  "net.ipv6.conf.tun0.proxy_ndp": "0",
  "net.ipv6.conf.tun0.regen_max_retry": "3",
  "net.ipv6.conf.tun0.router_probe_interval": "60",
  "net.ipv6.conf.tun0.router_solicitation_delay": "1",
  "net.ipv6.conf.tun0.router_solicitation_interval": "4",
  "net.ipv6.conf.tun0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.tun0.router_solicitations": "-1",
  "net.ipv6.conf.tun0.seg6_enabled": "0",
  "net.ipv6.conf.tun0.seg6_require_hmac": "0",
  "net.ipv6.conf.tun0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.tun0.temp_prefered_lft": "86400",
  "net.ipv6.conf.tun0.temp_valid_lft": "604800",
  "net.ipv6.conf.tun0.use_oif_addrs_only": "0",
  "net.ipv6.conf.tun0.use_tempaddr": "-1",
  "net.ipv6.conf.vboxnet0.accept_dad": "1",
  "net.ipv6.conf.vboxnet0.accept_ra": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet0.accept_redirects": "1",
  "net.ipv6.conf.vboxnet0.accept_source_route": "0",
  "net.ipv6.conf.vboxnet0.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet0.autoconf": "1",
  "net.ipv6.conf.vboxnet0.dad_transmits": "1",
  "net.ipv6.conf.vboxnet0.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet0.disable_policy": "0",
  "net.ipv6.conf.vboxnet0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet0.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet0.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet0.force_mld_version": "0",
  "net.ipv6.conf.vboxnet0.force_tllao": "0",
  "net.ipv6.conf.vboxnet0.forwarding": "0",
  "net.ipv6.conf.vboxnet0.hop_limit": "64",
  "net.ipv6.conf.vboxnet0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet0.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet0.max_addresses": "16",
  "net.ipv6.conf.vboxnet0.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet0.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet0.mtu": "1500",
  "net.ipv6.conf.vboxnet0.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet0.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet0.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet0.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet0.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet0.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet0.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet0.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet0.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet0.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet0.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet0.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet0.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet0.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet1.accept_dad": "1",
  "net.ipv6.conf.vboxnet1.accept_ra": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet1.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet1.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet1.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet1.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet1.accept_redirects": "1",
  "net.ipv6.conf.vboxnet1.accept_source_route": "0",
  "net.ipv6.conf.vboxnet1.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet1.autoconf": "1",
  "net.ipv6.conf.vboxnet1.dad_transmits": "1",
  "net.ipv6.conf.vboxnet1.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet1.disable_policy": "0",
  "net.ipv6.conf.vboxnet1.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet1.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet1.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet1.force_mld_version": "0",
  "net.ipv6.conf.vboxnet1.force_tllao": "0",
  "net.ipv6.conf.vboxnet1.forwarding": "0",
  "net.ipv6.conf.vboxnet1.hop_limit": "64",
  "net.ipv6.conf.vboxnet1.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet1.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet1.max_addresses": "16",
  "net.ipv6.conf.vboxnet1.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet1.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet1.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet1.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet1.mtu": "1500",
  "net.ipv6.conf.vboxnet1.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet1.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet1.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet1.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet1.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet1.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet1.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet1.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet1.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet1.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet1.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet1.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet1.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet1.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet1.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet1.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet10.accept_dad": "1",
  "net.ipv6.conf.vboxnet10.accept_ra": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet10.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet10.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet10.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet10.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet10.accept_redirects": "1",
  "net.ipv6.conf.vboxnet10.accept_source_route": "0",
  "net.ipv6.conf.vboxnet10.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet10.autoconf": "1",
  "net.ipv6.conf.vboxnet10.dad_transmits": "1",
  "net.ipv6.conf.vboxnet10.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet10.disable_policy": "0",
  "net.ipv6.conf.vboxnet10.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet10.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet10.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet10.force_mld_version": "0",
  "net.ipv6.conf.vboxnet10.force_tllao": "0",
  "net.ipv6.conf.vboxnet10.forwarding": "0",
  "net.ipv6.conf.vboxnet10.hop_limit": "64",
  "net.ipv6.conf.vboxnet10.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet10.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet10.max_addresses": "16",
  "net.ipv6.conf.vboxnet10.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet10.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet10.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet10.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet10.mtu": "1500",
  "net.ipv6.conf.vboxnet10.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet10.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet10.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet10.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet10.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet10.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet10.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet10.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet10.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet10.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet10.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet10.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet10.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet10.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet10.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet10.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet11.accept_dad": "1",
  "net.ipv6.conf.vboxnet11.accept_ra": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet11.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet11.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet11.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet11.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet11.accept_redirects": "1",
  "net.ipv6.conf.vboxnet11.accept_source_route": "0",
  "net.ipv6.conf.vboxnet11.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet11.autoconf": "1",
  "net.ipv6.conf.vboxnet11.dad_transmits": "1",
  "net.ipv6.conf.vboxnet11.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet11.disable_policy": "0",
  "net.ipv6.conf.vboxnet11.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet11.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet11.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet11.force_mld_version": "0",
  "net.ipv6.conf.vboxnet11.force_tllao": "0",
  "net.ipv6.conf.vboxnet11.forwarding": "0",
  "net.ipv6.conf.vboxnet11.hop_limit": "64",
  "net.ipv6.conf.vboxnet11.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet11.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet11.max_addresses": "16",
  "net.ipv6.conf.vboxnet11.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet11.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet11.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet11.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet11.mtu": "1500",
  "net.ipv6.conf.vboxnet11.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet11.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet11.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet11.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet11.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet11.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet11.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet11.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet11.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet11.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet11.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet11.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet11.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet11.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet11.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet11.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet12.accept_dad": "1",
  "net.ipv6.conf.vboxnet12.accept_ra": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet12.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet12.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet12.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet12.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet12.accept_redirects": "1",
  "net.ipv6.conf.vboxnet12.accept_source_route": "0",
  "net.ipv6.conf.vboxnet12.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet12.autoconf": "1",
  "net.ipv6.conf.vboxnet12.dad_transmits": "1",
  "net.ipv6.conf.vboxnet12.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet12.disable_policy": "0",
  "net.ipv6.conf.vboxnet12.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet12.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet12.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet12.force_mld_version": "0",
  "net.ipv6.conf.vboxnet12.force_tllao": "0",
  "net.ipv6.conf.vboxnet12.forwarding": "0",
  "net.ipv6.conf.vboxnet12.hop_limit": "64",
  "net.ipv6.conf.vboxnet12.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet12.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet12.max_addresses": "16",
  "net.ipv6.conf.vboxnet12.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet12.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet12.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet12.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet12.mtu": "1500",
  "net.ipv6.conf.vboxnet12.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet12.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet12.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet12.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet12.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet12.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet12.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet12.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet12.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet12.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet12.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet12.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet12.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet12.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet12.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet12.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet13.accept_dad": "1",
  "net.ipv6.conf.vboxnet13.accept_ra": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet13.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet13.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet13.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet13.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet13.accept_redirects": "1",
  "net.ipv6.conf.vboxnet13.accept_source_route": "0",
  "net.ipv6.conf.vboxnet13.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet13.autoconf": "1",
  "net.ipv6.conf.vboxnet13.dad_transmits": "1",
  "net.ipv6.conf.vboxnet13.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet13.disable_policy": "0",
  "net.ipv6.conf.vboxnet13.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet13.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet13.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet13.force_mld_version": "0",
  "net.ipv6.conf.vboxnet13.force_tllao": "0",
  "net.ipv6.conf.vboxnet13.forwarding": "0",
  "net.ipv6.conf.vboxnet13.hop_limit": "64",
  "net.ipv6.conf.vboxnet13.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet13.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet13.max_addresses": "16",
  "net.ipv6.conf.vboxnet13.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet13.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet13.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet13.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet13.mtu": "1500",
  "net.ipv6.conf.vboxnet13.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet13.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet13.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet13.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet13.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet13.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet13.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet13.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet13.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet13.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet13.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet13.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet13.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet13.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet13.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet13.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet2.accept_dad": "1",
  "net.ipv6.conf.vboxnet2.accept_ra": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet2.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet2.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet2.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet2.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet2.accept_redirects": "1",
  "net.ipv6.conf.vboxnet2.accept_source_route": "0",
  "net.ipv6.conf.vboxnet2.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet2.autoconf": "1",
  "net.ipv6.conf.vboxnet2.dad_transmits": "1",
  "net.ipv6.conf.vboxnet2.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet2.disable_policy": "0",
  "net.ipv6.conf.vboxnet2.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet2.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet2.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet2.force_mld_version": "0",
  "net.ipv6.conf.vboxnet2.force_tllao": "0",
  "net.ipv6.conf.vboxnet2.forwarding": "0",
  "net.ipv6.conf.vboxnet2.hop_limit": "64",
  "net.ipv6.conf.vboxnet2.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet2.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet2.max_addresses": "16",
  "net.ipv6.conf.vboxnet2.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet2.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet2.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet2.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet2.mtu": "1500",
  "net.ipv6.conf.vboxnet2.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet2.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet2.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet2.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet2.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet2.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet2.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet2.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet2.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet2.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet2.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet2.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet2.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet2.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet2.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet2.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet3.accept_dad": "1",
  "net.ipv6.conf.vboxnet3.accept_ra": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet3.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet3.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet3.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet3.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet3.accept_redirects": "1",
  "net.ipv6.conf.vboxnet3.accept_source_route": "0",
  "net.ipv6.conf.vboxnet3.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet3.autoconf": "1",
  "net.ipv6.conf.vboxnet3.dad_transmits": "1",
  "net.ipv6.conf.vboxnet3.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet3.disable_policy": "0",
  "net.ipv6.conf.vboxnet3.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet3.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet3.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet3.force_mld_version": "0",
  "net.ipv6.conf.vboxnet3.force_tllao": "0",
  "net.ipv6.conf.vboxnet3.forwarding": "0",
  "net.ipv6.conf.vboxnet3.hop_limit": "64",
  "net.ipv6.conf.vboxnet3.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet3.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet3.max_addresses": "16",
  "net.ipv6.conf.vboxnet3.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet3.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet3.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet3.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet3.mtu": "1500",
  "net.ipv6.conf.vboxnet3.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet3.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet3.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet3.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet3.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet3.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet3.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet3.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet3.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet3.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet3.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet3.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet3.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet3.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet3.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet3.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet4.accept_dad": "1",
  "net.ipv6.conf.vboxnet4.accept_ra": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet4.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet4.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet4.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet4.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet4.accept_redirects": "1",
  "net.ipv6.conf.vboxnet4.accept_source_route": "0",
  "net.ipv6.conf.vboxnet4.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet4.autoconf": "1",
  "net.ipv6.conf.vboxnet4.dad_transmits": "1",
  "net.ipv6.conf.vboxnet4.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet4.disable_policy": "0",
  "net.ipv6.conf.vboxnet4.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet4.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet4.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet4.force_mld_version": "0",
  "net.ipv6.conf.vboxnet4.force_tllao": "0",
  "net.ipv6.conf.vboxnet4.forwarding": "0",
  "net.ipv6.conf.vboxnet4.hop_limit": "64",
  "net.ipv6.conf.vboxnet4.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet4.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet4.max_addresses": "16",
  "net.ipv6.conf.vboxnet4.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet4.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet4.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet4.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet4.mtu": "1500",
  "net.ipv6.conf.vboxnet4.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet4.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet4.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet4.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet4.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet4.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet4.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet4.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet4.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet4.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet4.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet4.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet4.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet4.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet4.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet4.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet5.accept_dad": "1",
  "net.ipv6.conf.vboxnet5.accept_ra": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet5.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet5.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet5.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet5.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet5.accept_redirects": "1",
  "net.ipv6.conf.vboxnet5.accept_source_route": "0",
  "net.ipv6.conf.vboxnet5.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet5.autoconf": "1",
  "net.ipv6.conf.vboxnet5.dad_transmits": "1",
  "net.ipv6.conf.vboxnet5.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet5.disable_policy": "0",
  "net.ipv6.conf.vboxnet5.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet5.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet5.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet5.force_mld_version": "0",
  "net.ipv6.conf.vboxnet5.force_tllao": "0",
  "net.ipv6.conf.vboxnet5.forwarding": "0",
  "net.ipv6.conf.vboxnet5.hop_limit": "64",
  "net.ipv6.conf.vboxnet5.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet5.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet5.max_addresses": "16",
  "net.ipv6.conf.vboxnet5.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet5.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet5.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet5.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet5.mtu": "1500",
  "net.ipv6.conf.vboxnet5.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet5.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet5.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet5.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet5.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet5.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet5.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet5.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet5.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet5.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet5.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet5.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet5.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet5.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet5.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet5.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet6.accept_dad": "1",
  "net.ipv6.conf.vboxnet6.accept_ra": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet6.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet6.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet6.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet6.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet6.accept_redirects": "1",
  "net.ipv6.conf.vboxnet6.accept_source_route": "0",
  "net.ipv6.conf.vboxnet6.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet6.autoconf": "1",
  "net.ipv6.conf.vboxnet6.dad_transmits": "1",
  "net.ipv6.conf.vboxnet6.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet6.disable_policy": "0",
  "net.ipv6.conf.vboxnet6.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet6.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet6.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet6.force_mld_version": "0",
  "net.ipv6.conf.vboxnet6.force_tllao": "0",
  "net.ipv6.conf.vboxnet6.forwarding": "0",
  "net.ipv6.conf.vboxnet6.hop_limit": "64",
  "net.ipv6.conf.vboxnet6.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet6.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet6.max_addresses": "16",
  "net.ipv6.conf.vboxnet6.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet6.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet6.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet6.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet6.mtu": "1500",
  "net.ipv6.conf.vboxnet6.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet6.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet6.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet6.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet6.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet6.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet6.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet6.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet6.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet6.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet6.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet6.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet6.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet6.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet6.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet6.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet7.accept_dad": "1",
  "net.ipv6.conf.vboxnet7.accept_ra": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet7.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet7.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet7.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet7.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet7.accept_redirects": "1",
  "net.ipv6.conf.vboxnet7.accept_source_route": "0",
  "net.ipv6.conf.vboxnet7.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet7.autoconf": "1",
  "net.ipv6.conf.vboxnet7.dad_transmits": "1",
  "net.ipv6.conf.vboxnet7.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet7.disable_policy": "0",
  "net.ipv6.conf.vboxnet7.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet7.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet7.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet7.force_mld_version": "0",
  "net.ipv6.conf.vboxnet7.force_tllao": "0",
  "net.ipv6.conf.vboxnet7.forwarding": "0",
  "net.ipv6.conf.vboxnet7.hop_limit": "64",
  "net.ipv6.conf.vboxnet7.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet7.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet7.max_addresses": "16",
  "net.ipv6.conf.vboxnet7.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet7.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet7.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet7.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet7.mtu": "1500",
  "net.ipv6.conf.vboxnet7.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet7.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet7.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet7.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet7.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet7.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet7.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet7.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet7.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet7.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet7.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet7.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet7.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet7.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet7.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet7.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet8.accept_dad": "1",
  "net.ipv6.conf.vboxnet8.accept_ra": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet8.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet8.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet8.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet8.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet8.accept_redirects": "1",
  "net.ipv6.conf.vboxnet8.accept_source_route": "0",
  "net.ipv6.conf.vboxnet8.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet8.autoconf": "1",
  "net.ipv6.conf.vboxnet8.dad_transmits": "1",
  "net.ipv6.conf.vboxnet8.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet8.disable_policy": "0",
  "net.ipv6.conf.vboxnet8.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet8.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet8.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet8.force_mld_version": "0",
  "net.ipv6.conf.vboxnet8.force_tllao": "0",
  "net.ipv6.conf.vboxnet8.forwarding": "0",
  "net.ipv6.conf.vboxnet8.hop_limit": "64",
  "net.ipv6.conf.vboxnet8.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet8.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet8.max_addresses": "16",
  "net.ipv6.conf.vboxnet8.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet8.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet8.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet8.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet8.mtu": "1500",
  "net.ipv6.conf.vboxnet8.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet8.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet8.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet8.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet8.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet8.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet8.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet8.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet8.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet8.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet8.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet8.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet8.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet8.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet8.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet8.use_tempaddr": "2",
  "net.ipv6.conf.vboxnet9.accept_dad": "1",
  "net.ipv6.conf.vboxnet9.accept_ra": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_defrtr": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_from_local": "0",
  "net.ipv6.conf.vboxnet9.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_mtu": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_pinfo": "1",
  "net.ipv6.conf.vboxnet9.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.vboxnet9.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.vboxnet9.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.vboxnet9.accept_redirects": "1",
  "net.ipv6.conf.vboxnet9.accept_source_route": "0",
  "net.ipv6.conf.vboxnet9.addr_gen_mode": "0",
  "net.ipv6.conf.vboxnet9.autoconf": "1",
  "net.ipv6.conf.vboxnet9.dad_transmits": "1",
  "net.ipv6.conf.vboxnet9.disable_ipv6": "0",
  "net.ipv6.conf.vboxnet9.disable_policy": "0",
  "net.ipv6.conf.vboxnet9.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.vboxnet9.drop_unsolicited_na": "0",
  "net.ipv6.conf.vboxnet9.enhanced_dad": "1",
  "net.ipv6.conf.vboxnet9.force_mld_version": "0",
  "net.ipv6.conf.vboxnet9.force_tllao": "0",
  "net.ipv6.conf.vboxnet9.forwarding": "0",
  "net.ipv6.conf.vboxnet9.hop_limit": "64",
  "net.ipv6.conf.vboxnet9.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.vboxnet9.keep_addr_on_down": "0",
  "net.ipv6.conf.vboxnet9.max_addresses": "16",
  "net.ipv6.conf.vboxnet9.max_desync_factor": "600",
  "net.ipv6.conf.vboxnet9.mc_forwarding": "0",
  "net.ipv6.conf.vboxnet9.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.vboxnet9.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.vboxnet9.mtu": "1500",
  "net.ipv6.conf.vboxnet9.ndisc_notify": "0",
  "net.ipv6.conf.vboxnet9.ndisc_tclass": "0",
  "net.ipv6.conf.vboxnet9.proxy_ndp": "0",
  "net.ipv6.conf.vboxnet9.regen_max_retry": "3",
  "net.ipv6.conf.vboxnet9.router_probe_interval": "60",
  "net.ipv6.conf.vboxnet9.router_solicitation_delay": "1",
  "net.ipv6.conf.vboxnet9.router_solicitation_interval": "4",
  "net.ipv6.conf.vboxnet9.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.vboxnet9.router_solicitations": "-1",
  "net.ipv6.conf.vboxnet9.seg6_enabled": "0",
  "net.ipv6.conf.vboxnet9.seg6_require_hmac": "0",
  "net.ipv6.conf.vboxnet9.suppress_frag_ndisc": "1",
  "net.ipv6.conf.vboxnet9.temp_prefered_lft": "86400",
  "net.ipv6.conf.vboxnet9.temp_valid_lft": "604800",
  "net.ipv6.conf.vboxnet9.use_oif_addrs_only": "0",
  "net.ipv6.conf.vboxnet9.use_tempaddr": "2",
  "net.ipv6.conf.virbr0-nic.accept_dad": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_defrtr": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_from_local": "0",
  "net.ipv6.conf.virbr0-nic.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_mtu": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_pinfo": "1",
  "net.ipv6.conf.virbr0-nic.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.virbr0-nic.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.virbr0-nic.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.virbr0-nic.accept_redirects": "1",
  "net.ipv6.conf.virbr0-nic.accept_source_route": "0",
  "net.ipv6.conf.virbr0-nic.addr_gen_mode": "0",
  "net.ipv6.conf.virbr0-nic.autoconf": "1",
  "net.ipv6.conf.virbr0-nic.dad_transmits": "1",
  "net.ipv6.conf.virbr0-nic.disable_ipv6": "0",
  "net.ipv6.conf.virbr0-nic.disable_policy": "0",
  "net.ipv6.conf.virbr0-nic.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.virbr0-nic.drop_unsolicited_na": "0",
  "net.ipv6.conf.virbr0-nic.enhanced_dad": "1",
  "net.ipv6.conf.virbr0-nic.force_mld_version": "0",
  "net.ipv6.conf.virbr0-nic.force_tllao": "0",
  "net.ipv6.conf.virbr0-nic.forwarding": "0",
  "net.ipv6.conf.virbr0-nic.hop_limit": "64",
  "net.ipv6.conf.virbr0-nic.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.virbr0-nic.keep_addr_on_down": "0",
  "net.ipv6.conf.virbr0-nic.max_addresses": "16",
  "net.ipv6.conf.virbr0-nic.max_desync_factor": "600",
  "net.ipv6.conf.virbr0-nic.mc_forwarding": "0",
  "net.ipv6.conf.virbr0-nic.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.virbr0-nic.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.virbr0-nic.mtu": "1500",
  "net.ipv6.conf.virbr0-nic.ndisc_notify": "0",
  "net.ipv6.conf.virbr0-nic.ndisc_tclass": "0",
  "net.ipv6.conf.virbr0-nic.proxy_ndp": "0",
  "net.ipv6.conf.virbr0-nic.regen_max_retry": "3",
  "net.ipv6.conf.virbr0-nic.router_probe_interval": "60",
  "net.ipv6.conf.virbr0-nic.router_solicitation_delay": "1",
  "net.ipv6.conf.virbr0-nic.router_solicitation_interval": "4",
  "net.ipv6.conf.virbr0-nic.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.virbr0-nic.router_solicitations": "-1",
  "net.ipv6.conf.virbr0-nic.seg6_enabled": "0",
  "net.ipv6.conf.virbr0-nic.seg6_require_hmac": "0",
  "net.ipv6.conf.virbr0-nic.suppress_frag_ndisc": "1",
  "net.ipv6.conf.virbr0-nic.temp_prefered_lft": "86400",
  "net.ipv6.conf.virbr0-nic.temp_valid_lft": "604800",
  "net.ipv6.conf.virbr0-nic.use_oif_addrs_only": "0",
  "net.ipv6.conf.virbr0-nic.use_tempaddr": "2",
  "net.ipv6.conf.virbr0.accept_dad": "1",
  "net.ipv6.conf.virbr0.accept_ra": "0",
  "net.ipv6.conf.virbr0.accept_ra_defrtr": "1",
  "net.ipv6.conf.virbr0.accept_ra_from_local": "0",
  "net.ipv6.conf.virbr0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.virbr0.accept_ra_mtu": "1",
  "net.ipv6.conf.virbr0.accept_ra_pinfo": "1",
  "net.ipv6.conf.virbr0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.virbr0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.virbr0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.virbr0.accept_redirects": "1",
  "net.ipv6.conf.virbr0.accept_source_route": "0",
  "net.ipv6.conf.virbr0.addr_gen_mode": "0",
  "net.ipv6.conf.virbr0.autoconf": "0",
  "net.ipv6.conf.virbr0.dad_transmits": "1",
  "net.ipv6.conf.virbr0.disable_ipv6": "1",
  "net.ipv6.conf.virbr0.disable_policy": "0",
  "net.ipv6.conf.virbr0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.virbr0.drop_unsolicited_na": "0",
  "net.ipv6.conf.virbr0.enhanced_dad": "1",
  "net.ipv6.conf.virbr0.force_mld_version": "0",
  "net.ipv6.conf.virbr0.force_tllao": "0",
  "net.ipv6.conf.virbr0.forwarding": "0",
  "net.ipv6.conf.virbr0.hop_limit": "64",
  "net.ipv6.conf.virbr0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.virbr0.keep_addr_on_down": "0",
  "net.ipv6.conf.virbr0.max_addresses": "16",
  "net.ipv6.conf.virbr0.max_desync_factor": "600",
  "net.ipv6.conf.virbr0.mc_forwarding": "0",
  "net.ipv6.conf.virbr0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.virbr0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.virbr0.mtu": "1500",
  "net.ipv6.conf.virbr0.ndisc_notify": "0",
  "net.ipv6.conf.virbr0.ndisc_tclass": "0",
  "net.ipv6.conf.virbr0.proxy_ndp": "0",
  "net.ipv6.conf.virbr0.regen_max_retry": "3",
  "net.ipv6.conf.virbr0.router_probe_interval": "60",
  "net.ipv6.conf.virbr0.router_solicitation_delay": "1",
  "net.ipv6.conf.virbr0.router_solicitation_interval": "4",
  "net.ipv6.conf.virbr0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.virbr0.router_solicitations": "-1",
  "net.ipv6.conf.virbr0.seg6_enabled": "0",
  "net.ipv6.conf.virbr0.seg6_require_hmac": "0",
  "net.ipv6.conf.virbr0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.virbr0.temp_prefered_lft": "86400",
  "net.ipv6.conf.virbr0.temp_valid_lft": "604800",
  "net.ipv6.conf.virbr0.use_oif_addrs_only": "0",
  "net.ipv6.conf.virbr0.use_tempaddr": "2",
  "net.ipv6.conf.wlan0.accept_dad": "1",
  "net.ipv6.conf.wlan0.accept_ra": "0",
  "net.ipv6.conf.wlan0.accept_ra_defrtr": "1",
  "net.ipv6.conf.wlan0.accept_ra_from_local": "0",
  "net.ipv6.conf.wlan0.accept_ra_min_hop_limit": "1",
  "net.ipv6.conf.wlan0.accept_ra_mtu": "1",
  "net.ipv6.conf.wlan0.accept_ra_pinfo": "1",
  "net.ipv6.conf.wlan0.accept_ra_rt_info_max_plen": "0",
  "net.ipv6.conf.wlan0.accept_ra_rt_info_min_plen": "0",
  "net.ipv6.conf.wlan0.accept_ra_rtr_pref": "1",
  "net.ipv6.conf.wlan0.accept_redirects": "1",
  "net.ipv6.conf.wlan0.accept_source_route": "0",
  "net.ipv6.conf.wlan0.addr_gen_mode": "1",
  "net.ipv6.conf.wlan0.autoconf": "1",
  "net.ipv6.conf.wlan0.dad_transmits": "1",
  "net.ipv6.conf.wlan0.disable_ipv6": "0",
  "net.ipv6.conf.wlan0.disable_policy": "0",
  "net.ipv6.conf.wlan0.drop_unicast_in_l2_multicast": "0",
  "net.ipv6.conf.wlan0.drop_unsolicited_na": "0",
  "net.ipv6.conf.wlan0.enhanced_dad": "1",
  "net.ipv6.conf.wlan0.force_mld_version": "0",
  "net.ipv6.conf.wlan0.force_tllao": "0",
  "net.ipv6.conf.wlan0.forwarding": "0",
  "net.ipv6.conf.wlan0.hop_limit": "64",
  "net.ipv6.conf.wlan0.ignore_routes_with_linkdown": "0",
  "net.ipv6.conf.wlan0.keep_addr_on_down": "0",
  "net.ipv6.conf.wlan0.max_addresses": "16",
  "net.ipv6.conf.wlan0.max_desync_factor": "600",
  "net.ipv6.conf.wlan0.mc_forwarding": "0",
  "net.ipv6.conf.wlan0.mldv1_unsolicited_report_interval": "10000",
  "net.ipv6.conf.wlan0.mldv2_unsolicited_report_interval": "1000",
  "net.ipv6.conf.wlan0.mtu": "1500",
  "net.ipv6.conf.wlan0.ndisc_notify": "0",
  "net.ipv6.conf.wlan0.ndisc_tclass": "0",
  "net.ipv6.conf.wlan0.proxy_ndp": "0",
  "net.ipv6.conf.wlan0.regen_max_retry": "3",
  "net.ipv6.conf.wlan0.router_probe_interval": "60",
  "net.ipv6.conf.wlan0.router_solicitation_delay": "1",
  "net.ipv6.conf.wlan0.router_solicitation_interval": "4",
  "net.ipv6.conf.wlan0.router_solicitation_max_interval": "3600",
  "net.ipv6.conf.wlan0.router_solicitations": "-1",
  "net.ipv6.conf.wlan0.seg6_enabled": "0",
  "net.ipv6.conf.wlan0.seg6_require_hmac": "0",
  "net.ipv6.conf.wlan0.suppress_frag_ndisc": "1",
  "net.ipv6.conf.wlan0.temp_prefered_lft": "86400",
  "net.ipv6.conf.wlan0.temp_valid_lft": "604800",
  "net.ipv6.conf.wlan0.use_oif_addrs_only": "0",
  "net.ipv6.conf.wlan0.use_tempaddr": "2",
  "net.ipv6.fib_multipath_hash_policy": "0",
  "net.ipv6.flowlabel_consistency": "1",
  "net.ipv6.flowlabel_reflect": "0",
  "net.ipv6.flowlabel_state_ranges": "0",
  "net.ipv6.fwmark_reflect": "0",
  "net.ipv6.icmp.echo_ignore_all": "0",
  "net.ipv6.icmp.echo_ignore_anycast": "0",
  "net.ipv6.icmp.echo_ignore_multicast": "0",
  "net.ipv6.icmp.ratelimit": "1000",
  "net.ipv6.icmp.ratemask": "0-1,3-127",
  "net.ipv6.idgen_delay": "1",
  "net.ipv6.idgen_retries": "3",
  "net.ipv6.ip6frag_high_thresh": "4194304",
  "net.ipv6.ip6frag_low_thresh": "3145728",
  "net.ipv6.ip6frag_secret_interval": "0",
  "net.ipv6.ip6frag_time": "60",
  "net.ipv6.ip_nonlocal_bind": "0",
  "net.ipv6.max_dst_opts_length": "2147483647",
  "net.ipv6.max_dst_opts_number": "8",
  "net.ipv6.max_hbh_length": "2147483647",
  "net.ipv6.max_hbh_opts_number": "8",
  "net.ipv6.mld_max_msf": "64",
  "net.ipv6.mld_qrv": "2",
  "net.ipv6.neigh.default.anycast_delay": "100",
  "net.ipv6.neigh.default.app_solicit": "0",
  "net.ipv6.neigh.default.base_reachable_time": "30",
  "net.ipv6.neigh.default.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.default.delay_first_probe_time": "5",
  "net.ipv6.neigh.default.gc_interval": "30",
  "net.ipv6.neigh.default.gc_stale_time": "60",
  "net.ipv6.neigh.default.gc_thresh1": "128",
  "net.ipv6.neigh.default.gc_thresh2": "512",
  "net.ipv6.neigh.default.gc_thresh3": "1024",
  "net.ipv6.neigh.default.locktime": "0",
  "net.ipv6.neigh.default.mcast_resolicit": "0",
  "net.ipv6.neigh.default.mcast_solicit": "3",
  "net.ipv6.neigh.default.proxy_delay": "80",
  "net.ipv6.neigh.default.proxy_qlen": "64",
  "net.ipv6.neigh.default.retrans_time": "1000",
  "net.ipv6.neigh.default.retrans_time_ms": "1000",
  "net.ipv6.neigh.default.ucast_solicit": "3",
  "net.ipv6.neigh.default.unres_qlen": "101",
  "net.ipv6.neigh.default.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.docker0.anycast_delay": "100",
  "net.ipv6.neigh.docker0.app_solicit": "0",
  "net.ipv6.neigh.docker0.base_reachable_time": "30",
  "net.ipv6.neigh.docker0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.docker0.delay_first_probe_time": "5",
  "net.ipv6.neigh.docker0.gc_stale_time": "60",
  "net.ipv6.neigh.docker0.locktime": "0",
  "net.ipv6.neigh.docker0.mcast_resolicit": "0",
  "net.ipv6.neigh.docker0.mcast_solicit": "3",
  "net.ipv6.neigh.docker0.proxy_delay": "80",
  "net.ipv6.neigh.docker0.proxy_qlen": "64",
  "net.ipv6.neigh.docker0.retrans_time": "1000",
  "net.ipv6.neigh.docker0.retrans_time_ms": "1000",
  "net.ipv6.neigh.docker0.ucast_solicit": "3",
  "net.ipv6.neigh.docker0.unres_qlen": "101",
  "net.ipv6.neigh.docker0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.eth0.anycast_delay": "100",
  "net.ipv6.neigh.eth0.app_solicit": "0",
  "net.ipv6.neigh.eth0.base_reachable_time": "30",
  "net.ipv6.neigh.eth0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.eth0.delay_first_probe_time": "5",
  "net.ipv6.neigh.eth0.gc_stale_time": "60",
  "net.ipv6.neigh.eth0.locktime": "0",
  "net.ipv6.neigh.eth0.mcast_resolicit": "0",
  "net.ipv6.neigh.eth0.mcast_solicit": "3",
  "net.ipv6.neigh.eth0.proxy_delay": "80",
  "net.ipv6.neigh.eth0.proxy_qlen": "64",
  "net.ipv6.neigh.eth0.retrans_time": "1000",
  "net.ipv6.neigh.eth0.retrans_time_ms": "1000",
  "net.ipv6.neigh.eth0.ucast_solicit": "3",
  "net.ipv6.neigh.eth0.unres_qlen": "101",
  "net.ipv6.neigh.eth0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.lo.anycast_delay": "100",
  "net.ipv6.neigh.lo.app_solicit": "0",
  "net.ipv6.neigh.lo.base_reachable_time": "30",
  "net.ipv6.neigh.lo.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.lo.delay_first_probe_time": "5",
  "net.ipv6.neigh.lo.gc_stale_time": "60",
  "net.ipv6.neigh.lo.locktime": "0",
  "net.ipv6.neigh.lo.mcast_resolicit": "0",
  "net.ipv6.neigh.lo.mcast_solicit": "3",
  "net.ipv6.neigh.lo.proxy_delay": "80",
  "net.ipv6.neigh.lo.proxy_qlen": "64",
  "net.ipv6.neigh.lo.retrans_time": "1000",
  "net.ipv6.neigh.lo.retrans_time_ms": "1000",
  "net.ipv6.neigh.lo.ucast_solicit": "3",
  "net.ipv6.neigh.lo.unres_qlen": "101",
  "net.ipv6.neigh.lo.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.tun0.anycast_delay": "100",
  "net.ipv6.neigh.tun0.app_solicit": "0",
  "net.ipv6.neigh.tun0.base_reachable_time": "30",
  "net.ipv6.neigh.tun0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.tun0.delay_first_probe_time": "5",
  "net.ipv6.neigh.tun0.gc_stale_time": "60",
  "net.ipv6.neigh.tun0.locktime": "0",
  "net.ipv6.neigh.tun0.mcast_resolicit": "0",
  "net.ipv6.neigh.tun0.mcast_solicit": "3",
  "net.ipv6.neigh.tun0.proxy_delay": "80",
  "net.ipv6.neigh.tun0.proxy_qlen": "64",
  "net.ipv6.neigh.tun0.retrans_time": "1000",
  "net.ipv6.neigh.tun0.retrans_time_ms": "1000",
  "net.ipv6.neigh.tun0.ucast_solicit": "3",
  "net.ipv6.neigh.tun0.unres_qlen": "101",
  "net.ipv6.neigh.tun0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet0.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet0.app_solicit": "0",
  "net.ipv6.neigh.vboxnet0.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet0.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet0.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet0.locktime": "0",
  "net.ipv6.neigh.vboxnet0.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet0.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet0.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet0.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet0.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet0.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet0.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet0.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet1.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet1.app_solicit": "0",
  "net.ipv6.neigh.vboxnet1.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet1.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet1.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet1.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet1.locktime": "0",
  "net.ipv6.neigh.vboxnet1.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet1.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet1.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet1.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet1.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet1.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet1.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet1.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet1.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet10.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet10.app_solicit": "0",
  "net.ipv6.neigh.vboxnet10.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet10.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet10.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet10.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet10.locktime": "0",
  "net.ipv6.neigh.vboxnet10.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet10.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet10.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet10.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet10.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet10.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet10.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet10.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet10.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet11.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet11.app_solicit": "0",
  "net.ipv6.neigh.vboxnet11.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet11.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet11.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet11.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet11.locktime": "0",
  "net.ipv6.neigh.vboxnet11.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet11.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet11.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet11.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet11.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet11.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet11.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet11.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet11.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet12.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet12.app_solicit": "0",
  "net.ipv6.neigh.vboxnet12.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet12.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet12.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet12.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet12.locktime": "0",
  "net.ipv6.neigh.vboxnet12.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet12.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet12.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet12.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet12.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet12.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet12.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet12.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet12.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet13.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet13.app_solicit": "0",
  "net.ipv6.neigh.vboxnet13.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet13.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet13.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet13.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet13.locktime": "0",
  "net.ipv6.neigh.vboxnet13.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet13.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet13.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet13.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet13.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet13.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet13.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet13.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet13.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet2.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet2.app_solicit": "0",
  "net.ipv6.neigh.vboxnet2.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet2.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet2.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet2.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet2.locktime": "0",
  "net.ipv6.neigh.vboxnet2.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet2.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet2.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet2.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet2.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet2.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet2.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet2.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet2.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet3.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet3.app_solicit": "0",
  "net.ipv6.neigh.vboxnet3.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet3.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet3.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet3.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet3.locktime": "0",
  "net.ipv6.neigh.vboxnet3.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet3.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet3.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet3.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet3.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet3.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet3.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet3.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet3.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet4.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet4.app_solicit": "0",
  "net.ipv6.neigh.vboxnet4.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet4.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet4.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet4.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet4.locktime": "0",
  "net.ipv6.neigh.vboxnet4.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet4.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet4.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet4.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet4.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet4.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet4.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet4.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet4.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet5.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet5.app_solicit": "0",
  "net.ipv6.neigh.vboxnet5.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet5.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet5.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet5.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet5.locktime": "0",
  "net.ipv6.neigh.vboxnet5.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet5.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet5.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet5.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet5.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet5.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet5.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet5.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet5.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet6.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet6.app_solicit": "0",
  "net.ipv6.neigh.vboxnet6.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet6.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet6.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet6.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet6.locktime": "0",
  "net.ipv6.neigh.vboxnet6.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet6.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet6.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet6.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet6.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet6.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet6.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet6.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet6.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet7.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet7.app_solicit": "0",
  "net.ipv6.neigh.vboxnet7.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet7.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet7.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet7.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet7.locktime": "0",
  "net.ipv6.neigh.vboxnet7.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet7.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet7.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet7.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet7.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet7.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet7.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet7.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet7.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet8.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet8.app_solicit": "0",
  "net.ipv6.neigh.vboxnet8.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet8.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet8.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet8.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet8.locktime": "0",
  "net.ipv6.neigh.vboxnet8.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet8.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet8.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet8.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet8.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet8.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet8.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet8.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet8.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.vboxnet9.anycast_delay": "100",
  "net.ipv6.neigh.vboxnet9.app_solicit": "0",
  "net.ipv6.neigh.vboxnet9.base_reachable_time": "30",
  "net.ipv6.neigh.vboxnet9.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.vboxnet9.delay_first_probe_time": "5",
  "net.ipv6.neigh.vboxnet9.gc_stale_time": "60",
  "net.ipv6.neigh.vboxnet9.locktime": "0",
  "net.ipv6.neigh.vboxnet9.mcast_resolicit": "0",
  "net.ipv6.neigh.vboxnet9.mcast_solicit": "3",
  "net.ipv6.neigh.vboxnet9.proxy_delay": "80",
  "net.ipv6.neigh.vboxnet9.proxy_qlen": "64",
  "net.ipv6.neigh.vboxnet9.retrans_time": "1000",
  "net.ipv6.neigh.vboxnet9.retrans_time_ms": "1000",
  "net.ipv6.neigh.vboxnet9.ucast_solicit": "3",
  "net.ipv6.neigh.vboxnet9.unres_qlen": "101",
  "net.ipv6.neigh.vboxnet9.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.virbr0-nic.anycast_delay": "100",
  "net.ipv6.neigh.virbr0-nic.app_solicit": "0",
  "net.ipv6.neigh.virbr0-nic.base_reachable_time": "30",
  "net.ipv6.neigh.virbr0-nic.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.virbr0-nic.delay_first_probe_time": "5",
  "net.ipv6.neigh.virbr0-nic.gc_stale_time": "60",
  "net.ipv6.neigh.virbr0-nic.locktime": "0",
  "net.ipv6.neigh.virbr0-nic.mcast_resolicit": "0",
  "net.ipv6.neigh.virbr0-nic.mcast_solicit": "3",
  "net.ipv6.neigh.virbr0-nic.proxy_delay": "80",
  "net.ipv6.neigh.virbr0-nic.proxy_qlen": "64",
  "net.ipv6.neigh.virbr0-nic.retrans_time": "1000",
  "net.ipv6.neigh.virbr0-nic.retrans_time_ms": "1000",
  "net.ipv6.neigh.virbr0-nic.ucast_solicit": "3",
  "net.ipv6.neigh.virbr0-nic.unres_qlen": "101",
  "net.ipv6.neigh.virbr0-nic.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.virbr0.anycast_delay": "100",
  "net.ipv6.neigh.virbr0.app_solicit": "0",
  "net.ipv6.neigh.virbr0.base_reachable_time": "30",
  "net.ipv6.neigh.virbr0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.virbr0.delay_first_probe_time": "5",
  "net.ipv6.neigh.virbr0.gc_stale_time": "60",
  "net.ipv6.neigh.virbr0.locktime": "0",
  "net.ipv6.neigh.virbr0.mcast_resolicit": "0",
  "net.ipv6.neigh.virbr0.mcast_solicit": "3",
  "net.ipv6.neigh.virbr0.proxy_delay": "80",
  "net.ipv6.neigh.virbr0.proxy_qlen": "64",
  "net.ipv6.neigh.virbr0.retrans_time": "1000",
  "net.ipv6.neigh.virbr0.retrans_time_ms": "1000",
  "net.ipv6.neigh.virbr0.ucast_solicit": "3",
  "net.ipv6.neigh.virbr0.unres_qlen": "101",
  "net.ipv6.neigh.virbr0.unres_qlen_bytes": "212992",
  "net.ipv6.neigh.wlan0.anycast_delay": "100",
  "net.ipv6.neigh.wlan0.app_solicit": "0",
  "net.ipv6.neigh.wlan0.base_reachable_time": "30",
  "net.ipv6.neigh.wlan0.base_reachable_time_ms": "30000",
  "net.ipv6.neigh.wlan0.delay_first_probe_time": "5",
  "net.ipv6.neigh.wlan0.gc_stale_time": "60",
  "net.ipv6.neigh.wlan0.locktime": "0",
  "net.ipv6.neigh.wlan0.mcast_resolicit": "0",
  "net.ipv6.neigh.wlan0.mcast_solicit": "3",
  "net.ipv6.neigh.wlan0.proxy_delay": "80",
  "net.ipv6.neigh.wlan0.proxy_qlen": "64",
  "net.ipv6.neigh.wlan0.retrans_time": "1000",
  "net.ipv6.neigh.wlan0.retrans_time_ms": "1000",
  "net.ipv6.neigh.wlan0.ucast_solicit": "3",
  "net.ipv6.neigh.wlan0.unres_qlen": "101",
  "net.ipv6.neigh.wlan0.unres_qlen_bytes": "212992",
  "net.ipv6.route.gc_elasticity": "9",
  "net.ipv6.route.gc_interval": "30",
  "net.ipv6.route.gc_min_interval": "0",
  "net.ipv6.route.gc_min_interval_ms": "500",
  "net.ipv6.route.gc_thresh": "1024",
  "net.ipv6.route.gc_timeout": "60",
  "net.ipv6.route.max_size": "4096",
  "net.ipv6.route.min_adv_mss": "1220",
  "net.ipv6.route.mtu_expires": "600",
  "net.ipv6.route.skip_notify_on_dev_down": "0",
  "net.ipv6.seg6_flowlabel": "0",
  "net.ipv6.xfrm6_gc_thresh": "32768",
  "net.netfilter.nf_conntrack_acct": "0",
  "net.netfilter.nf_conntrack_buckets": "65536",
  "net.netfilter.nf_conntrack_checksum": "1",
  "net.netfilter.nf_conntrack_count": "224",
  "net.netfilter.nf_conntrack_dccp_loose": "1",
  "net.netfilter.nf_conntrack_dccp_timeout_closereq": "64",
  "net.netfilter.nf_conntrack_dccp_timeout_closing": "64",
  "net.netfilter.nf_conntrack_dccp_timeout_open": "43200",
  "net.netfilter.nf_conntrack_dccp_timeout_partopen": "480",
  "net.netfilter.nf_conntrack_dccp_timeout_request": "240",
  "net.netfilter.nf_conntrack_dccp_timeout_respond": "480",
  "net.netfilter.nf_conntrack_dccp_timeout_timewait": "240",
  "net.netfilter.nf_conntrack_events": "1",
  "net.netfilter.nf_conntrack_expect_max": "1024",
  "net.netfilter.nf_conntrack_frag6_high_thresh": "4194304",
  "net.netfilter.nf_conntrack_frag6_low_thresh": "3145728",
  "net.netfilter.nf_conntrack_frag6_timeout": "60",
  "net.netfilter.nf_conntrack_generic_timeout": "600",
  "net.netfilter.nf_conntrack_gre_timeout": "30",
  "net.netfilter.nf_conntrack_gre_timeout_stream": "180",
  "net.netfilter.nf_conntrack_helper": "0",
  "net.netfilter.nf_conntrack_icmp_timeout": "30",
  "net.netfilter.nf_conntrack_icmpv6_timeout": "30",
  "net.netfilter.nf_conntrack_log_invalid": "0",
  "net.netfilter.nf_conntrack_max": "262144",
  "net.netfilter.nf_conntrack_sctp_timeout_closed": "10",
  "net.netfilter.nf_conntrack_sctp_timeout_cookie_echoed": "3",
  "net.netfilter.nf_conntrack_sctp_timeout_cookie_wait": "3",
  "net.netfilter.nf_conntrack_sctp_timeout_established": "432000",
  "net.netfilter.nf_conntrack_sctp_timeout_heartbeat_acked": "210",
  "net.netfilter.nf_conntrack_sctp_timeout_heartbeat_sent": "30",
  "net.netfilter.nf_conntrack_sctp_timeout_shutdown_ack_sent": "3",
  "net.netfilter.nf_conntrack_sctp_timeout_shutdown_recd": "0",
  "net.netfilter.nf_conntrack_sctp_timeout_shutdown_sent": "0",
  "net.netfilter.nf_conntrack_tcp_be_liberal": "0",
  "net.netfilter.nf_conntrack_tcp_loose": "1",
  "net.netfilter.nf_conntrack_tcp_max_retrans": "3",
  "net.netfilter.nf_conntrack_tcp_timeout_close": "10",
  "net.netfilter.nf_conntrack_tcp_timeout_close_wait": "60",
  "net.netfilter.nf_conntrack_tcp_timeout_established": "432000",
  "net.netfilter.nf_conntrack_tcp_timeout_fin_wait": "120",
  "net.netfilter.nf_conntrack_tcp_timeout_last_ack": "30",
  "net.netfilter.nf_conntrack_tcp_timeout_max_retrans": "300",
  "net.netfilter.nf_conntrack_tcp_timeout_syn_recv": "60",
  "net.netfilter.nf_conntrack_tcp_timeout_syn_sent": "120",
  "net.netfilter.nf_conntrack_tcp_timeout_time_wait": "120",
  "net.netfilter.nf_conntrack_tcp_timeout_unacknowledged": "300",
  "net.netfilter.nf_conntrack_timestamp": "0",
  "net.netfilter.nf_conntrack_udp_timeout": "30",
  "net.netfilter.nf_conntrack_udp_timeout_stream": "120",
  "net.netfilter.nf_log.0": "NONE",
  "net.netfilter.nf_log.1": "NONE",
  "net.netfilter.nf_log.10": "NONE",
  "net.netfilter.nf_log.11": "NONE",
  "net.netfilter.nf_log.12": "NONE",
  "net.netfilter.nf_log.2": "NONE",
  "net.netfilter.nf_log.3": "NONE",
  "net.netfilter.nf_log.4": "NONE",
  "net.netfilter.nf_log.5": "NONE",
  "net.netfilter.nf_log.6": "NONE",
  "net.netfilter.nf_log.7": "NONE",
  "net.netfilter.nf_log.8": "NONE",
  "net.netfilter.nf_log.9": "NONE",
  "net.netfilter.nf_log_all_netns": "0",
  "net.nf_conntrack_max": "262144",
  "net.unix.max_dgram_qlen": "512",
  "sunrpc.max_resvport": "1023",
  "sunrpc.min_resvport": "665",
  "sunrpc.nfs_debug": "0x0000",
  "sunrpc.nfsd_debug": "0x0000",
  "sunrpc.nlm_debug": "0x0000",
  "sunrpc.rpc_debug": "0x0000",
  "sunrpc.tcp_fin_timeout": "15",
  "sunrpc.tcp_max_slot_table_entries": "65536",
  "sunrpc.tcp_slot_table_entries": "2",
  "sunrpc.transports": "tcp 1048576\nudp 32768",
  "sunrpc.udp_slot_table_entries": "16",
  "user.max_cgroup_namespaces": "127767",
  "user.max_inotify_instances": "128",
  "user.max_inotify_watches": "98304",
  "user.max_ipc_namespaces": "127767",
  "user.max_mnt_namespaces": "127767",
  "user.max_net_namespaces": "127767",
  "user.max_pid_namespaces": "127767",
  "user.max_user_namespaces": "127767",
  "user.max_uts_namespaces": "127767",
  "vm.admin_reserve_kbytes": "8192",
  "vm.block_dump": "0",
  "vm.compact_unevictable_allowed": "1",
  "vm.dirty_background_bytes": "0",
  "vm.dirty_background_ratio": "10",
  "vm.dirty_bytes": "0",
  "vm.dirty_expire_centisecs": "1500",
  "vm.dirty_ratio": "20",
  "vm.dirty_writeback_centisecs": "1500",
  "vm.dirtytime_expire_seconds": "43200",
  "vm.extfrag_threshold": "500",
  "vm.hugetlb_shm_group": "0",
  "vm.laptop_mode": "0",
  "vm.legacy_va_layout": "0",
  "vm.lowmem_reserve_ratio": "256\t256\t32\t0\t0",
  "vm.max_map_count": "65530",
  "vm.memory_failure_early_kill": "0",
  "vm.memory_failure_recovery": "1",
  "vm.min_free_kbytes": "67584",
  "vm.min_slab_ratio": "5",
  "vm.min_unmapped_ratio": "1",
  "vm.mmap_min_addr": "65536",
  "vm.nr_hugepages": "0",
  "vm.nr_hugepages_mempolicy": "0",
  "vm.nr_overcommit_hugepages": "0",
  "vm.numa_stat": "1",
  "vm.numa_zonelist_order": "Node",
  "vm.oom_dump_tasks": "1",
  "vm.oom_kill_allocating_task": "0",
  "vm.overcommit_kbytes": "0",
  "vm.overcommit_memory": "0",
  "vm.overcommit_ratio": "50",
  "vm.page-cluster": "3",
  "vm.panic_on_oom": "0",
  "vm.percpu_pagelist_fraction": "0",
  "vm.stat_interval": "1",
  "vm.swappiness": "60",
  "vm.unprivileged_userfaultfd": "1",
  "vm.user_reserve_kbytes": "131072",
  "vm.vfs_cache_pressure": "100",
  "vm.watermark_boost_factor": "0",
  "vm.watermark_scale_factor": "10",
  "vm.zone_reclaim_mode": "0"
}
#+end_example

#+REVEAL: split

#+CAPTION: examples/sysctlvalue.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level error :exports both :tangle ./examples/sysctlvalue.cf
  bundle agent example_sysctlvalue
  {
    vars:
        "kernel_keys_gc_delay"
          string => sysctlvalue("kernel.keys.gc_delay");

    reports:
        "kernel.keys.gc_delay: $(kernel_keys_gc_delay)";
  }
  bundle agent __main__
  {
    methods: "example_sysctlvalue";
  }
#+END_SRC

#+RESULTS:
: R: kernel.keys.gc_delay: 300

#+CAPTION: examples/readenvfile.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level error :exports both :tangle ./examples/readenvfile.cf
  bundle agent example_readenvfile
  {
    vars:
        "_d" data => readenvfile("/etc/os-release");

    reports:
        "$(with)" with => string_mustache( "{{%-top-}}", _d );
  }
  bundle agent __main__
  {
    methods: "example_readenvfile";
  }
#+END_SRC

#+RESULTS:
#+begin_example
R: {
  "BUG_REPORT_URL": "https://bugs.launchpad.net/ubuntu/",
  "HOME_URL": "https://www.ubuntu.com/",
  "ID": "ubuntu",
  "ID_LIKE": "debian",
  "NAME": "Ubuntu",
  "PRETTY_NAME": "Ubuntu 20.04.1 LTS",
  "PRIVACY_POLICY_URL": "https://www.ubuntu.com/legal/terms-and-policies/privacy-policy",
  "SUPPORT_URL": "https://help.ubuntu.com/",
  "UBUNTU_CODENAME": "focal",
  "VERSION": "20.04.1 LTS (Focal Fossa)",
  "VERSION_CODENAME": "focal",
  "VERSION_ID": "20.04"
}
#+end_example

** In 3.10
*** Functions
:PROPERTIES:
:ID:       56daed1f-a78a-40ce-9601-63f57dc4a47d
:END:
- =getuserinfo()=
- =isipinsubnet()=
- =variablesmatching_as_data()=

#+REVEAL: split

#+CAPTION: examples/getuserinfo.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/getuserinfo.cf
  bundle agent example_getuserinfo
  {
    vars:
        "_user_info" data => getuserinfo("root");
        "_user_info_str" string => format( "%S", _user_info);
    reports:
        "$(_user_info_str)";
  }
  bundle agent __main__
  {
    methods: "example_getuserinfo";
  }
#+END_SRC

#+RESULTS:
: R: {"description":"root","gid":0,"home_dir":"/root","shell":"/bin/bash","uid":0,"username":"root"}

#+REVEAL: split

#+CAPTION: examples/isipinsubnet.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/isipinsubnet.cf
  bundle agent example_isipinsubnet
  {
    classes:
        "192_168_0_1_in_192_168_0_0_24"
          expression => isipinsubnet( "192.168.0.0/24", "192.168.0.1" );
        "192_168_99_1_in_192_168_0_0_24"
          expression => isipinsubnet( "192.168.0.0/24", "192.168.99.1" );

    reports:
      192_168_0_1_in_192_168_0_0_24::
        "192.168.0.1 is in 192.168.0.0/24";
      !192_168_99_1_in_192_168_0_0_24::
        "192.168.99.1 not in 192.168.0.0/24";
  }
  bundle agent __main__
  {
    methods: "example_isipinsubnet";
  }
#+END_SRC

#+RESULTS:
: R: 192.168.0.1 is in 192.168.0.0/24
: R: 192.168.99.1 not in 192.168.0.0/24

#+REVEAL: split

#+CAPTION: examples/variablesmatching_as_data.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/variablesmatching_as_data.cf
  bundle agent example_variablesmatching_as_data
  {
    vars:
       "ports" data => variablesmatching_as_data(".*", "port" );
       "ports_str" string => format( "%S", ports );
    reports:
      "$(ports_str)";
  }
  bundle agent one
  {
    vars:
      "the_port" string => "443", meta => { "port" };
  }
  bundle agent two
  {
    vars:
      "my_port" string => "80", meta => { "port" };
  }
  bundle agent __main__
  {
    methods: "example_variablesmatching_as_data";
  }
#+END_SRC

#+REVEAL: split

#+RESULTS:
: R: {"default:one.the_port":"443","default:two.my_port":"80"}

** In 3.9
*** Functions
:PROPERTIES:
:ID:       441ffe8c-b282-4d55-b61f-18dd2a67a9cf
:END:
- =callstack_callers()=
- =callstack_promisers()=
- =network_connections()=
- =findprocesses()=
- =processexists()=
- =regex_replace()=

#+REVEAL: split

#+CAPTION: examples/regex_replace.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/regex_replace.cf
  bundle agent example_regex_replace
  {
    vars:
        "my_string"
          string => "Perl is the best config management tool";
    reports:
        "$(with)" with => regex_replace( $(my_string),
                                          "^\w+", "CFEngine", "" );
  }
  bundle agent __main__
  {
    methods: "example_regex_replace";
  }
#+END_SRC

#+RESULTS:
: R: CFEngine is the best config management tool

#+REVEAL: split

#+CAPTION: examples/processexists.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/processexists.cf
  bundle agent example_processexists
  {
    reports:
        "Emacs is running" if => processexists( ".*emacs.*");
        "Emacs is NOT running" unless => processexists( ".*emacs.*");
  }
  bundle agent __main__
  {
    methods: "example_processexists";
  }
#+END_SRC

#+RESULTS:
: R: Emacs is running

#+REVEAL: split

#+CAPTION: examples/findprocesses.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/findprocesses.cf
  bundle agent example_findprocesses
  {
    vars:
      "_emacs_procs" data => findprocesses( ".*emacs.*" );
      "_i" slist => getindices( _emacs_procs );
    reports:
        "Emacs process: $(_emacs_procs[$(_i)][line])";
  }
  bundle agent __main__
  {
    methods: "example_findprocesses";
  }
#+END_SRC

#+RESULTS:
: R: Emacs process: nickanderson                   1064467 1064418 1064467  0.0  0.0   5116   0      2644 ?           1 11:45    03:15:18 00:00:00 /home/nickanderson/.emacs.d/elpa/26.3/develop/emacsql-sqlite-20190727.1710/sqlite/emacsql-sqlite /home/nickanderson/.emacs.d/.cache/forge-database.sqlite
: R: Emacs process: nickanderson                   1064418    4439    4438 14.3  1.7 987916   0    578144 ?           4 11:45    03:15:45 00:28:10 /usr/bin/emacs26
: R: Emacs process: nickanderson                      4593    4355    4355  0.2  1.0 1161376  0    348116 ?           8 Aug10  7-06:34:46 00:22:36 /usr/bin/emacs26 --smid=102752662b823d000159482098500000042660032 --no-splash --chdir=/home/nickanderson

#+REVEAL: split

#+CAPTION: examples/callstack_promisers.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/callstack_promisers.cf
  bundle agent example_callstack_promisers
  {
    methods:
      "Second promiser"
        usebundle => my_bundle;
  }
  bundle agent my_bundle
  {
    vars:
      "Callers"
        slist => callstack_promisers();

    reports:
      "$(Callers)";
  }
  bundle agent __main__
  {
    methods:
      "First promiser"
        usebundle => example_callstack_promisers;
  }
#+END_SRC

#+RESULTS:
: R: First promiser
: R: Second promiser

#+REVEAL: split

#+CAPTION: examples/network_connections.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/network_connections.cf
  bundle agent example_network_connections
  {
    vars:
      "_network_connections"
        data => network_connections();
      "_network_connections_str"
        string => format( "%S", _network_connections );
    reports:
      "$(_network_connections[tcp][0][local][address]):$(_network_connections[tcp][0][local][port]) is connected to $(_network_connections[tcp][0][remote][address]):$(_network_connections[tcp][0][remote][port])";
  }

  bundle agent __main__
  {
    methods: "example_network_connections";
  }
#+END_SRC

#+RESULTS:
: R: 127.0.0.1:17600 is connected to 0.0.0.0:0

** In 3.8
*** Functions
- =url_get()=

#+REVEAL: split

#+CAPTION: examples/url_get.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/url_get.cf
  bundle agent example_url_get
  {
    vars:
        "_response"
          data => url_get( "https://jsonplaceholder.typicode.com/todos/1",
                           '{}' );
        # Convert content string to data container
        "_content" data => "$(_response[content])";

        # JSON representation of data container
        "_str_content" string => format( "%S", _content );

    reports:
        "$(_str_content)";
  }
  bundle agent __main__
  {
    methods: "example_url_get";
  }
#+END_SRC

#+RESULTS:
: R: {"completed":false,"id":1,"title":"delectus aut autem","userId":1}

* Special Topics
** Internal agent upgrade mechanism

#+BEGIN_COMMENT
TODO
(the following doesn't fit on the page in the PDF)
#+END_COMMENT

- Place agent packages in
  =/var/cfengine/master_software_updates/$(sys.flavour)_$(sys.arch)=
- Define =trigger_upgrade= for set of hosts. Ref =update_def.cf=
  #+BEGIN_SRC cfengine3
  classes:
    "trigger_upgrade" or => { "host1", "host2", "redhat_5" };
  #+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
  The MPF comes with policy that allows for clients to upgrade their own
  packages that are served from the hub.
#+end_notes
** Data transformations

*** Re-parent a data structure

With =mergedata()= it is possible to wrap data containers inside of a new JSON
data structure in the current namespace.

For example, here we take an array of objects describing content for pghba.conf
file and re-parent it under the pghba key in a new data-structure.

#+BEGIN_SRC cfengine3
  bundle agent main
  {
      vars:
        "pghba_directives" data => '[
    {
      "type": "host",
      "database": "replication",
      "user": "all",
      "address": "secondary-replication",
      "method": "trust"
    }
  ]';

        "data" data => mergedata( '{ "pghba": pghba_directives }');


    reports:
        "$(with)" with => string_mustache( "{{%-top-}}", data);

  }
#+END_SRC

#+RESULTS:
#+begin_example
R: {
  "pghba": [
    {
      "address": "secondary-replication",
      "database": "replication",
      "method": "trust",
      "type": "host",
      "user": "all"
    }
  ]
}
#+end_example

*** Merging a result from ~variablesmatching_as_data()~
I see. So, we need to merge the variable values together.

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both
  bundle agent main
  {
    vars:
        "va_active_opsview_scripts_new"
          data => variablesmatching_as_data(".*", "opsview_rules_scripts");

        "va_active_opsview_scripts_new_index"
          slist => sort( getindices(va_active_opsview_scripts_new), lex);

        # Make a new data container to hold the picked and merged content
        "merged" data => '[]';
        # Merge the existing merged data container with each one of the indices
        "merged" data => mergedata( merged, "va_active_opsview_scripts_new[$(va_active_opsview_scripts_new_index)]" );


    reports:
        "merged: $(with)"
          with => string_mustache( "{{%-top-}}", merged );
        "Rendered to desired format$(const.n)$(with)"
          with => string_mustache( "{{#-top-}}{{name}}={{rule}}$(const.n){{/-top-}}", merged);
  }


  bundle agent app_opsview_agent
  {
    vars:
        "va_opsview_rules_scripts_array_app_opsview_agent_windows"
          meta => { "opsview_rules_scripts" },
          data => '[
      {
        "name": "check_ntp_time",
        "rule": "scripts\\check_windows_time.bat $ARG1$ $ARG2$ $ARG3$",
        "type": "scripts"
      },
      {
        "name": "check_disk",
        "rule": "scripts\\diskspace_nrpe_nt.exe $ARG1$",
        "type": "scripts"
      },
      {
        "name": "check_shadowcopy_status",
        "rule": "cmd /c echo scripts\\check_cdphp_shadowcopy_status.ps1 $ARG1$; exit($LastExitCode) | powershell.exe -command -",
        "type": "scripts"
      }
    ]';

        "va_opsview_rules_scripts_array_app_vars_windows"
          meta => { "opsview_rules_scripts" },
          data => '[
      {
        "name": "check_cory_test",
        "rule": "scripts\\check_cory_test.bat $ARG1$ $ARG2$ $ARG3$",
        "type": "scripts"
      },
      {
        "name": "check_theo_test",
        "rule": "scripts\\check_theo.exe $ARG1$",
        "type": "scripts"
      }
    ]';
  }
#+END_SRC

#+RESULTS:
#+begin_example
R: merged: [
  {
    "name": "check_ntp_time",
    "rule": "scripts\\check_windows_time.bat $ARG1$ $ARG2$ $ARG3$",
    "type": "scripts"
  },
  {
    "name": "check_disk",
    "rule": "scripts\\diskspace_nrpe_nt.exe $ARG1$",
    "type": "scripts"
  },
  {
    "name": "check_shadowcopy_status",
    "rule": "cmd /c echo scripts\\check_cdphp_shadowcopy_status.ps1 $ARG1$; exit($LastExitCode) | powershell.exe -command -",
    "type": "scripts"
  },
  {
    "name": "check_cory_test",
    "rule": "scripts\\check_cory_test.bat $ARG1$ $ARG2$ $ARG3$",
    "type": "scripts"
  },
  {
    "name": "check_theo_test",
    "rule": "scripts\\check_theo.exe $ARG1$",
    "type": "scripts"
  }
]
R: Rendered to desired format
check_ntp_time=scripts\check_windows_time.bat $ARG1$ $ARG2$ $ARG3$
check_disk=scripts\diskspace_nrpe_nt.exe $ARG1$
check_shadowcopy_status=cmd /c echo scripts\check_cdphp_shadowcopy_status.ps1 $ARG1$; exit($LastExitCode) | powershell.exe -command -
check_cory_test=scripts\check_cory_test.bat $ARG1$ $ARG2$ $ARG3$
check_theo_test=scripts\check_theo.exe $ARG1$

#+end_example
** Inheriting calling bundles classes

#+NAME: examples/usebundle_inherit_context.cf
#+CAPTION: examples/usebundle_inherit_context.cf
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle ./examples/usebundle_inherit_context.cf
  bundle agent parent
  {
    classes:
        "parent_1" scope => "bundle";

    methods:
        "Inherit context"
          usebundle => child( "First"),
          inherit => "true";

        "No context inheritance"
          usebundle => child( "Second");
  }
  bundle agent child( id_string )
  {
    reports:
      parent_1::
        "$(id_string) see class parent_1 defined";
      !parent_1::
        "$(id_string) see class parent_1 NOT defined";
  }
  bundle agent __main__ { methods: "parent"; }
#+END_SRC

#+REVEAL: split

#+RESULTS: examples/usebundle_inherit_context.cf
: R: First see class parent_1 defined
: R: Second see class parent_1 NOT defined
** Bundles can return data

#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :extra-opts --show-evaluated-vars=parent
  bundle agent parent
  {

    methods:
       "Get data returned by bundle"
          usebundle => my_bundle,
          useresult => "my_returned_vars";


  }
  bundle agent my_bundle
  {
    reports:
        "Hello world" bundle_return_value_index => "msg";
        "Something" bundle_return_value_index => "1";
  }
  bundle agent __main__ { methods: "parent"; }
#+END_SRC

#+RESULTS:
: Variable name                            Variable value                                               Meta tags
: default:parent.my_returned_vars[1]       Something                                                    source=bundle
: default:parent.my_returned_vars[msg]     Hello world                                                  source=bundle
** Tracking files for change (Tripwire/AIDE)

multiple ways of achieving this with CFEngine, there are many useful functions, =lsdir()=, =findfiles()=, =filestat()=, =file_hash()= all come to mind. However, did you know that CFEngine has some native functionality kind of like AIDE or Tripwire?

You can use the /changes/ attribute can be used on a files promise to help with this sort of tracking. The changes attribute can record and update file stats and digests. [[https://cfengine.com/company/blog-detail/cfengine-3-15-lts-released/#FileIntegrityMonitoring][CFEngine Enterprise can even report back diffs of the specific content changes]].

#+CAPTION: Example tracking changes to a directory
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle /tmp/example_action_on_dir_change.cf
  bundle agent example_action_on_dir_change
  {
    files:
        "/tmp/$(this.bundle)/"
          changes => detect_all_change,
          classes => results( "bundle", "_changes_$(this.promiser)");

    reports:
        "Classes prefixed with _changes:$(const.n)$(with)"
          with => join( "$(const.t)$(const.n)", classesmatching( "_changes.*"));
  }
  bundle agent __main__
  {
    methods:
        "example_action_on_dir_change";
  }
  #+END_SRC

 #+CAPTION: Illustration of change tracking with a directory
 #+begin_src sh :results output :exports both
   exec 2>&1
   echo "Resetting Observations"
   rm -rf /tmp/example_action_on_dir_change
   rm -rf ~/.cfagent/state/cf_changes.lmdb*
   rm -rf ~/.cfagent/state/nova_diff.log
   rm -rf ~/.cfagent/state/file_changes.log
   cf-agent --version

   echo "\nFirst observation of directory"
   mkdir -p /tmp/example_action_on_dir_change/subdir0
   touch /tmp/example_action_on_dir_change/file0
   mkdir -p /tmp/example_action_on_dir_change
   cf-agent -Kf /tmp/example_action_on_dir_change.cf

   echo "\nSubsequent agent run, no changes since last run"
   cf-agent -Kf /tmp/example_action_on_dir_change.cf

   echo "\nSubsequent agent run, change stats on existing file in top level"
   touch /tmp/example_action_on_dir_change/file0
   cf-agent -Kf /tmp/example_action_on_dir_change.cf

   echo "\nSubsequent agent run, change content in existing file in top level"
   echo "Cha cha cha changes ..." > /tmp/example_action_on_dir_change/file0
   cf-agent -Kf /tmp/example_action_on_dir_change.cf

   echo "\nSubsequent agent run, new file in top level"
   touch /tmp/example_action_on_dir_change/file1
   cf-agent -Kf /tmp/example_action_on_dir_change.cf

   echo "\nSubsequent agent run, new file in existing subdir"
   touch /tmp/example_action_on_dir_change/subdir0/file2
   cf-agent -Kf /tmp/example_action_on_dir_change.cf

   echo "\nSubsequent agent run, new subdir in existing subdir"
   mkdir -p /tmp/example_action_on_dir_change/subdir1
   cf-agent -Kf /tmp/example_action_on_dir_change.cf

   :
#+end_src

#+RESULTS:
#+begin_example
Resetting Observations
CFEngine Core 3.17.0
CFEngine Enterprise 3.17.0

First observation of directory
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change__repaired
_changes__tmp_example_action_on_dir_change__kept
_changes__tmp_example_action_on_dir_change__reached

Subsequent agent run, no changes since last run
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change__kept
_changes__tmp_example_action_on_dir_change__reached

Subsequent agent run, change stats on existing file in top level
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change__kept
_changes__tmp_example_action_on_dir_change__reached

Subsequent agent run, change content in existing file in top level
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change__kept
_changes__tmp_example_action_on_dir_change__reached

Subsequent agent run, new file in top level
  notice: Last modified time for '/tmp/example_action_on_dir_change/' changed 'Tue Mar  9 09:24:21 2021' -> 'Tue Mar  9 09:24:23 2021'
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change__repaired
_changes__tmp_example_action_on_dir_change__kept
_changes__tmp_example_action_on_dir_change__reached

Subsequent agent run, new file in existing subdir
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change__kept
_changes__tmp_example_action_on_dir_change__reached

Subsequent agent run, new subdir in existing subdir
  notice: Last modified time for '/tmp/example_action_on_dir_change/' changed 'Tue Mar  9 09:24:23 2021' -> 'Tue Mar  9 09:24:24 2021'
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change__repaired
_changes__tmp_example_action_on_dir_change__kept
_changes__tmp_example_action_on_dir_change__reached
#+end_example

As  you can see from the output above, if the directory changes you can get a repaired result on the files promise. You might ask what was repaired when you are just monitoring for changes, ... the state database. You can choose to not update the state db when differences are noticed (more typical for AIDE or Tripwire) but that is atypical in my experience with CFEngine.

You might also notice the example above is only watching the directory itself, it's not doing recursion. Monitoring a tree recursively can get expensive, but it's doable. Here is a modified example illustrating monitoring a directory recursively for changes.

#+CAPTION: Example tracking changes to all files in a directory recursively
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle /tmp/example_action_on_dir_change_all_files_recursively.cf
  bundle agent example_action_on_dir_change_all_files_recursively
  {
    files:
        "/tmp/$(this.bundle)/"
          depth_search => recurse( inf ),
          file_select => all,
          changes => detect_all_change,
          classes => results( "bundle", "_changes_$(this.promiser)");

    reports:
        "Classes prefixed with _changes:$(const.n)$(with)"
          with => join( "$(const.t)$(const.n)", classesmatching( "_changes.*"));

  }
  bundle agent __main__
  {
    methods:
        "example_action_on_dir_change_all_files_recursively";
  }
  #+END_SRC


 #+CAPTION: Illustration of change tracking with a directory recursively
 #+begin_src sh :results output :exports both
   exec 2>&1
   echo "Resetting Observations"
   rm -rf /tmp/example_action_on_dir_change_all_files_recursively
   rm -rf ~/.cfagent/state/cf_changes.lmdb*
   rm -rf ~/.cfagent/state/nova_diff.log
   rm -rf ~/.cfagent/state/file_changes.log
   cf-agent --version

   echo "\nFirst observation of directory"
   mkdir -p /tmp/example_action_on_dir_change_all_files_recursively/subdir0
   touch /tmp/example_action_on_dir_change_all_files_recursively/file0
   mkdir -p /tmp/example_action_on_dir_change_all_files_recursively
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively.cf

   echo "\nSubsequent agent run, no changes since last run"
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively.cf

   echo "\nSubsequent agent run, change stats on existing file in top level"
   touch /tmp/example_action_on_dir_change_all_files_recursively/file0
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively.cf

   echo "\nSubsequent agent run, change content in existing file in top level"
   echo "Cha cha cha changes ..." > /tmp/example_action_on_dir_change_all_files_recursively/file0
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively.cf

   echo "\nSubsequent agent run, new file in top level"
   touch /tmp/example_action_on_dir_change_all_files_recursively/file1
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively.cf

   echo "\nSubsequent agent run, new file in existing subdir"
   touch /tmp/example_action_on_dir_change_all_files_recursively/subdir0/file2
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively.cf

   echo "\nSubsequent agent run, new subdir in existing subdir"
   mkdir -p /tmp/example_action_on_dir_change_all_files_recursively/subdir1
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively.cf

   :
#+end_src

#+RESULTS:
#+begin_example
Resetting Observations
CFEngine Core 3.17.0
CFEngine Enterprise 3.17.0

First observation of directory
  notice: New file '/tmp/example_action_on_dir_change_recursively/file0' found
  notice: New file '/tmp/example_action_on_dir_change_recursively/subdir0' found
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change_recursively__repaired
_changes__tmp_example_action_on_dir_change_recursively__reached
_changes__tmp_example_action_on_dir_change_recursively_subdir0_repaired
_changes__tmp_example_action_on_dir_change_recursively_subdir0_kept
_changes__tmp_example_action_on_dir_change_recursively_subdir0_reached
_changes__tmp_example_action_on_dir_change_recursively_file0_repaired
_changes__tmp_example_action_on_dir_change_recursively_file0_kept
_changes__tmp_example_action_on_dir_change_recursively_file0_reached

Subsequent agent run, no changes since last run
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change_recursively__kept
_changes__tmp_example_action_on_dir_change_recursively__reached
_changes__tmp_example_action_on_dir_change_recursively_subdir0_kept
_changes__tmp_example_action_on_dir_change_recursively_subdir0_reached
_changes__tmp_example_action_on_dir_change_recursively_file0_kept
_changes__tmp_example_action_on_dir_change_recursively_file0_reached

Subsequent agent run, change stats on existing file in top level
  notice: Last modified time for '/tmp/example_action_on_dir_change_recursively/file0' changed 'Tue Mar  9 09:50:10 2021' -> 'Tue Mar  9 09:50:11 2021'
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change_recursively__repaired
_changes__tmp_example_action_on_dir_change_recursively__reached
_changes__tmp_example_action_on_dir_change_recursively_subdir0_kept
_changes__tmp_example_action_on_dir_change_recursively_subdir0_reached
_changes__tmp_example_action_on_dir_change_recursively_file0_repaired
_changes__tmp_example_action_on_dir_change_recursively_file0_kept
_changes__tmp_example_action_on_dir_change_recursively_file0_reached

Subsequent agent run, change content in existing file in top level
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change_recursively__repaired
_changes__tmp_example_action_on_dir_change_recursively__reached
_changes__tmp_example_action_on_dir_change_recursively_subdir0_kept
_changes__tmp_example_action_on_dir_change_recursively_subdir0_reached
_changes__tmp_example_action_on_dir_change_recursively_file0_repaired
_changes__tmp_example_action_on_dir_change_recursively_file0_kept
_changes__tmp_example_action_on_dir_change_recursively_file0_reached

Subsequent agent run, new file in top level
  notice: New file '/tmp/example_action_on_dir_change_recursively/file1' found
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change_recursively__repaired
_changes__tmp_example_action_on_dir_change_recursively__reached
_changes__tmp_example_action_on_dir_change_recursively_file1_repaired
_changes__tmp_example_action_on_dir_change_recursively_file1_kept
_changes__tmp_example_action_on_dir_change_recursively_file1_reached
_changes__tmp_example_action_on_dir_change_recursively_subdir0_kept
_changes__tmp_example_action_on_dir_change_recursively_subdir0_reached
_changes__tmp_example_action_on_dir_change_recursively_file0_kept
_changes__tmp_example_action_on_dir_change_recursively_file0_reached

Subsequent agent run, new file in existing subdir
  notice: New file '/tmp/example_action_on_dir_change_recursively/subdir0/file2' found
  notice: Last modified time for '/tmp/example_action_on_dir_change_recursively/subdir0' changed 'Tue Mar  9 09:50:10 2021' -> 'Tue Mar  9 09:50:12 2021'
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change_recursively_file1_kept
_changes__tmp_example_action_on_dir_change_recursively_file1_reached
_changes__tmp_example_action_on_dir_change_recursively_subdir0_repaired
_changes__tmp_example_action_on_dir_change_recursively_subdir0_kept
_changes__tmp_example_action_on_dir_change_recursively_subdir0_reached
_changes__tmp_example_action_on_dir_change_recursively__repaired
_changes__tmp_example_action_on_dir_change_recursively__reached
_changes__tmp_example_action_on_dir_change_recursively_subdir0_file2_repaired
_changes__tmp_example_action_on_dir_change_recursively_subdir0_file2_kept
_changes__tmp_example_action_on_dir_change_recursively_subdir0_file2_reached
_changes__tmp_example_action_on_dir_change_recursively_file0_kept
_changes__tmp_example_action_on_dir_change_recursively_file0_reached

Subsequent agent run, new subdir in existing subdir
  notice: New file '/tmp/example_action_on_dir_change_recursively/subdir1' found
R: Classes prefixed with _changes:
_changes__tmp_example_action_on_dir_change_recursively__repaired
_changes__tmp_example_action_on_dir_change_recursively__reached
_changes__tmp_example_action_on_dir_change_recursively_file1_kept
_changes__tmp_example_action_on_dir_change_recursively_file1_reached
_changes__tmp_example_action_on_dir_change_recursively_subdir1_repaired
_changes__tmp_example_action_on_dir_change_recursively_subdir1_kept
_changes__tmp_example_action_on_dir_change_recursively_subdir1_reached
_changes__tmp_example_action_on_dir_change_recursively_subdir0_kept
_changes__tmp_example_action_on_dir_change_recursively_subdir0_reached
_changes__tmp_example_action_on_dir_change_recursively_subdir0_file2_kept
_changes__tmp_example_action_on_dir_change_recursively_subdir0_file2_reached
_changes__tmp_example_action_on_dir_change_recursively_file0_kept
_changes__tmp_example_action_on_dir_change_recursively_file0_reached
#+end_example

In the examples above I used =$(this.promiser)= so that I would get a class for each file. If you don't need the detail, you could use something static.

#+CAPTION: Example tracking changes to all files in a directory recursively with fewer classes
#+BEGIN_SRC cfengine3 :include-stdlib t :log-level info :exports both :tangle /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes.cf
  bundle agent example_action_on_dir_change_all_files_recursively_with_fewer_classes
  {
    files:
        "/tmp/$(this.bundle)/"
          depth_search => recurse( inf ),
          file_select => all,
          changes => detect_all_change,
          classes => results( "bundle", "i_see_changes");

    reports:
        "Classes prefixed with _changes:$(const.n)$(with)"
          with => join( "$(const.t)$(const.n)", classesmatching( "i_see_changes.*"));

  }
  bundle agent __main__
  {
    methods:
        "example_action_on_dir_change_all_files_recursively_with_fewer_classes";
  }
  #+END_SRC

#+CAPTION: Illustration of change tracking with a directory recursively
#+begin_src sh :results output :exports both
   exec 2>&1
   echo "Resetting Observations"
   rm -rf /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes
   rm -rf ~/.cfagent/state/cf_changes.lmdb*
   rm -rf ~/.cfagent/state/nova_diff.log
   rm -rf ~/.cfagent/state/file_changes.log
   cf-agent --version

   echo "\nFirst observation of directory"
   mkdir -p /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/subdir0
   touch /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/file0
   mkdir -p /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes.cf

   echo "\nSubsequent agent run, no changes since last run"
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes.cf

   echo "\nSubsequent agent run, change stats on existing file in top level"
   touch /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/file0
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes.cf

   echo "\nSubsequent agent run, change content in existing file in top level"
   echo "Cha cha cha changes ..." > /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/file0
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes.cf

   echo "\nSubsequent agent run, new file in top level"
   touch /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/file1
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes.cf

   echo "\nSubsequent agent run, new file in existing subdir"
   touch /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/subdir0/file2
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes.cf

   echo "\nSubsequent agent run, new subdir in existing subdir"
   mkdir -p /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/subdir1
   cf-agent -Kf /tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes.cf

   :
#+end_src

#+RESULTS:
#+begin_example
Resetting Observations
CFEngine Core 3.17.0
CFEngine Enterprise 3.17.0

First observation of directory
  notice: New file '/tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/file0' found
  notice: New file '/tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/subdir0' found
R: Classes prefixed with _changes:
i_see_changes_repaired
i_see_changes_kept
i_see_changes_reached

Subsequent agent run, no changes since last run
R: Classes prefixed with _changes:
i_see_changes_kept
i_see_changes_reached

Subsequent agent run, change stats on existing file in top level
  notice: Last modified time for '/tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/file0' changed 'Tue Mar  9 09:59:04 2021' -> 'Tue Mar  9 09:59:05 2021'
R: Classes prefixed with _changes:
i_see_changes_repaired
i_see_changes_kept
i_see_changes_reached

Subsequent agent run, change content in existing file in top level
R: Classes prefixed with _changes:
i_see_changes_repaired
i_see_changes_kept
i_see_changes_reached

Subsequent agent run, new file in top level
  notice: New file '/tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/file1' found
R: Classes prefixed with _changes:
i_see_changes_repaired
i_see_changes_kept
i_see_changes_reached

Subsequent agent run, new file in existing subdir
  notice: New file '/tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/subdir0/file2' found
  notice: Last modified time for '/tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/subdir0' changed 'Tue Mar  9 09:59:04 2021' -> 'Tue Mar  9 09:59:06 2021'
R: Classes prefixed with _changes:
i_see_changes_repaired
i_see_changes_kept
i_see_changes_reached

Subsequent agent run, new subdir in existing subdir
  notice: New file '/tmp/example_action_on_dir_change_all_files_recursively_with_fewer_classes/subdir1' found
R: Classes prefixed with _changes:
i_see_changes_repaired
i_see_changes_kept
i_see_changes_reached
#+end_example

* Tips
:PROPERTIES:
:ID:       1b3901a6-ecaa-4da9-8f05-133827bb92bb
:END:
** Use the tools!
** Use an editor with syntax highlighting
** Use the docs
:PROPERTIES:
:ID:       7d8d9121-6468-4bed-b1c7-9ff1082476ee
:END:
- Masterfiles Policy Framework (MPF)
- Function Reference
** Syntax Checking
:PROPERTIES:
:ID:       78de2122-05f5-4ebe-bce5-1c616e22faf3
:END:

#+Caption: Full Syntax Check
#+BEGIN_SRC shell
cf-promises --eval-functions=yes --full-check \
  -f ./examples/00-01-hello_world.cf
#+END_SRC

- Full check requires =body common control= (or =bundle agent main=). Typically this is only used when you run cf-promsies against =promises.cf=, =update.cf=, or =standalone_self_upgrade.cf=
- *NOTE: This is context sensitive/aware*

#+REVEAL: split

#+Caption: Partial Syntax Check
#+BEGIN_SRC shell
cf-promises -f ./examples/00-01-hello_world.cf
#+END_SRC

Build into your workflow!
- Editors
- vcs hooks
- build systems

#+CAPTION: Speaker Notes
#+begin_notes
  # TODO move this slide? body common control not introduced?

  Its typical to wire full policy syntax checks into pre-commit hooks or have
  them run by a continuous integration system like Jenkins.

  Partial checks are useful to run while developing policy, and depending on the
  editor, you may be able to do this as a save hook.
#+end_notes
** =noshell= vs =useshell= for =commands= type promises, =execresult()=, and =returnszero()=

#+CAPTION: Speaker Notes
#+begin_notes
As a general rule of thumb I prefer to use =noshell=. I try to only =useshell=
if it's required. Running a command with a shell requires more resources.
However using a shell does provide some additional functionality.

Additionally as a general rule you should not be making changes to the system
using =execresult()= or =returnszero()=. The functions are intended to be used
for discovery. As with most rules, there are times when it would make sense to
run a script that changes the system from one of these functions, but I can't
think of any off the top of my head.
#+end_notes

- =useshell= allows you to use pipelines

#+BEGIN_COMMENT
TODO
(the following example doesn't fit on the page in the PDF)
#+END_COMMENT

#+BEGIN_SRC cfengine3
bundle agent main
{

  vars:
      "result_with_shell"
        string => execresult( "/bin/echo 'Hello$(const.n) World' | grep Hello", useshell);

    reports:
      "$(result_with_shell)";
}
#+END_SRC

#+RESULTS:
: R: Hello

#+REVEAL: split

- =useshell= allows you to redirect output

#+BEGIN_COMMENT
TODO
(the following example doesn't fit on the page in the PDF)
#+END_COMMENT

#+BEGIN_SRC cfengine3
bundle agent main
{

  classes:

      "successfully_executed"
        expression => returnszero( "/bin/echo 'Hello$(const.n) World' | grep -i world > $(this.promise_filename).out ", useshell);

    reports:
      successfully_executed::
      "Successfully Executed";
      "Grep found: "
        printfile => cat( "$(this.promise_filename).out" );
}
#+END_SRC

#+RESULTS:
: R: Successfully Executed
: R: Grep found:
: R:  World

#+REVEAL: split

- =useshell= allows you to use unqualified commands

#+BEGIN_COMMENT
TODO
(the following example doesn't fit on the page in the PDF)
#+END_COMMENT

#+BEGIN_SRC cfengine3
bundle agent main
{

    vars:

      # Note that echo is not fully qualified. That's because it picked it up
      # from the shells PATH

      "result"
        string => execresult( "echo 'Hello World'", useshell);

    reports:
      "Result: $(result)";
}
#+END_SRC

#+RESULTS:
: R: Result: Hello World
** Debug Reports
:PROPERTIES:
:ID:       a5a29f9c-1a23-4249-b21c-4644fdbe6172
:END:

Use standardized =DEBUG= reports for policy development and troubleshooting.

#+BEGIN_SRC cfengine3
bundle agent main
{
  reports:
    DEBUG|DEBUG_this_bundle_name::
      "DEBUG $(this.bundle): ....";
    "DEBUG|DEBUG_$(this.bundle)"::
      "DEBUG $(this.bundle): ....";
 }
#+END_SRC

** Promise comments
:PROPERTIES:
:ID:       d3a98695-f6a2-409f-9530-03530d6cb58c
:END:

Use promise comments to document *WHY* the promise is important.

#+BEGIN_SRC cfengine3
bundle agent main
{
  services:
    "firewalld"
      policy => "start",
      comment => "If this service isnt running, then we have unnecessary
                  exposure and increase our risk of a security breach.";
}
#+END_SRC

** ~jq~
#+CAPTION: Speaker Notes
#+begin_notes
- sed and awk for JSON
#+end_notes

#+NAME: json
#+begin_src sh :wrap "src json" :exports output :results output
echo '{
  "data": [
    {
      "firstseen": "1578745699",
      "hostname": "host001.example.com",
      "id": "SHA=e01f65d069b9035c280ea0bdba6cf6e47863ac074a170addbad26e98cc89925c",
      "ip": "192.0.2.2",
      "lastreport": "1582643957"
    },
    {
      "firstseen": "1578745692",
      "hostname": "hub.example.com",
      "id": "SHA=70138d580b9fd292ff856746df2fe7f9ded29db9ffca0c4d83acbbb97cde4d42",
      "ip": "192.0.2.1",
      "lastreport": "1582643974"
    }
  ],
  "meta": {
    "count": 2,
    "page": 1,
    "timestamp": 1582644064,
    "total": 7
  }
}'
#+end_src

#+RESULTS: json
#+begin_src json
{
  "data": [
    {
      "firstseen": "1578745699",
      "hostname": "host001.example.com",
      "id": "SHA=e01f65d069b9035c280ea0bdba6cf6e47863ac074a170addbad26e98cc89925c",
      "ip": "192.0.2.1",
      "lastreport": "1582643957"
    },
    {
      "firstseen": "1578745692",
      "hostname": "hub.example.com",
      "id": "SHA=70138d580b9fd292ff856746df2fe7f9ded29db9ffca0c4d83acbbb97cde4d42",
      "ip": "104.236.18.209",
      "lastreport": "1582643974"
    }
  ],
  "meta": {
    "count": 2,
    "page": 1,
    "timestamp": 1582644064,
    "total": 7
  }
}
#+end_src

#+REVEAL: split

#+NAME: comma-seperated-list-of-ips-from-hostlist
#+CAPTION: Extract a list of IPs from HOST API response
#+BEGIN_SRC sh :var INPUT=json :results output :wrap "src json" :exports both :cached t
  echo $INPUT  | jq '.data | map(.ip) | join(",")'
#+END_SRC

#+RESULTS: comma-seperated-list-of-ips-from-hostlist
#+begin_src json
192.0.2.2,192.0.2.1
#+end_src

** ~cf-runagent~
:PROPERTIES:
:ID:       1e8e4f3b-bfce-4daa-bba3-fa9dc504010e
:REF:      [[id:ca603899-25c7-4cac-bea2-a9824a32ce6e][Example illustrating using cf-runagent to run a bundle on hosts based on reported classes in CFEngine Enterprise]]
:END:

#+CAPTION: Run policy on all hosts reporting =not_rh_satellite_registered=
#+BEGIN_SRC sh :results output :exports both :cached t
  cf-runagent --background=3 --remote-bundles satellite_registration \
    -H $(curl -s -k --user $USER:$PASSWORD \
    https://$HUB/api/host\?count\=2\&context-include\=not_rh_satellite_registered |\
    jq '.data | map(.ip) | join(",")'|tr -d '"')
#+END_SRC

#+CAPTION: Speaker Notes
#+begin_notes
Note: The host where cf-runagent is executed from *must* already have trust established.

#+end_notes

* Additional Resources
:PROPERTIES:
:ID:       1f6c0380-eca8-4b00-a54d-33621f881e3f
:END:
- [[https://build.cfengine.com][CFEngine Build]] :: An index of CFEngine related content. Share your content and consume others!
- [[https://cf-learn.info/][Learning CFEngine]] :: Widely considered best book to get a good grounding in CFEngine.
- [[http://www.cfenginetutorial.org/][CFEngine Tutorial]] :: Training material published by Aleksey Tsalolikhin from Vertical Sysadmin, one of our partners.
- [[https://www.cfenginetutorial.org][VSA Training Material]] :: Self paced in depth tutorial based on Vertical Sysadmin training coursework
- [[https://github.com/nickanderson/example-a10042][Example Policy Layout]] :: An example policy layout
- [[https://github.com/syl20bnr/spacemacs/tree/master/layers/%252Btools/cfengine][CFEngine Spacemacs Layer]] :: The best editor is neither Emacs nor Vim, it's Emacs and Vim!
- [[https://github.com/cfengine/core/tree/master/contrib/cf-locate][=cf-locate=]] :: Find and optionally display body and bundle definitions within a policy set
- [[https://docs.cfengine.com/docs/3.15/guide-writing-and-serving-policy-policy-style.html][Policy Style Guide]] :: Write policy in a common style. Make it easier for others to quickly digest your policy.

#+REVEAL: split

- [[https://github.com/cfengineers-net/cf-keycrypt][=cf-keycrypt=]] :: Tool to encrypt data with CFEngine public keys (in core as of 3.16.0)
  - Allows to encrypt data for individual hosts using the public key
  - Can be used with non host keys for "group" encryption
- [[http://www.cfengineers.net/downloads/cfengine-tools-and-utilities/][=cf-profile=]] :: Displays execution time summary for cf-agent run to find time consuming polices
- [[https://github.com/neilhwatson/vim_cf3][=vim_cf3=]] :: CFEngine 3 vim plugin with Syntax highlighting
- [[https://github.com/cfengine/core/blob/master/contrib/reindent.pl][=reindent.pl=]] :: Re-indent CFEngine policy using this script that leverages the excellent cfengine3 mode in Emacs
- [[https://github.com/naksu/cfengine_beautifier][Sublime Text 3 CFEngine Beautifier]] :: Automatically reformat CFEngine policy in Sublime Text
- [[https://github.com/lastops/sublime-cfengine][Sublime Text 3 Syntax Highlighter & Snippets]] :: CFEngine Syntax highlighting and snippets for Sublime Text

#+REVEAL: split

- [[https://github.com/lpefferkorn/cfe-rsplaytime][=cfe-rsplaytime=]]  :: Compute splaytime for a given host
- [[https://github.com/lpefferkorn/cfe-profiler][=cfe-profiler=]] :: Measures bundle execution time helping to uncover the most time consuming bundles
- [[https://cfengine.com/cfengine-code-editors/][Editor support for CFEngine]] :: A list of editors with references for making working with cfengine syntax easier
- [[https://www.youtube.com/watch?v=zviHfjKz1nM&t=6s&list=PLh71Vl9YjMajsWxT8zQuRKEPwosG9HdzV&index=2][CFEngine in a Day]] :: Old, but still good 4 part video series ~ 5 hours of [[https://en.wikipedia.org/wiki/Mark_Burgess_(computer_scientist)][Mark Burgess]] (original author and founder) giving a one day training at [[https://www.surf.nl/en/about-surf/subsidiaries/surfsara/][SurfSara]]
- [[http://www.cfenginetutorial.org/][CFEngine Tutorial]] :: Training material published by Aleksey Tsalolikhin from Vertical Sysadmin, one of our partners.
- [[https://docs.cfengine.com/docs/3.12/guide-faq.html][General FAQs]] :: Frequently asked questions
- [[https://docs.cfengine.com/docs/3.12/enterprise-cfengine-guide-hub_administration.html][Hub Admin FAQ]] :: Frequently asked questions about CFEngine Enterprise Hub administration

* Wrapping up
:PROPERTIES:
:ID:       4578b68f-7110-4106-9826-07d4f6d8e143
:END:

Please take a few moments to [[https://www.surveymonkey.com/r/CFEngine-Training][fill out this survey]] about your experience: https://www.surveymonkey.com/r/CFEngine-Training
* Appendix
* Git Primer
:PROPERTIES:
:ID:       8980313e-65a6-4d8b-a616-3e77b77e059e
:END:

** Git
:PROPERTIES:
:ID:       60e8c549-6a49-4d10-8fdc-7943b8895b0f
:END:
Git is the most popular modern version control management tool. [[https://github.com][Github]],
[[https://bitbucket.org][Bitbucket]], and [[https://gitlab.com][GitLab]] all provide great hosted and on prem repository management
solutions.

Using a git management system is reccomended for implementing access controls
and improved collaboration with regard to policy and systems management.

#+CAPTION: Speaker Notes
#+begin_notes
  CFEngine Enterprise tooling works with git out of the box. If you don't want
  to use git the tooling is easily customized to support any version control
  system.
#+end_notes

** Getting started
:PROPERTIES:
:ID:       1c6d3b1e-9189-420c-a80b-4ed581eca528
:END:
Log into the policy server

#+BEGIN_EXAMPLE
  [user@workstation] $ vagrant ssh hub
  [vagrant@hub] $ sudo -i
#+END_EXAMPLE

Configure git author

#+BEGIN_COMMENT
TODO
(the following example doesn't fit on the page in the PDF)
#+END_COMMENT

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # git config -–global user.name “Mr. Slate”
  [root@hub masterfiles] # git config -–global user.email “bossman@slateco.com”
  [root@hub masterfiles] # git config --global push.default simple
#+END_EXAMPLE

** Clone builtin repository
:PROPERTIES:
:ID:       0fc590cd-54a2-4b11-91e7-dc06653d12e0
:END:

#+BEGIN_COMMENT
TODO
(the following example doesn't fit on the page in the PDF)
#+END_COMMENT

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # git clone /opt/cfengine/masterfiles.git /vagrant/masterfiles
  Cloning into '/vagrant/masterfiles'...
#+END_EXAMPLE

#+CAPTION: Speaker Notes
#+begin_notes
  When an Enterprise hub is installed, a git repository is seeded with the stock
  Masterfiles Policy Framework for that release. It provides an easy place to
  play around with git and get setarted.
#+end_notes

** Add a file to the repository
:PROPERTIES:
:ID:       dc014f99-e08c-4000-adb3-771a898428ed
:END:

#+BEGIN_COMMENT
TODO
(the following example doesn't fit on the page in the PDF)
#+END_COMMENT

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # cd /vagrant/masterfiles
  [root@hub masterfiles] # ls
  cfe_internal  Changelog  controls  def.cf  lessons  lib  libraries  promises.cf  services  sketches  update  update.cf
  [root@hub masterfiles] # echo hi > file
  [root@hub masterfiles] # git status
  # On branch master
  # Untracked files:
  #   (use "git add <file>..." to include in what will be committed)
  #
  #	file
  nothing added to commit but untracked files present (use "git add" to track)
#+END_EXAMPLE

** Stage and commit the changes
:PROPERTIES:
:ID:       af76a43e-5f72-48d8-b41d-4651e789f6b6
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # git add file
  [root@hub masterfiles] # git status
  # On branch master
  # Changes to be committed:
  #   (use "git reset HEAD <file>..." to unstage)
  #
  #	new file:   file
  #
  # git commit -m “Testing git workflow”
  [master c886caf] Testing git workflow
   0 files changed, 0 insertions(+), 0 deletions(-)
   create mode 100644 file
#+END_EXAMPLE

** Publish the change
:PROPERTIES:
:ID:       40a49bb0-202c-417f-bae6-af7fcf02b63a
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # git status
  # On branch master
  # Your branch is ahead of 'origin/master' by 1 commit.
  #
  nothing to commit (working directory clean)
  [root@hub masterfiles] # git push
  Counting objects: 4, done.
  Delta compression using up to 2 threads.
  Compressing objects: 100% (2/2), done.
  Writing objects: 100% (3/3), 280 bytes, done.
  Total 3 (delta 1), reused 0 (delta 0)
  Unpacking objects: 100% (3/3), done.
  To /opt/cfengine/masterfiles.git
     ee31801..94b8151  master -> master
  # git status
  # On branch master
  nothing to commit (working directory clean)
#+END_EXAMPLE

** Modify a file
:PROPERTIES:
:ID:       f2e1db3c-e8d3-4383-b4cd-3ca30859f203
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # echo HI >> file
  [root@hub masterfiles] # git status
  # On branch master
  # Your branch is ahead of 'origin/master' by 1 commit.
  #
  # Changed but not updated:
  #   (use "git add <file>..." to update what will be committed)
  #   (use "git checkout -- <file>..." to discard changes in working directory)
  #
  #	modified:   file
  #
  no changes added to commit (use "git add" and/or "git commit -a")
#+END_EXAMPLE

** Diff to validate detail of content change
:PROPERTIES:
:ID:       f21892a0-120f-4afb-b682-109d60993a61
:END:

#+BEGIN_EXAMPLE
    [root@hub masterfiles] # git diff
    diff --git a/file b/file
    index 45b983b..313352b 100644
    --- a/file
    +++ b/file
    @@ -1 +1,2 @@
     hi
    +HI
#+END_EXAMPLE

** Stage and commit the changes
:PROPERTIES:
:ID:       a9fa607f-a1d6-4c65-9f8d-63eff10b765d
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # git add file
  [root@hub masterfiles] # git status
  # On branch master
  # Your branch is ahead of 'origin/master' by 1 commit.
  #
  # Changes to be committed:
  #   (use "git reset HEAD <file>..." to unstage)
  #
  #	modified:   file
  #
  # git commit -m "Modified file"
  [master fd94885] Modified file
   1 files changed, 1 insertions(+), 0 deletions(-)
  # git status
  # On branch master
  # Your branch is ahead of 'origin/master' by 1 commits.
  #
  nothing to commit (working directory clean)
#+END_EXAMPLE

** Publish the change
:PROPERTIES:
:ID:       749f73cb-553e-4356-a2ed-81d5b731ee51
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # git push
  Counting objects: 7, done.
  Delta compression using up to 2 threads.
  Compressing objects: 100% (4/4), done.
  Writing objects: 100% (5/5), 493 bytes, done.
  Total 5 (delta 2), reused 0 (delta 0)
  Unpacking objects: 100% (5/5), done.
  To /opt/cfengine/masterfiles.git
     c886caf..fd94885  master -> master
#+END_EXAMPLE

** Remove a file
:PROPERTIES:
:ID:       90d60450-fbb2-4493-8b4e-d5dc7e2dc027
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # git rm file
  # rm 'file'
  [root@hub masterfiles] # git status
  # On branch master
  # Changes to be committed:
  #   (use "git reset HEAD <file>..." to unstage)
  #
  #	deleted:    file
  #
  # git commit -m "Remove file"
  [master 4c9d46d] Remove file
   1 files changed, 0 insertions(+), 3 deletions(-)
   delete mode 100644 file
#+END_EXAMPLE

** Publish the change
:PROPERTIES:
:ID:       6e18b671-4717-46df-8fd6-f83909e4b811
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # git push
  Counting objects: 3, done.
  Delta compression using up to 2 threads.
  Compressing objects: 100% (2/2), done.
  Writing objects: 100% (2/2), 230 bytes, done.
  Total 2 (delta 1), reused 0 (delta 0)
  Unpacking objects: 100% (2/2), done.
  To /opt/cfengine/masterfiles.git
     92660a9..4c9d46d  master -> master
#+END_EXAMPLE

** Place masterfiles into the repository
:PROPERTIES:
:ID:       6734a7c7-ac82-4b99-90c2-3490bffbdd9b
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles] # rsync -avz /var/cfengine/masterfiles/ .
  [root@hub masterfiles] # git add -A
  [root@hub masterfiles] # git commit -m "Seed repository with masterfiles"
  [root@hub masterfiles] # git push
#+END_EXAMPLE

** Configure masterfiles for git integration
:PROPERTIES:
:ID:       2a44d62e-cfa3-4247-a762-9cb02431ed72
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles]# echo '{ "classes": { "cfengine_internal_masterfiles_update": [ "policy_server" ] } }' > def.json
  [root@hub masterfiles]# git add def.json
  [root@hub masterfiles]# git commit -m "Enable automatic masterfiles update from repository"
  [master c206654] Enable automatic masterfiles update from repository
   1 file changed, 1 insertion(+)
   create mode 100644 def.json
  [root@hub masterfiles]# git push
  warning: push.default is unset; its implicit value is changing in
  Git 2.0 from 'matching' to 'simple'. To squelch this message
  and maintain the current behavior after the default changes, use:

    git config --global push.default matching

  To squelch this message and adopt the new behavior now, use:

    git config --global push.default simple

  See 'git help config' and search for 'push.default' for further information.
  (the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
  'current' instead of 'simple' if you sometimes use older versions of Git)

  Counting objects: 4, done.
  Delta compression using up to 2 threads.
  Compressing objects: 100% (3/3), done.
  Writing objects: 100% (3/3), 370 bytes | 0 bytes/s, done.
  Total 3 (delta 1), reused 0 (delta 0)
  To /opt/cfengine/masterfiles.git
     a181449..c206654  master -> master
#+END_EXAMPLE

** Activate current update policy with enablement class
:PROPERTIES:
:ID:       c4897f12-c9e8-4f6c-860d-c033258c4c9f
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles]# cf-agent --no-lock \
  --verbose \
  --define cfengine_internal_masterfiles_update \
  --file update.cf
#+END_EXAMPLE

** Verify presence of def.json
:PROPERTIES:
:ID:       458ad6fd-9f5d-4e6c-9284-d3bf1bd796f4
:END:

#+BEGIN_EXAMPLE
  [root@hub masterfiles]# cat /var/cfengine/masterfiles/def.json
#+END_EXAMPLE

#+CAPTION: Speaker Notes
#+begin_notes
  As you recall, we put the def.json into the repository not in
  =/var/cfengine/masterfiles= directly. We want to make sure that masterfiles is
  updating from our repository.
#+end_notes

** Review
:PROPERTIES:
:ID:       8b086174-7afd-4113-b50a-d77c60d7216d
:END:

Now when the agent runs on hosts that define =policy_server= policy will be
activated that keeps =/var/cfengine/masterfiles= up to date with whats in the
repository as configured in mission portal (which by default is
=/opt/cfengine/masterfiles.git=).

This means new policy will be distributed as you push it into the repository.
[[https://en.wikipedia.org/wiki/Continuous_delivery][Continuous delivery]] FTW!

** Git command reference
:PROPERTIES:
:ID:       aa7df660-daf8-4842-af4c-4a30ce5acc0b
:END:

| ~git status~        | ~git pull --rebase~           |
| ~git diff~          | ~git grep~                    |
| ~git add~           | ~git log~                     |
| ~git diff --cached~ | ~git checkout -b new_feature~ |
| ~git commit~        | ~git push origin <branch>~    |

** Pop Quiz
:PROPERTIES:
:ID:       cb545ca0-bfe9-4115-a52a-f46b101cef43
:END:

#+ATTR_REVEAL: :frag roll-in
- Who was Mr. Slate?

#+ATTR_REVEAL: :frag roll-in
- How do you get an overview of the changes to your clone?

#+ATTR_REVEAL: :frag roll-in
- How can you easily search a git repository?

#+CAPTION: Speaker Notes
#+begin_notes
- Who was Mr. Slate? :: Fred Flintstones Boss on The Flintstones
- How do you get an overview of the changes to your clone? :: ~git status~
- How can you easily search a git repository? :: ~git grep~
#+end_notes
